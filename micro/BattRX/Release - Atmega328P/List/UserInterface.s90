///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V6.12.1.50500 for Atmel AVR       02/Aug/2014  01:50:57 /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    Source file  =  D:\Projects\BatteryCounter\_micro\BattRX\UserInterface. /
//                    cpp                                                     /
//    Command line =  D:\Projects\BatteryCounter\_micro\BattRX\UserInterface. /
//                    cpp --cpu=m328p -ms -o "D:\Projects\BatteryCounter\_mic /
//                    ro\BattRX\Release - Atmega328P\Obj\" -D NDEBUG -lA      /
//                    "D:\Projects\BatteryCounter\_micro\BattRX\Release -     /
//                    Atmega328P\List\" --initializers_in_flash               /
//                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e             /
//                    --eeprom_size 1024 --dlib --dlib_config "C:\Program     /
//                    Files (x86)\IAR Systems\Embedded Workbench              /
//                    6.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-sf-n.h" --eec++ -Ohs   /
//    List file    =  D:\Projects\BatteryCounter\_micro\BattRX\Release -      /
//                    Atmega328P\List\UserInterface.s90                       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME UserInterface

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__cpu", "3"
        RTMODEL "__cpu_name", "ATmega328P"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ?ML_FLASH_SRAM_16EC_16_L07
        EXTERN ?ML_SRAM_SRAM_16_L07
        EXTERN ?Register_R4_is_cg_reg
        EXTERN ?Register_R5_is_cg_reg
        EXTERN ?SS_DIVMOD_L02
        EXTERN ?UL_DIVMOD_L03
        EXTERN ?US_DIVMOD_L02
        EXTERN ?need_segment_init

        PUBWEAK `?<Segment init: NEAR_Z>`
        PUBLIC ??activeFunction
        PUBLIC ??activeFunctionChanged
        PUBLIC ??activeParmSpace
        PUBLIC ??checkDeviceSwitchOff
        FUNCTION ??checkDeviceSwitchOff,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??curStatisticRecord
        PUBLIC ??disable
        FUNCTION ??disable,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??displayDoneMessage
        FUNCTION ??displayDoneMessage,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??displayErrorMessage
        FUNCTION ??displayErrorMessage,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??displaySensorQuality
        FUNCTION ??displaySensorQuality,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??enable
        FUNCTION ??enable,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 1, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??enabled
        FUNCTION ??enabled,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??enterInterface
        FUNCTION ??enterInterface,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionAuthenticationScreen
        FUNCTION ??functionAuthenticationScreen,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionBatteryVoltage
        FUNCTION ??functionBatteryVoltage,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??functionCancel
        FUNCTION ??functionCancel,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionIncorrectFunction
        FUNCTION ??functionIncorrectFunction,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 20, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??functionMenu
        FUNCTION ??functionMenu,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionReportVisitorsTotal
        FUNCTION ??functionReportVisitorsTotal,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionReports
        FUNCTION ??functionReports,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??functionReset
        FUNCTION ??functionReset,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionResetNum
        FUNCTION ??functionResetNum,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSafeBattRemove
        FUNCTION ??functionSafeBattRemove,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??functionSensorQuality
        FUNCTION ??functionSensorQuality,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSerialNumber
        FUNCTION ??functionSerialNumber,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetCheckPassword
        FUNCTION ??functionSetCheckPassword,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??functionSetupBacklight
        FUNCTION ??functionSetupBacklight,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupBacklightMenu
        FUNCTION ??functionSetupBacklightMenu,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupDateTime
        FUNCTION ??functionSetupDateTime,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??functionSetupDetectionTime
        FUNCTION ??functionSetupDetectionTime,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupDetector
        FUNCTION ??functionSetupDetector,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupDetectorMenu
        FUNCTION ??functionSetupDetectorMenu,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupInactivityTime
        FUNCTION ??functionSetupInactivityTime,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupInventCnt
        FUNCTION ??functionSetupInventCnt,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupInventCntMenu
        FUNCTION ??functionSetupInventCntMenu,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupPassword
        FUNCTION ??functionSetupPassword,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupSaveMode
        FUNCTION ??functionSetupSaveMode,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupSaveModeMenu
        FUNCTION ??functionSetupSaveModeMenu,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupSummerTime
        FUNCTION ??functionSetupSummerTime,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupSummerTimeMenu
        FUNCTION ??functionSetupSummerTimeMenu,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupWorkDay
        FUNCTION ??functionSetupWorkDay,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??functionSetupWorkDayMenu
        FUNCTION ??functionSetupWorkDayMenu,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupWorkToday
        FUNCTION ??functionSetupWorkToday,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupWorkTodayMenu
        FUNCTION ??functionSetupWorkTodayMenu,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupWorkWeek
        FUNCTION ??functionSetupWorkWeek,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??getNextTransitionKey
        FUNCTION ??getNextTransitionKey,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??init
        FUNCTION ??init,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 1, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??initTransitionDownOnRefresh
        FUNCTION ??initTransitionDownOnRefresh,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??isEnabled
        PUBLIC ??isMenuActive
        PUBLIC ??isPhotoActive
        PUBLIC ??isTimeOutEnabled
        PUBLIC ??isTransition
        PUBLIC ??keyIterator
        PUBLIC ??leaveInterface
        FUNCTION ??leaveInterface,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBWEAK ??maxof
        FUNCTION ??maxof,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??menuActive
        FUNCTION ??menuActive,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??menuAuthLevel
        PUBLIC ??menuStack
        PUBLIC ??menuStackPos
        PUBWEAK ??minof
        FUNCTION ??minof,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??photoActive
        FUNCTION ??photoActive,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??processMenuOptionChanged
        FUNCTION ??processMenuOptionChanged,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??run
        FUNCTION ??run,061203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??setInactivityTimeTimeout
        FUNCTION ??setInactivityTimeTimeout,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??setRefreshTimeout
        FUNCTION ??setRefreshTimeout,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??setWorkDaySetup
        FUNCTION ??setWorkDaySetup,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??transitionDown
        FUNCTION ??transitionDown,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??transitionDownOnRefresh
        PUBLIC ??transitionKey
        PUBLIC ??transitionUp
        FUNCTION ??transitionUp,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??updateMenuStack
        FUNCTION ??updateMenuStack,0203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Notused
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 SameValue
          CFI R17 SameValue
          CFI R18 SameValue
          CFI R19 SameValue
          CFI R20 SameValue
          CFI R21 SameValue
          CFI R22 SameValue
          CFI R23 SameValue
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 SameValue
          CFI R31 SameValue
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI Y SameValue
          CFI EndCommon cfiCommon1
        
`?<Name GLOBAL 0>`  SYMBOL "GLOBAL"
`?<Name DeviceProfile 1>` SYMBOL "DeviceProfile", `?<Name GLOBAL 0>`
??DeviceAdvancedSetup SYMBOL "DeviceAdvancedSetup", `?<Name DeviceProfile 1>`
??DeviceCounterConfig SYMBOL "DeviceCounterConfig", `?<Name DeviceProfile 1>`
??DeviceSerialNumber SYMBOL "DeviceSerialNumber", `?<Name DeviceProfile 1>`
`?<Name RTC 5>`     SYMBOL "RTC", `?<Name GLOBAL 0>`
??RTCConfig         SYMBOL "RTCConfig", `?<Name RTC 5>`
??RTCDateTime       SYMBOL "RTCDateTime", `?<Name RTC 5>`
??UserInterfaceSetup SYMBOL "UserInterfaceSetup", `?<Name DeviceProfile 1>`
`?<Name LCDDriver 22>` SYMBOL "LCDDriver"
??displayState      SYMBOL "displayState", `?<Name LCDDriver 22>`
`?<Name Counter 52>` SYMBOL "Counter", `?<Name GLOBAL 0>`
`?<Name UserInterface 65>` SYMBOL "UserInterface"
??menuDescription   SYMBOL "menuDescription", `?<Name UserInterface 65>`
??menuFunctions     SYMBOL "menuFunctions", `?<Name UserInterface 65>`
??totalInCnt        SYMBOL "totalInCnt", `?<Name Counter 52>`
??totalOutCnt       SYMBOL "totalOutCnt", `?<Name Counter 52>`
??activeFunction    SYMBOL "activeFunction", `?<Name UserInterface 65>`
??activeFunctionChanged SYMBOL "activeFunctionChanged", `?<Name UserInterface 65>`
??activeParmSpace   SYMBOL "activeParmSpace", `?<Name UserInterface 65>`
??curStatisticRecord SYMBOL "curStatisticRecord", `?<Name UserInterface 65>`
??isEnabled         SYMBOL "isEnabled", `?<Name UserInterface 65>`
??isMenuActive      SYMBOL "isMenuActive", `?<Name UserInterface 65>`
??isPhotoActive     SYMBOL "isPhotoActive", `?<Name UserInterface 65>`
??isTimeOutEnabled  SYMBOL "isTimeOutEnabled", `?<Name UserInterface 65>`
??isTransition      SYMBOL "isTransition", `?<Name UserInterface 65>`
??keyIterator       SYMBOL "keyIterator", `?<Name UserInterface 65>`
??menuAuthLevel     SYMBOL "menuAuthLevel", `?<Name UserInterface 65>`
??menuStack         SYMBOL "menuStack", `?<Name UserInterface 65>`
??menuStackPos      SYMBOL "menuStackPos", `?<Name UserInterface 65>`
??transitionDownOnRefresh SYMBOL "transitionDownOnRefresh", `?<Name UserInterface 65>`
??transitionKey     SYMBOL "transitionKey", `?<Name UserInterface 65>`

        EXTERN ??DeviceAdvancedSetup
        EXTERN ??DeviceCounterConfig
        EXTERN ??DeviceSerialNumber
        EXTERN ??RTCConfig
        EXTERN ??RTCDateTime
        EXTERN ??UserInterfaceSetup
        EXTERN ??blockMemOperations
        FUNCTION ??blockMemOperations,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??blocked
        FUNCTION ??blocked,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??checkPasswordMaster
        FUNCTION ??checkPasswordMaster,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??checkPasswordReports
        FUNCTION ??checkPasswordReports,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??clearBuff
        FUNCTION ??clearBuff,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??clearBuffer
        FUNCTION ??clearBuffer,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??correctDateTime
        FUNCTION ??correctDateTime,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??disable_1
        FUNCTION ??disable_1,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??displayState
        EXTERN ??enable_1
        FUNCTION ??enable_1,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??enabled_1
        FUNCTION ??enabled_1,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getBatteryCurrentVoltage
        FUNCTION ??getBatteryCurrentVoltage,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getCounterQualityPct1
        FUNCTION ??getCounterQualityPct1,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getCounterQualityPct2
        FUNCTION ??getCounterQualityPct2,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getPeriodNumDay
        FUNCTION ??getPeriodNumDay,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getPeriodNumHour
        FUNCTION ??getPeriodNumHour,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getPeriodNumMonth
        FUNCTION ??getPeriodNumMonth,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getRTCDateTimeDay
        FUNCTION ??getRTCDateTimeDay,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getRTCDateTimeHour
        FUNCTION ??getRTCDateTimeHour,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getRTCDateTimeMonth
        FUNCTION ??getRTCDateTimeMonth,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getString
        FUNCTION ??getString,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getTimer
        FUNCTION ??getTimer,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getTotalDataReset
        FUNCTION ??getTotalDataReset,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getTotalFactoryReset
        FUNCTION ??getTotalFactoryReset,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getTotalPwdFails
        FUNCTION ??getTotalPwdFails,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getTotalRestarts
        FUNCTION ??getTotalRestarts,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??incPwdFails
        FUNCTION ??incPwdFails,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??isDeviceActiveBySchedule
        FUNCTION ??isDeviceActiveBySchedule,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??isUpdateCounter
        FUNCTION ??isUpdateCounter,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??menuDescription
        EXTERN ??menuFunctions
        EXTERN ??num2Buf
        FUNCTION ??num2Buf,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??popBuff
        FUNCTION ??popBuff,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??ready
        FUNCTION ??ready,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??ready_1
        FUNCTION ??ready_1,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??refreshDisplay
        FUNCTION ??refreshDisplay,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??resetCounters
        FUNCTION ??resetCounters,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??resetData
        FUNCTION ??resetData,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??resetFull
        FUNCTION ??resetFull,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??resetToFactoryDefaults
        FUNCTION ??resetToFactoryDefaults,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??saveDeviceAdvancedSetup
        FUNCTION ??saveDeviceAdvancedSetup,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??saveDeviceCounterConfig
        FUNCTION ??saveDeviceCounterConfig,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??saveDeviceStatus
        FUNCTION ??saveDeviceStatus,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??scheduleStatisticOperation
        FUNCTION ??scheduleStatisticOperation,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??setDateTime
        FUNCTION ??setDateTime,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??setPasswordMaster
        FUNCTION ??setPasswordMaster,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??setPasswordReports
        FUNCTION ??setPasswordReports,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??setSummerTimeRule
        FUNCTION ??setSummerTimeRule,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??setTimer
        FUNCTION ??setTimer,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??setUpdateCounter
        FUNCTION ??setUpdateCounter,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??str2Buf
        FUNCTION ??str2Buf,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??totalInCnt
        EXTERN ??totalOutCnt

// D:\Projects\BatteryCounter\_micro\BattRX\UserInterface.cpp
//    1 #ifndef __USERINTERFACE_CPP_
//    2 #define __USERINTERFACE_CPP_
//    3 
//    4 #include "UserInterface_Ref.h"

        RSEG CODE:CODE:NOROOT(1)
// __version_3 unsigned char Functions::Common::minof<unsigned char>(unsigned char, unsigned char)
??minof:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ??minof
        CP      R17, R16
        BRCS    ??minof_1
        MOV     R18, R16
        RJMP    ??minof_2
??minof_1:
        MOV     R18, R17
??minof_2:
        MOV     R16, R18
        RET
          CFI EndBlock cfiBlock0

        RSEG CODE:CODE:NOROOT(1)
// __version_3 unsigned char Functions::Common::maxof<unsigned char>(unsigned char, unsigned char)
??maxof:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ??maxof
        CP      R16, R17
        BRCS    ??maxof_1
        MOV     R18, R16
        RJMP    ??maxof_2
??maxof_1:
        MOV     R18, R17
??maxof_2:
        MOV     R16, R18
        RET
          CFI EndBlock cfiBlock1
//    5 
//    6 namespace UserInterface
//    7 {

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//    8   TMenuStackRecord menuStack[USER_MENU_STACK_SIZE];
??menuStack:
        DS8 50

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//    9   unsigned char menuStackPos = 0;
//   10   unsigned char activeFunction = USER_FUNCTION_NONE;
//   11   bool activeFunctionChanged = false;
//   12   unsigned char activeParmSpace[USER_MENU_ACTIVE_PARM_SPACE_SIZE];
//   13 
//   14   bool isEnabled = false;
//   15   bool isTimeOutEnabled = false;
//   16   bool isMenuActive = false;
//   17   bool isPhotoActive = false;
//   18   TMenuAuthLevel menuAuthLevel = MenuAuthLevel_None;
//   19   bool isTransition = false;
//   20   unsigned char transitionKey = 0;
//   21   bool transitionDownOnRefresh = false;
//   22   unsigned char keyIterator = 0;
//   23 
//   24   GLOBAL::Counter::TCounterStatisticRecord curStatisticRecord;
??curStatisticRecord:
        DS8 25
??menuStackPos:
        DS8 1
??activeFunction:
        DS8 1
??activeFunctionChanged:
        DS8 1
??isEnabled:
        DS8 1
??isTimeOutEnabled:
        DS8 1
??isMenuActive:
        DS8 1
??isPhotoActive:
        DS8 1
??menuAuthLevel:
        DS8 1
??isTransition:
        DS8 1
??transitionKey:
        DS8 1
??transitionDownOnRefresh:
        DS8 1
??keyIterator:
        DS8 1

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
??activeParmSpace:
        DS8 48
//   25 

        RSEG CODE:CODE:NOROOT(1)
//   26   void setInactivityTimeTimeout()
??setInactivityTimeTimeout:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function ??setInactivityTimeTimeout
//   27   {
//   28     isTimeOutEnabled = true;
        FUNCALL ??setInactivityTimeTimeout, ??setTimer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        LDI     R16, 1
        STS     (??curStatisticRecord + 29), R16
//   29 
//   30     GLOBAL::MultyThreading::setTimer(
//   31       GLOBALTIMERS_USERINTERFACE_TIMEOUT,
//   32       Functions::Common::minof<unsigned char>(Functions::Common::maxof<unsigned char>(5, DeviceAdvancedSetup.inactivityTime), 60) * 1000);
        LDS     R17, (??DeviceAdvancedSetup + 2)
        CPI     R17, 6
        BRCC    ??setInactivityTimeTimeout_1
        LDI     R16, 5
        RJMP    ??setInactivityTimeTimeout_2
??setInactivityTimeTimeout_1:
        MOV     R16, R17
        CPI     R17, 61
        BRCC    ??setInactivityTimeTimeout_3
??setInactivityTimeTimeout_2:
        MOV     R18, R16
        RJMP    ??setInactivityTimeTimeout_4
??setInactivityTimeTimeout_3:
        LDI     R18, 60
??setInactivityTimeTimeout_4:
        MOV     R16, R18
        LDI     R18, 232
        LDI     R19, 3
        MUL     R19, R16
        MOV     R19, R0
        MUL     R18, R16
        MOV     R18, R0
        ADD     R19, R1
        LDI     R16, 6
        JMP     ??setTimer
          CFI EndBlock cfiBlock2
//   33   }
//   34 

        RSEG CODE:CODE:NOROOT(1)
//   35   void setRefreshTimeout()
??setRefreshTimeout:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function ??setRefreshTimeout
//   36   {
//   37     GLOBAL::MultyThreading::setTimer(GLOBALTIMERS_USERINTERFACE_REFRESHTIME, USER_INTERFACE_REFRESH_TIMEOUT_MS);
        FUNCALL ??setRefreshTimeout, ??setTimer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        LDI     R18, 136
        LDI     R19, 19
        LDI     R16, 7
        JMP     ??setTimer
          CFI EndBlock cfiBlock3
//   38   }
//   39 

        RSEG CODE:CODE:NOROOT(1)
//   40   void initTransitionDownOnRefresh()
??initTransitionDownOnRefresh:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function ??initTransitionDownOnRefresh
//   41   {
//   42     transitionDownOnRefresh = true;
        FUNCALL ??initTransitionDownOnRefresh, ??setTimer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ??Subroutine128_0
//   43     transitionKey = 0;
//   44     isTransition = false;
//   45     GLOBAL::MultyThreading::setTimer(GLOBALTIMERS_USERINTERFACE_REFRESHTIME, USER_INTERFACE_MESSAGE_TIMEOUT_MS);
??CrossCallReturnLabel_312:
        JMP     ??setTimer
          CFI EndBlock cfiBlock4
//   46   }
//   47 

        RSEG CODE:CODE:NOROOT(1)
//   48   void updateMenuStack(unsigned char _menuStackPos, unsigned char _menuFunction)
??updateMenuStack:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function ??updateMenuStack
//   49   {
        MOV     R19, R27
        MOV     R2, R26
//   50     menuStack[_menuStackPos].menuFunction = _menuFunction;
        LDI     R18, 5
        MUL     R16, R18
        RCALL   ?Subroutine90
??CrossCallReturnLabel_188:
        ST      X, R17
//   51     menuStack[_menuStackPos].menuReference = menuFunctions[_menuFunction];
        LDI     R16, 3
        MUL     R17, R16
        LDI     R16, LOW(??menuFunctions)
        LDI     R17, (??menuFunctions) >> 8
        ADD     R16, R0
        ADC     R17, R1
        MOVW    R31:R30, R17:R16
        LPM     R20, Z+
        LPM     R21, Z+
        LPM     R22, Z
        MOVW    R31:R30, R27:R26
        ADIW    R31:R30, 1
        ST      Z, R20
        STD     Z+1, R21
        STD     Z+2, R22
//   52     menuStack[_menuStackPos].funcState = menuFunctions[_menuFunction].args.parm;
        MOVW    R31:R30, R27:R26
        STD     Z+4, R22
//   53   }
        MOV     R26, R2
        MOV     R27, R19
        RET
          CFI EndBlock cfiBlock5
//   54 

        RSEG CODE:CODE:NOROOT(1)
//   55   void transitionUp(unsigned char _menuFunction)
??transitionUp:
          CFI Block cfiBlock6 Using cfiCommon0
          CFI Function ??transitionUp
//   56   {
        FUNCALL ??transitionUp, ??updateMenuStack
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        LDI     R17, 0
        STS     (??curStatisticRecord + 34), R17
//   57     transitionKey = 0;
//   58 
//   59     if (_menuFunction && (menuStackPos < (USER_MENU_STACK_SIZE - 1)))
        TST     R16
        BREQ    ??CrossCallReturnLabel_299
        LDS     R17, (??curStatisticRecord + 25)
        CPI     R17, 9
        BRCC    ??CrossCallReturnLabel_299
//   60     {
//   61       menuStackPos++;
        INC     R17
        STS     (??curStatisticRecord + 25), R17
//   62       updateMenuStack(menuStackPos, _menuFunction);
        MOV     R17, R16
        LDS     R16, (??curStatisticRecord + 25)
        RCALL   ??Subroutine125_0
//   63       isTransition = true;
//   64     }
//   65   }
??CrossCallReturnLabel_299:
        RET
          CFI EndBlock cfiBlock6
//   66 

        RSEG CODE:CODE:NOROOT(1)
//   67   void enterInterface()
??enterInterface:
//   68   {
//   69     menuStackPos = 0;
        FUNCALL ??enterInterface, ??updateMenuStack
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        REQUIRE ?Subroutine5
        ;               // Fall through to label ?Subroutine5

        RSEG CODE:CODE:NOROOT(1)
?Subroutine5:
          CFI Block cfiCond7 Using cfiCommon0
          CFI Function ??enable
          CFI Conditional ??CrossCallReturnLabel_297
          CFI R24 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+1
          CFI Block cfiBlock8 Using cfiCommon0
          CFI (cfiBlock8) NoFunction
          CFI Block cfiPicker9 Using cfiCommon1
          CFI (cfiPicker9) NoFunction
          CFI (cfiPicker9) Picker
        LDI     R16, 0
          CFI EndBlock cfiCond7
          CFI EndBlock cfiBlock8
          CFI EndBlock cfiPicker9
        REQUIRE ??Subroutine124_0
        ;               // Fall through to label ??Subroutine124_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine124_0:
          CFI Block cfiCond10 Using cfiCommon0
          CFI Function ??leaveInterface
          CFI Conditional ??CrossCallReturnLabel_298
          CFI CFA_SP SP+4
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function ??enable
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond11) R24 Frame(CFA_Y, -1)
          CFI (cfiCond11) CFA_SP SP+4
          CFI (cfiCond11) CFA_Y Y+1
          CFI Block cfiBlock12 Using cfiCommon0
          CFI (cfiBlock12) NoFunction
          CFI Block cfiPicker13 Using cfiCommon1
          CFI (cfiPicker13) NoFunction
          CFI (cfiPicker13) Picker
        STS     (??curStatisticRecord + 25), R16
//   70     updateMenuStack(0, USER_FUNCTION_SCREENSAVER);
        LDI     R17, 1
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiBlock12
          CFI EndBlock cfiPicker13
        REQUIRE ??Subroutine125_0
        ;               // Fall through to label ??Subroutine125_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine125_0:
          CFI Block cfiCond14 Using cfiCommon0
          CFI Function ??transitionUp
          CFI Conditional ??CrossCallReturnLabel_299
          CFI CFA_SP SP+4
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function ??leaveInterface
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond15) CFA_SP SP+4
          CFI Block cfiCond16 Using cfiCommon0
          CFI (cfiCond16) Function ??enable
          CFI (cfiCond16) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond16) R24 Frame(CFA_Y, -1)
          CFI (cfiCond16) CFA_SP SP+4
          CFI (cfiCond16) CFA_Y Y+1
          CFI Block cfiBlock17 Using cfiCommon0
          CFI (cfiBlock17) NoFunction
          CFI Block cfiPicker18 Using cfiCommon1
          CFI (cfiPicker18) NoFunction
          CFI (cfiPicker18) Picker
        RCALL   ??updateMenuStack
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiCond16
          CFI EndBlock cfiBlock17
          CFI EndBlock cfiPicker18
//   71     isTransition = true;
        REQUIRE ??Subroutine126_0
        ;               // Fall through to label ??Subroutine126_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine126_0:
          CFI Block cfiCond19 Using cfiCommon0
          CFI Function ??run
          CFI Conditional ??CrossCallReturnLabel_300
          CFI CFA_SP SP+4
          CFI Block cfiCond20 Using cfiCommon0
          CFI (cfiCond20) Function ??run
          CFI (cfiCond20) Conditional ??CrossCallReturnLabel_301
          CFI (cfiCond20) CFA_SP SP+4
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function ??transitionUp
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_299
          CFI (cfiCond21) CFA_SP SP+4
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function ??leaveInterface
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_298
          CFI (cfiCond22) CFA_SP SP+4
          CFI Block cfiCond23 Using cfiCommon0
          CFI (cfiCond23) Function ??enable
          CFI (cfiCond23) Conditional ??CrossCallReturnLabel_297
          CFI (cfiCond23) R24 Frame(CFA_Y, -1)
          CFI (cfiCond23) CFA_SP SP+4
          CFI (cfiCond23) CFA_Y Y+1
          CFI Block cfiBlock24 Using cfiCommon0
          CFI (cfiBlock24) NoFunction
          CFI Block cfiPicker25 Using cfiCommon1
          CFI (cfiPicker25) NoFunction
          CFI (cfiPicker25) Picker
        LDI     R16, 1
        STS     (??curStatisticRecord + 33), R16
//   72   }
        RET
          CFI EndBlock cfiCond19
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiCond23
          CFI EndBlock cfiBlock24
          CFI EndBlock cfiPicker25
//   73 

        RSEG CODE:CODE:NOROOT(1)
//   74   void getNextTransitionKey()
??getNextTransitionKey:
          CFI Block cfiBlock26 Using cfiCommon0
          CFI Function ??getNextTransitionKey
//   75   {
        FUNCALL ??getNextTransitionKey, ??popBuff
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine33
??CrossCallReturnLabel_321:
        BREQ    ??CrossCallReturnLabel_196
//   76     if (keyIterator)
//   77     {
//   78       transitionKey = KeyBoardDriver::popBuff();
        RCALL   ?Subroutine97
//   79     }
//   80     else
//   81     {
//   82       transitionKey = 0;
??CrossCallReturnLabel_196:
        RJMP    ??Subroutine132_0
          CFI EndBlock cfiBlock26
//   83     }
//   84   }
//   85 

        RSEG CODE:CODE:NOROOT(1)
//   86   bool checkDeviceSwitchOff()
??checkDeviceSwitchOff:
          CFI Block cfiBlock27 Using cfiCommon0
          CFI Function ??checkDeviceSwitchOff
//   87   {
//   88     return (DeviceAdvancedSetup.batterySaveMode & DeviceBatterySaveMode_NoScreen) ||
//   89            ((UserInterfaceSetup.screenSaverSetup.screenSaverType == UserMenuScreenSaverType_None) &&
//   90             (UserInterfaceSetup.infoblockMain.infoblockType == UserMenuInfoblockType_None)) ||
//   91            (!MainThread::isDeviceActiveBySchedule());
        FUNCALL ??checkDeviceSwitchOff, ??isDeviceActiveBySchedule
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        LDS     R16, ??DeviceAdvancedSetup
        SBRC    R16, 1
        RJMP    ??checkDeviceSwitchOff_1
        LDS     R16, (??UserInterfaceSetup + 1)
        TST     R16
        BRNE    ??checkDeviceSwitchOff_2
        LDS     R16, (??UserInterfaceSetup + 34)
        TST     R16
        BREQ    ??checkDeviceSwitchOff_1
??checkDeviceSwitchOff_2:
        CALL    ??isDeviceActiveBySchedule
        ANDI    R16, 0x01
        LDI     R17, 1
        EOR     R16, R17
        RET
??checkDeviceSwitchOff_1:
        LDI     R16, 1
        RET
          CFI EndBlock cfiBlock27
//   92   }
//   93 

        RSEG CODE:CODE:NOROOT(1)
//   94   void leaveInterface()
??leaveInterface:
          CFI Block cfiBlock28 Using cfiCommon0
          CFI Function ??leaveInterface
//   95   {
//   96     if (checkDeviceSwitchOff())
        FUNCALL ??leaveInterface, ??checkDeviceSwitchOff
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??leaveInterface, ??disable
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??leaveInterface, ??updateMenuStack
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??leaveInterface, ??enable
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ??checkDeviceSwitchOff
        TST     R16
        LDS     R16, (??curStatisticRecord + 28)
        BREQ    ??leaveInterface_1
//   97     {
//   98       if (enabled())
        TST     R16
        BREQ    ??leaveInterface_2
//   99       {
//  100         disable();
        RCALL   ??disable
        RJMP    ??leaveInterface_2
//  101       }
//  102     }
//  103     else
//  104     {
//  105       if (enabled())
??leaveInterface_1:
        RCALL   ??Subroutine131_0
??CrossCallReturnLabel_320:
        BREQ    ??leaveInterface_3
//  106       {
//  107         enterInterface();
        RCALL   ??Subroutine124_0
//  108       }
??CrossCallReturnLabel_298:
        RJMP    ??leaveInterface_2
//  109       else
//  110       {
//  111         enable(false);
??leaveInterface_3:
        RCALL   ??enable
//  112       }
//  113     }
//  114 
//  115     isTimeOutEnabled = false;
??leaveInterface_2:
        LDI     R16, 0
        STS     (??curStatisticRecord + 29), R16
//  116     isMenuActive = false;
        STS     (??curStatisticRecord + 30), R16
//  117     isPhotoActive = false;
        RCALL   ?Subroutine36
//  118     menuAuthLevel = MenuAuthLevel_None;
??CrossCallReturnLabel_48:
        STS     (??curStatisticRecord + 32), R16
//  119   }
        RET
          CFI EndBlock cfiBlock28
//  120 

        RSEG CODE:CODE:NOROOT(1)
//  121   void transitionDown()
??transitionDown:
          CFI Block cfiBlock29 Using cfiCommon0
          CFI Function ??transitionDown
//  122   {
//  123     transitionKey = 0;
        FUNCALL ??transitionDown, ??checkDeviceSwitchOff
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??transitionDown, ??leaveInterface
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        LDI     R30, LOW(??curStatisticRecord)
        LDI     R31, (??curStatisticRecord) >> 8
        LDI     R16, 0
        STD     Z+34, R16
//  124 
//  125     if (menuStackPos > 0)
        LDD     R16, Z+25
        TST     R16
        BREQ    ??transitionDown_1
//  126     {
//  127       menuStackPos--;
        DEC     R16
        STD     Z+25, R16
//  128       isTransition = true;
        LDI     R16, 1
        STD     Z+33, R16
//  129 
//  130       if (menuStackPos == 0)
        BRNE    ??CrossCallReturnLabel_53
//  131       {
//  132         if (!checkDeviceSwitchOff())
        RCALL   ??checkDeviceSwitchOff
        TST     R16
        BRNE    ??CrossCallReturnLabel_53
//  133         {
//  134           leaveInterface();
//  135         }
//  136       }
//  137     }
//  138     else
//  139     {
//  140       leaveInterface();
??transitionDown_1:
        CALL    ?Subroutine37
//  141     }
//  142   }
??CrossCallReturnLabel_53:
        RET
          CFI EndBlock cfiBlock29
//  143 

        RSEG CODE:CODE:NOROOT(1)
//  144   void enable(bool _withUserKey)
??enable:
          CFI Block cfiBlock30 Using cfiCommon0
          CFI Function ??enable
//  145   {
        FUNCALL ??enable, ??enabled_1
        LOCFRAME CSTACK, 1, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??enable, ??enable_1
        LOCFRAME CSTACK, 1, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??enable, ??updateMenuStack
        LOCFRAME CSTACK, 1, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??enable, ??clearBuff
        LOCFRAME CSTACK, 1, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??enable, ??setInactivityTimeTimeout
        LOCFRAME CSTACK, 1, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??enable, ??setTimer
        LOCFRAME CSTACK, 1, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        ST      -Y, R24
          CFI R24 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        MOV     R24, R16
//  146     if (!LCDDriver::enabled())
        CALL    ??enabled_1
        TST     R16
        BRNE    ??enable_2
//  147     {
//  148       LCDDriver::enable();
        CALL    ??enable_1
//  149     }
??enable_2:
        RCALL   ?Subroutine5
//  150 
//  151     enterInterface();
//  152     KeyBoardDriver::clearBuff();
??CrossCallReturnLabel_297:
        CALL    ??clearBuff
//  153     activeFunction = USER_FUNCTION_NONE;
        LDI     R16, 0
        STS     (??curStatisticRecord + 26), R16
//  154     activeFunctionChanged = false;
        STS     (??curStatisticRecord + 27), R16
//  155     transitionDownOnRefresh = false;
        STS     (??curStatisticRecord + 35), R16
//  156 
//  157     if (_withUserKey)
        TST     R24
        BREQ    ??enable_3
//  158     {
//  159       isMenuActive = true;
        LDI     R16, 1
        STS     (??curStatisticRecord + 30), R16
//  160       setInactivityTimeTimeout();
        RCALL   ?Subroutine38
//  161     }
??CrossCallReturnLabel_56:
        RJMP    ??enable_4
//  162     else
//  163     {
//  164       isMenuActive = false;
??enable_3:
        STS     (??curStatisticRecord + 30), R16
//  165       isTimeOutEnabled = false;
        STS     (??curStatisticRecord + 29), R16
//  166     }
//  167 
//  168     menuAuthLevel = MenuAuthLevel_None;
??enable_4:
        LDI     R16, 0
        STS     (??curStatisticRecord + 32), R16
//  169     isPhotoActive = false;
        RCALL   ?Subroutine36
//  170 
//  171     setRefreshTimeout();
??CrossCallReturnLabel_49:
        CALL    ?Subroutine18
//  172 
//  173     isEnabled = true;
??CrossCallReturnLabel_185:
        LDI     R16, 1
        STS     (??curStatisticRecord + 28), R16
//  174   }
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock30

        RSEG CODE:CODE:NOROOT(1)
?Subroutine36:
          CFI Block cfiCond31 Using cfiCommon0
          CFI Function ??leaveInterface
          CFI Conditional ??CrossCallReturnLabel_48
          CFI CFA_SP SP+4
          CFI Block cfiCond32 Using cfiCommon0
          CFI (cfiCond32) Function ??enable
          CFI (cfiCond32) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond32) R24 Frame(CFA_Y, -1)
          CFI (cfiCond32) CFA_SP SP+4
          CFI (cfiCond32) CFA_Y Y+1
          CFI Block cfiCond33 Using cfiCommon0
          CFI (cfiCond33) Function ??functionSensorQuality
          CFI (cfiCond33) Conditional ??CrossCallReturnLabel_50
          CFI (cfiCond33) CFA_SP SP+4
          CFI Block cfiBlock34 Using cfiCommon0
          CFI (cfiBlock34) NoFunction
          CFI Block cfiPicker35 Using cfiCommon1
          CFI (cfiPicker35) NoFunction
          CFI (cfiPicker35) Picker
        STS     (??curStatisticRecord + 31), R16
        RET
          CFI EndBlock cfiCond31
          CFI EndBlock cfiCond32
          CFI EndBlock cfiCond33
          CFI EndBlock cfiBlock34
          CFI EndBlock cfiPicker35
//  175 

        RSEG CODE:CODE:NOROOT(1)
//  176   void disable()
??disable:
          CFI Block cfiBlock36 Using cfiCommon0
          CFI Function ??disable
//  177   {
//  178     isEnabled = false;
        FUNCALL ??disable, ??enabled_1
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??disable, ??disable_1
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??disable, ??setTimer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??disable, ??setTimer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        LDI     R16, 0
        STS     (??curStatisticRecord + 28), R16
//  179 
//  180     if (LCDDriver::enabled())
        CALL    ??enabled_1
        TST     R16
        BREQ    ??disable_2
//  181     {
//  182       LCDDriver::disable();
        CALL    ??disable_1
//  183     }
//  184 
//  185     GLOBAL::MultyThreading::setTimer(GLOBALTIMERS_USERINTERFACE_REFRESHTIME, 0);
??disable_2:
        LDI     R18, 0
        LDI     R19, 0
        CALL    ?Subroutine89
//  186     GLOBAL::MultyThreading::setTimer(GLOBALTIMERS_USERINTERFACE_TIMEOUT, 0);
??CrossCallReturnLabel_187:
        LDI     R18, 0
        LDI     R19, 0
        LDI     R16, 6
        JMP     ??setTimer
          CFI EndBlock cfiBlock36
//  187   }
//  188 

        RSEG CODE:CODE:NOROOT(1)
//  189   bool enabled()
??enabled:
          CFI Block cfiBlock37 Using cfiCommon0
          CFI Function ??enabled
//  190   {
//  191     return isEnabled;
        LDS     R16, (??curStatisticRecord + 28)
        RET
          CFI EndBlock cfiBlock37
//  192   }
//  193 

        RSEG CODE:CODE:NOROOT(1)
//  194   bool menuActive()
??menuActive:
          CFI Block cfiBlock38 Using cfiCommon0
          CFI Function ??menuActive
//  195   {
//  196     return isMenuActive;
        LDS     R16, (??curStatisticRecord + 30)
        RET
          CFI EndBlock cfiBlock38
//  197   }
//  198 

        RSEG CODE:CODE:NOROOT(1)
//  199   bool photoActive()
??photoActive:
          CFI Block cfiBlock39 Using cfiCommon0
          CFI Function ??photoActive
//  200   {
//  201     return isPhotoActive;
        LDS     R16, (??curStatisticRecord + 31)
        RET
          CFI EndBlock cfiBlock39
//  202   }
//  203 

        RSEG CODE:CODE:NOROOT(1)
//  204   __monitor void init()
??init:
          CFI Block cfiBlock40 Using cfiCommon0
          CFI Function ??init
//  205   {
        FUNCALL ??init, ??disable
        LOCFRAME CSTACK, 1, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        ST      -Y, R24
          CFI R24 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        IN      R24, 0x3F
        CLI
//  206     disable();
        RCALL   ??disable
//  207   }
        OUT     0x3F, R24
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock40
//  208 

        RSEG CODE:CODE:NOROOT(1)
//  209   void displayDoneMessage()
??displayDoneMessage:
          CFI Block cfiBlock41 Using cfiCommon0
          CFI Function ??displayDoneMessage
//  210   {
//  211     LCDDriver::clearBuffer();
        FUNCALL ??displayDoneMessage, ??clearBuffer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayDoneMessage, ??getString
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayDoneMessage, ??str2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayDoneMessage, ??refreshDisplay
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayDoneMessage, ??setTimer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine42
//  212     LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_MESSAGE_DONE), LCDDriver::LCDTextIdentation_Center);
??CrossCallReturnLabel_77:
        LDI     R16, 1
        RCALL   ?Subroutine1
??CrossCallReturnLabel_309:
        JMP     ??setTimer
          CFI EndBlock cfiBlock41
//  213     LCDDriver::refreshDisplay();
//  214 
//  215     initTransitionDownOnRefresh();
//  216   }

        RSEG CODE:CODE:NOROOT(1)
?Subroutine1:
          CFI Block cfiCond42 Using cfiCommon0
          CFI Function ??displayDoneMessage
          CFI Conditional ??CrossCallReturnLabel_309
          CFI CFA_SP SP+4
          CFI Block cfiCond43 Using cfiCommon0
          CFI (cfiCond43) Function ??displayErrorMessage
          CFI (cfiCond43) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond43) CFA_SP SP+4
          CFI Block cfiPicker44 Using cfiCommon1
          CFI (cfiPicker44) NoFunction
          CFI (cfiPicker44) Picker
        RCALL   ?Subroutine91
          CFI EndBlock cfiCond42
          CFI EndBlock cfiCond43
          CFI EndBlock cfiPicker44
??CrossCallReturnLabel_191:
        REQUIRE ??Subroutine127_0
        ;               // Fall through to label ??Subroutine127_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine127_0:
          CFI Block cfiCond45 Using cfiCommon0
          CFI Function ??functionIncorrectFunction
          CFI Conditional ??CrossCallReturnLabel_311
          CFI CFA_SP SP+4
          CFI CFA_Y Y+20
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function ??displayDoneMessage
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond46) CFA_SP SP+4
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function ??displayErrorMessage
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond47) CFA_SP SP+4
          CFI Block cfiPicker48 Using cfiCommon1
          CFI (cfiPicker48) NoFunction
          CFI (cfiPicker48) Picker
        RCALL   ?Subroutine119
??CrossCallReturnLabel_374:
        RCALL   ?Subroutine98
??CrossCallReturnLabel_308:
        RCALL   ?Subroutine93
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiPicker48
??CrossCallReturnLabel_387:
        REQUIRE ??Subroutine128_0
        ;               // Fall through to label ??Subroutine128_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine128_0:
          CFI Block cfiCond49 Using cfiCommon0
          CFI Function ??initTransitionDownOnRefresh
          CFI Conditional ??CrossCallReturnLabel_312
          CFI CFA_SP SP+4
          CFI Block cfiCond50 Using cfiCommon0
          CFI (cfiCond50) Function ??functionIncorrectFunction
          CFI (cfiCond50) Conditional ??CrossCallReturnLabel_311
          CFI (cfiCond50) CFA_SP SP+4
          CFI (cfiCond50) CFA_Y Y+20
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function ??displayDoneMessage
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_309
          CFI (cfiCond51) CFA_SP SP+4
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function ??displayErrorMessage
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_310
          CFI (cfiCond52) CFA_SP SP+4
          CFI Block cfiPicker53 Using cfiCommon1
          CFI (cfiPicker53) NoFunction
          CFI (cfiPicker53) Picker
        LDI     R30, LOW(??curStatisticRecord)
        LDI     R31, (??curStatisticRecord) >> 8
        LDI     R16, 1
        STD     Z+35, R16
        LDI     R16, 0
        STD     Z+34, R16
        STD     Z+33, R16
        LDI     R18, 208
        LDI     R19, 7
        LDI     R16, 7
        RET
          CFI EndBlock cfiCond49
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiPicker53
//  217 

        RSEG CODE:CODE:NOROOT(1)
//  218   void displayErrorMessage()
??displayErrorMessage:
          CFI Block cfiBlock54 Using cfiCommon0
          CFI Function ??displayErrorMessage
//  219   {
//  220     LCDDriver::clearBuffer();
        FUNCALL ??displayErrorMessage, ??clearBuffer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayErrorMessage, ??getString
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayErrorMessage, ??str2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayErrorMessage, ??refreshDisplay
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayErrorMessage, ??setTimer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine42
//  221     LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_MESSAGE_ERROR), LCDDriver::LCDTextIdentation_Center);
??CrossCallReturnLabel_76:
        LDI     R16, 2
        RCALL   ?Subroutine1
??CrossCallReturnLabel_310:
        JMP     ??setTimer
          CFI EndBlock cfiBlock54
//  222     LCDDriver::refreshDisplay();
//  223 
//  224     initTransitionDownOnRefresh();
//  225   }
//  226 

        RSEG CODE:CODE:NOROOT(1)
//  227   void processMenuOptionChanged()
??processMenuOptionChanged:
          CFI Block cfiBlock55 Using cfiCommon0
          CFI Function ??processMenuOptionChanged
//  228   {
//  229     transitionDown();
        FUNCALL ??processMenuOptionChanged, ??transitionDown
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??processMenuOptionChanged, ??displayDoneMessage
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ??Subroutine137_0
//  230     displayDoneMessage();
??CrossCallReturnLabel_414:
        RJMP    ??displayDoneMessage
          CFI EndBlock cfiBlock55
//  231   }
//  232 

        RSEG CODE:CODE:NOROOT(1)
//  233   void functionMenu()
??functionMenu:
          CFI Block cfiBlock56 Using cfiCommon0
          CFI Function ??functionMenu
//  234   {
        FUNCALL ??functionMenu, ??popBuff
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionMenu, ??clearBuffer
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionMenu, ??getString
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionMenu, ??str2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionMenu, ??getString
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionMenu, ??str2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionMenu, ??refreshDisplay
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionMenu, ??transitionUp
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine54
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+2
??CrossCallReturnLabel_101:
        RJMP    ??CrossCallReturnLabel_344
//  235     while (transitionKey)
//  236     {
//  237       switch (transitionKey)
//  238       {
//  239         case 1:
//  240           return;
//  241 
//  242         case 2:
//  243           if (menuStack[menuStackPos].funcState > menuStack[menuStackPos].menuReference.args.parm)
//  244           {
//  245             menuStack[menuStackPos].funcState--;
//  246           }
//  247           else
//  248           {
//  249             menuStack[menuStackPos].funcState = menuStack[menuStackPos].menuReference.args.parm;
//  250             while (menuDescription[menuStack[menuStackPos].funcState + 1].menuFunction != 0)
//  251             {
//  252               menuStack[menuStackPos].funcState++;
//  253             }
//  254           }
//  255           break;
//  256 
//  257         case 3:
//  258           menuStack[menuStackPos].funcState++;
//  259           if (menuDescription[menuStack[menuStackPos].funcState].menuFunction == 0)
//  260           {
//  261             menuStack[menuStackPos].funcState = menuStack[menuStackPos].menuReference.args.parm;
//  262           }
//  263           break;
//  264 
//  265         case 4:
//  266           transitionUp(menuDescription[menuStack[menuStackPos].funcState].menuFunction);
//  267           return;
//  268       }
//  269 
//  270       getNextTransitionKey();
??functionMenu_1:
        RCALL   ?Subroutine34
??CrossCallReturnLabel_344:
        RCALL   ?Subroutine50
??CrossCallReturnLabel_85:
        BREQ    ??CrossCallReturnLabel_333
        DEC     R16
        BREQ    ??CrossCallReturnLabel_399
        DEC     R16
        BREQ    ??functionMenu_2
        DEC     R16
        BREQ    ??functionMenu_3
        DEC     R16
        BREQ    ??functionMenu_4
        RJMP    ??functionMenu_5
??functionMenu_2:
        RCALL   ?Subroutine14
??CrossCallReturnLabel_189:
        ADIW    R27:R26, 3
        RCALL   ??Subroutine130_0
??CrossCallReturnLabel_316:
        SBIW    R27:R26, 4
        CP      R16, R17
        BRCC    ??functionMenu_6
        ADIW    R27:R26, 4
        MOV     R16, R17
        DEC     R16
??functionMenu_7:
        ST      X, R16
??functionMenu_5:
        RCALL   ?Subroutine33
??CrossCallReturnLabel_322:
        BRNE    ??functionMenu_1
        RCALL   ??Subroutine132_0
//  271     }
//  272 
//  273     LCDDriver::clearBuffer();
??CrossCallReturnLabel_333:
        RCALL   ?Subroutine42
//  274 
//  275     LCDDriver::str2Buf(0, getString(menuDescription[menuStack[menuStackPos].funcState].textRefLine0), LCDDriver::LCDTextIdentation_Center);
??CrossCallReturnLabel_75:
        RCALL   ?Subroutine3
??CrossCallReturnLabel_4:
        SUBI    R30, LOW((-(??menuDescription + 1) & 0xFFFF))
        SBCI    R31, HIGH((-(??menuDescription + 1) & 0xFFFF))
        LPM     R16, Z
        RCALL   ?Subroutine27
//  276     LCDDriver::str2Buf(1, getString(menuDescription[menuStack[menuStackPos].funcState].textRefLine1), LCDDriver::LCDTextIdentation_Center);
??CrossCallReturnLabel_362:
        RCALL   ?Subroutine3
??CrossCallReturnLabel_5:
        SUBI    R30, LOW((-(??menuDescription + 2) & 0xFFFF))
        SBCI    R31, HIGH((-(??menuDescription + 2) & 0xFFFF))
        LPM     R16, Z
        RCALL   ?Subroutine116
??CrossCallReturnLabel_272:
        LDI     R17, 0
        RCALL   ??Subroutine133_0
//  277 
//  278     LCDDriver::refreshDisplay();
??CrossCallReturnLabel_356:
        RCALL   ?Subroutine19
//  279 
//  280     isTransition = false;
//  281   }
??CrossCallReturnLabel_399:
        RJMP    ?Subroutine58
??functionMenu_6:
        MOV     R17, R16
        ADIW    R27:R26, 4
        ST      X, R16
        RCALL   ?Subroutine29
??CrossCallReturnLabel_37:
        BREQ    ??functionMenu_5
??functionMenu_8:
        RCALL   ?Subroutine56
??CrossCallReturnLabel_115:
        RCALL   ?Subroutine29
??CrossCallReturnLabel_38:
        BREQ    ??functionMenu_5
        RJMP    ??functionMenu_8
??functionMenu_3:
        RCALL   ?Subroutine14
??CrossCallReturnLabel_190:
        RCALL   ?Subroutine56
??CrossCallReturnLabel_114:
        RCALL   ?Subroutine84
??CrossCallReturnLabel_315:
        SUBI    R30, LOW((-(??menuDescription) & 0xFFFF))
        SBCI    R31, (-(??menuDescription) & 0xFFFF) >> 8
        LPM     R16, Z
        TST     R16
        BRNE    ??functionMenu_5
        ADIW    R27:R26, 3
        LD      R16, X+
        RJMP    ??functionMenu_7
??functionMenu_4:
        RCALL   ?Subroutine3
??CrossCallReturnLabel_6:
        SUBI    R30, LOW((-(??menuDescription) & 0xFFFF))
        SBCI    R31, (-(??menuDescription) & 0xFFFF) >> 8
        LPM     R16, Z
        RCALL   ??transitionUp
        RJMP    ??CrossCallReturnLabel_399
          CFI EndBlock cfiBlock56

        RSEG CODE:CODE:NOROOT(1)
?Subroutine84:
          CFI Block cfiCond57 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_315
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond58 Using cfiCommon0
          CFI (cfiCond58) Function ??functionMenu
          CFI (cfiCond58) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_37
          CFI (cfiCond58) R26 Frame(CFA_Y, -2)
          CFI (cfiCond58) R27 Frame(CFA_Y, -1)
          CFI (cfiCond58) CFA_SP SP+6
          CFI (cfiCond58) CFA_Y Y+2
          CFI Block cfiCond59 Using cfiCommon0
          CFI (cfiCond59) Function ??functionMenu
          CFI (cfiCond59) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_38
          CFI (cfiCond59) R26 Frame(CFA_Y, -2)
          CFI (cfiCond59) R27 Frame(CFA_Y, -1)
          CFI (cfiCond59) CFA_SP SP+6
          CFI (cfiCond59) CFA_Y Y+2
          CFI Block cfiPicker60 Using cfiCommon1
          CFI (cfiPicker60) NoFunction
          CFI (cfiPicker60) Picker
        SBIW    R27:R26, 4
          CFI EndBlock cfiCond57
          CFI EndBlock cfiCond58
          CFI EndBlock cfiCond59
          CFI EndBlock cfiPicker60
        REQUIRE ??Subroutine129_0
        ;               // Fall through to label ??Subroutine129_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine129_0:
          CFI Block cfiCond61 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function ??functionMenu
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond62) R26 Frame(CFA_Y, -2)
          CFI (cfiCond62) R27 Frame(CFA_Y, -1)
          CFI (cfiCond62) CFA_SP SP+4
          CFI (cfiCond62) CFA_Y Y+2
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function ??functionMenu
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond63) R26 Frame(CFA_Y, -2)
          CFI (cfiCond63) R27 Frame(CFA_Y, -1)
          CFI (cfiCond63) CFA_SP SP+4
          CFI (cfiCond63) CFA_Y Y+2
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function ??functionSetupDateTime
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_314
          CFI (cfiCond64) R26 Frame(CFA_Y, -2)
          CFI (cfiCond64) R27 Frame(CFA_Y, -1)
          CFI (cfiCond64) CFA_SP SP+4
          CFI (cfiCond64) CFA_Y Y+2
          CFI Block cfiCond65 Using cfiCommon0
          CFI (cfiCond65) Function ??functionMenu
          CFI (cfiCond65) Conditional ??CrossCallReturnLabel_315
          CFI (cfiCond65) R26 Frame(CFA_Y, -2)
          CFI (cfiCond65) R27 Frame(CFA_Y, -1)
          CFI (cfiCond65) CFA_SP SP+4
          CFI (cfiCond65) CFA_Y Y+2
          CFI Block cfiCond66 Using cfiCommon0
          CFI (cfiCond66) Function ??functionMenu
          CFI (cfiCond66) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_37
          CFI (cfiCond66) R26 Frame(CFA_Y, -2)
          CFI (cfiCond66) R27 Frame(CFA_Y, -1)
          CFI (cfiCond66) CFA_SP SP+6
          CFI (cfiCond66) CFA_Y Y+2
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function ??functionMenu
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_313, ??CrossCallReturnLabel_38
          CFI (cfiCond67) R26 Frame(CFA_Y, -2)
          CFI (cfiCond67) R27 Frame(CFA_Y, -1)
          CFI (cfiCond67) CFA_SP SP+6
          CFI (cfiCond67) CFA_Y Y+2
          CFI Block cfiPicker68 Using cfiCommon1
          CFI (cfiPicker68) NoFunction
          CFI (cfiPicker68) Picker
        LDI     R16, 3
        MUL     R17, R16
        MOVW    R31:R30, R1:R0
        RET
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiCond65
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiPicker68

        RSEG CODE:CODE:NOROOT(1)
?Subroutine56:
          CFI Block cfiCond69 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_115
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond70 Using cfiCommon0
          CFI (cfiCond70) Function ??functionMenu
          CFI (cfiCond70) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond70) R26 Frame(CFA_Y, -2)
          CFI (cfiCond70) R27 Frame(CFA_Y, -1)
          CFI (cfiCond70) CFA_SP SP+4
          CFI (cfiCond70) CFA_Y Y+2
          CFI Block cfiPicker71 Using cfiCommon1
          CFI (cfiPicker71) NoFunction
          CFI (cfiPicker71) Picker
        ADIW    R27:R26, 4
        LD      R16, X
        INC     R16
        ST      X, R16
        MOV     R17, R16
        RET
          CFI EndBlock cfiCond69
          CFI EndBlock cfiCond70
          CFI EndBlock cfiPicker71

        RSEG CODE:CODE:NOROOT(1)
?Subroutine29:
          CFI Block cfiCond72 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_37
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond73 Using cfiCommon0
          CFI (cfiCond73) Function ??functionMenu
          CFI (cfiCond73) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond73) R26 Frame(CFA_Y, -2)
          CFI (cfiCond73) R27 Frame(CFA_Y, -1)
          CFI (cfiCond73) CFA_SP SP+4
          CFI (cfiCond73) CFA_Y Y+2
          CFI Block cfiPicker74 Using cfiCommon1
          CFI (cfiPicker74) NoFunction
          CFI (cfiPicker74) Picker
        RCALL   ?Subroutine84
??CrossCallReturnLabel_313:
        SUBI    R30, LOW((-(??menuDescription + 3) & 0xFFFF))
        SBCI    R31, HIGH((-(??menuDescription + 3) & 0xFFFF))
        LPM     R16, Z
        TST     R16
        RET
          CFI EndBlock cfiCond72
          CFI EndBlock cfiCond73
          CFI EndBlock cfiPicker74

        RSEG CODE:CODE:NOROOT(1)
?Subroutine14:
          CFI Block cfiCond75 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_189
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond76 Using cfiCommon0
          CFI (cfiCond76) Function ??functionMenu
          CFI (cfiCond76) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond76) R26 Frame(CFA_Y, -2)
          CFI (cfiCond76) R27 Frame(CFA_Y, -1)
          CFI (cfiCond76) CFA_SP SP+4
          CFI (cfiCond76) CFA_Y Y+2
          CFI Block cfiPicker77 Using cfiCommon1
          CFI (cfiPicker77) NoFunction
          CFI (cfiPicker77) Picker
        RCALL   ?Subroutine120
          CFI EndBlock cfiCond75
          CFI EndBlock cfiCond76
          CFI EndBlock cfiPicker77
??CrossCallReturnLabel_283:
        REQUIRE ?Subroutine90
        ;               // Fall through to label ?Subroutine90

        RSEG CODE:CODE:NOROOT(1)
?Subroutine90:
          CFI Block cfiCond78 Using cfiCommon0
          CFI Function ??updateMenuStack
          CFI Conditional ??CrossCallReturnLabel_188
          CFI CFA_SP SP+4
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function ??functionMenu
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_189
          CFI (cfiCond79) R26 Frame(CFA_Y, -2)
          CFI (cfiCond79) R27 Frame(CFA_Y, -1)
          CFI (cfiCond79) CFA_SP SP+4
          CFI (cfiCond79) CFA_Y Y+2
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function ??functionMenu
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_190
          CFI (cfiCond80) R26 Frame(CFA_Y, -2)
          CFI (cfiCond80) R27 Frame(CFA_Y, -1)
          CFI (cfiCond80) CFA_SP SP+4
          CFI (cfiCond80) CFA_Y Y+2
          CFI Block cfiPicker81 Using cfiCommon1
          CFI (cfiPicker81) NoFunction
          CFI (cfiPicker81) Picker
        LDI     R26, LOW(??menuStack)
        LDI     R27, (??menuStack) >> 8
        ADD     R26, R0
        ADC     R27, R1
        RET
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiPicker81

        RSEG CODE:CODE:NOROOT(1)
?Subroutine3:
          CFI Block cfiCond82 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function ??functionMenu
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond83) R26 Frame(CFA_Y, -2)
          CFI (cfiCond83) R27 Frame(CFA_Y, -1)
          CFI (cfiCond83) CFA_SP SP+4
          CFI (cfiCond83) CFA_Y Y+2
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function ??functionMenu
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond84) R26 Frame(CFA_Y, -2)
          CFI (cfiCond84) R27 Frame(CFA_Y, -1)
          CFI (cfiCond84) CFA_SP SP+4
          CFI (cfiCond84) CFA_Y Y+2
          CFI Block cfiPicker85 Using cfiCommon1
          CFI (cfiPicker85) NoFunction
          CFI (cfiPicker85) Picker
        RCALL   ?Subroutine86
??CrossCallReturnLabel_291:
        LDD     R17, Z+4
        RJMP    ??Subroutine129_0
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiPicker85

        RSEG NEAR_F:CODE:NOROOT(0)
`?<Constant {(unsigned char)'\\t', (unsigned cha`:
        DC8 9, 73, 78, 67, 79, 82, 82, 69, 67, 84
        DC8 9, 70, 85, 78, 67, 84, 73, 79, 78, 33
//  282 
//  283   typedef struct
//  284   {
//  285     unsigned char lcdPos;
//  286     unsigned char dtSegment;
//  287     signed char difValue;
//  288   } TSetupDateTimeNavigationStruct;
//  289 
//  290 #define setupDateTimeNavigationStructSize     (12)

        RSEG NEAR_F:CODE:NOROOT(0)
//  291   __flash const TSetupDateTimeNavigationStruct setupDateTimeNavigationStruct[setupDateTimeNavigationStructSize] =
??setupDateTimeNavigationStruct:
        DC8 2, 0, 10, 3, 0, 1, 5, 1, 10, 6, 1, 1, 8, 2, 10, 9, 2, 1, 16, 3, 10
        DC8 17, 3, 1, 19, 4, 10, 20, 4, 1, 22, 5, 10, 23, 5, 1
//  292   {
//  293     {
//  294       .lcdPos = 2,
//  295       .dtSegment = 0,
//  296       .difValue = 10,
//  297     },
//  298     {
//  299       .lcdPos = 3,
//  300       .dtSegment = 0,
//  301       .difValue = 1,
//  302     },
//  303     {
//  304       .lcdPos = 5,
//  305       .dtSegment = 1,
//  306       .difValue = 10,
//  307     },
//  308     {
//  309       .lcdPos = 6,
//  310       .dtSegment = 1,
//  311       .difValue = 1,
//  312     },
//  313     {
//  314       .lcdPos = 8,
//  315       .dtSegment = 2,
//  316       .difValue = 10,
//  317     },
//  318     {
//  319       .lcdPos = 9,
//  320       .dtSegment = 2,
//  321       .difValue = 1,
//  322     },
//  323     {
//  324       .lcdPos = 16,
//  325       .dtSegment = 3,
//  326       .difValue = 10,
//  327     },
//  328     {
//  329       .lcdPos = 17,
//  330       .dtSegment = 3,
//  331       .difValue = 1,
//  332     },
//  333     {
//  334       .lcdPos = 19,
//  335       .dtSegment = 4,
//  336       .difValue = 10,
//  337     },
//  338     {
//  339       .lcdPos = 20,
//  340       .dtSegment = 4,
//  341       .difValue = 1,
//  342     },
//  343     {
//  344       .lcdPos = 22,
//  345       .dtSegment = 5,
//  346       .difValue = 10,
//  347     },
//  348     {
//  349       .lcdPos = 23,
//  350       .dtSegment = 5,
//  351       .difValue = 1,
//  352     },
//  353   };
//  354 

        RSEG CODE:CODE:NOROOT(1)
//  355   void functionSetupDateTime()
??functionSetupDateTime:
          CFI Block cfiBlock86 Using cfiCommon0
          CFI Function ??functionSetupDateTime
//  356   {
        FUNCALL ??functionSetupDateTime, ??popBuff
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDateTime, ??setDateTime
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDateTime, ??displayDoneMessage
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDateTime, ??correctDateTime
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDateTime, ??clearBuffer
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDateTime, ??num2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDateTime, ??num2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDateTime, ??num2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDateTime, ??num2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDateTime, ??num2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDateTime, ??num2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDateTime, ??refreshDisplay
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine53
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+2
??CrossCallReturnLabel_99:
        BREQ    ??CrossCallReturnLabel_345
//  357     GLOBAL::RTC::TRTCDateTime* curDateTime = (GLOBAL::RTC::TRTCDateTime*)activeParmSpace;
//  358     unsigned char* curStatus = (unsigned char*)(activeParmSpace + sizeof(GLOBAL::RTC::TRTCDateTime));
//  359 
//  360     if (activeFunctionChanged)
//  361     {
//  362       *curDateTime = GLOBAL::RTC::RTCDateTime;
        RCALL   ?Subroutine61
??CrossCallReturnLabel_132:
        LDI     R30, LOW(??RTCDateTime)
        LDI     R31, (??RTCDateTime) >> 8
        LDI     R20, 10
        RCALL   ?Subroutine47
//  363       *curStatus = 0;
??CrossCallReturnLabel_81:
        STS     (??activeParmSpace + 10), R20
        RJMP    ??CrossCallReturnLabel_345
//  364     }
//  365 
//  366     while (transitionKey)
//  367     {
//  368       signed char curDif;
//  369 
//  370       switch (transitionKey)
//  371       {
//  372         case 1:
//  373           if (*curStatus > 0)
//  374           {
//  375             (*curStatus)--;
//  376           }
//  377           else
//  378           {
//  379             return;
//  380           }
//  381           break;
//  382 
//  383         case 4:
//  384           (*curStatus)++;
//  385           if (*curStatus >= setupDateTimeNavigationStructSize)
//  386           {
//  387             GLOBAL::RTC::setDateTime(curDateTime);
//  388 
//  389             displayDoneMessage();
//  390             return;
//  391           }
//  392           break;
//  393 
//  394         case 2:
//  395         case 3:
//  396           curDif = ((transitionKey == 2) ? -1 : 1) * setupDateTimeNavigationStruct[*curStatus].difValue;
//  397           switch (setupDateTimeNavigationStruct[*curStatus].dtSegment)
//  398           {
//  399             case 0:
//  400               curDateTime->year += curDif;
//  401               break;
//  402 
//  403             case 1:
//  404               curDateTime->month += curDif;
//  405               break;
//  406 
//  407             case 2:
//  408               curDateTime->day += curDif;
//  409               break;
//  410 
//  411             case 3:
//  412               curDateTime->hour += curDif;
//  413               break;
//  414 
//  415             case 4:
//  416               curDateTime->minute += curDif;
//  417               break;
//  418 
//  419             case 5:
//  420               curDateTime->second += curDif;
//  421               break;
//  422           }
//  423 
//  424           GLOBAL::RTC::correctDateTime(curDateTime, (curDif >= 0));
//  425           break;
//  426       }
//  427 
//  428       getNextTransitionKey();
??functionSetupDateTime_1:
        RCALL   ?Subroutine34
??CrossCallReturnLabel_345:
        RCALL   ?Subroutine50
??CrossCallReturnLabel_86:
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_334
        MOV     R17, R16
        DEC     R17
        BREQ    ??functionSetupDateTime_2
        DEC     R17
        BREQ    ??functionSetupDateTime_3
        DEC     R17
        BREQ    ??functionSetupDateTime_3
        DEC     R17
        BREQ    ??functionSetupDateTime_4
        RJMP    ??functionSetupDateTime_5
??functionSetupDateTime_2:
        LDI     R26, LOW((??activeParmSpace + 10))
        LDI     R27, HIGH((??activeParmSpace + 10))
        LDS     R16, (??activeParmSpace + 10)
        TST     R16
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_402
        DEC     R16
        ST      X, R16
        RJMP    ??functionSetupDateTime_5
??functionSetupDateTime_4:
        LDI     R26, LOW((??activeParmSpace + 10))
        LDI     R27, HIGH((??activeParmSpace + 10))
        LD      R16, X
        INC     R16
        ST      X, R16
        SBIW    R27:R26, 10
        CPI     R16, 12
        BRCC    $+2+2
        RJMP    ??functionSetupDateTime_5
        MOVW    R17:R16, R27:R26
        CALL    ??setDateTime
        RCALL   ?Subroutine60
??CrossCallReturnLabel_131:
        RJMP    ??CrossCallReturnLabel_402
??functionSetupDateTime_3:
        CPI     R16, 2
        BRNE    ??functionSetupDateTime_6
        LDI     R16, 255
        RJMP    ??functionSetupDateTime_7
??functionSetupDateTime_6:
        LDI     R16, 1
??functionSetupDateTime_7:
        RCALL   ?Subroutine104
??CrossCallReturnLabel_212:
        LDS     R19, (??activeParmSpace + 10)
        LDI     R18, 3
        MUL     R19, R18
        LDI     R30, LOW(??setupDateTimeNavigationStruct)
        LDI     R31, (??setupDateTimeNavigationStruct) >> 8
        ADD     R30, R0
        ADC     R31, R1
        ADIW    R31:R30, 2
        LPM     R17, Z
        SBIW    R31:R30, 1
        MUL     R16, R17
        LPM     R16, Z
        TST     R16
        BREQ    ??functionSetupDateTime_8
        DEC     R16
        BREQ    ??functionSetupDateTime_9
        DEC     R16
        BREQ    ??functionSetupDateTime_10
        DEC     R16
        BREQ    ??functionSetupDateTime_11
        DEC     R16
        BREQ    ??functionSetupDateTime_12
        DEC     R16
        BREQ    ??functionSetupDateTime_13
        RJMP    ??functionSetupDateTime_14
??functionSetupDateTime_8:
        MOV     R1, R0
        LSL     R1
        SBC     R1, R1
        RCALL   ??Subroutine130_0
??CrossCallReturnLabel_317:
        ADD     R16, R0
        ADC     R17, R1
        ST      X, R17
        ST      -X, R16
        RJMP    ??functionSetupDateTime_14
??functionSetupDateTime_9:
        ADIW    R27:R26, 2
        RCALL   ?Subroutine30
??CrossCallReturnLabel_39:
        SBIW    R27:R26, 2
        RJMP    ??functionSetupDateTime_14
??functionSetupDateTime_10:
        ADIW    R27:R26, 3
        RCALL   ?Subroutine30
??CrossCallReturnLabel_40:
        SBIW    R27:R26, 3
        RJMP    ??functionSetupDateTime_14
??functionSetupDateTime_11:
        ADIW    R27:R26, 4
        RCALL   ?Subroutine30
??CrossCallReturnLabel_41:
        SBIW    R27:R26, 4
        RJMP    ??functionSetupDateTime_14
??functionSetupDateTime_12:
        ADIW    R27:R26, 5
        RCALL   ?Subroutine30
??CrossCallReturnLabel_42:
        SBIW    R27:R26, 5
        RJMP    ??functionSetupDateTime_14
??functionSetupDateTime_13:
        ADIW    R27:R26, 6
        RCALL   ?Subroutine30
??CrossCallReturnLabel_43:
        SBIW    R27:R26, 6
??functionSetupDateTime_14:
        TST     R0
        BRMI    ??functionSetupDateTime_15
        LDI     R18, 1
        RJMP    ??functionSetupDateTime_16
??functionSetupDateTime_15:
        LDI     R18, 0
??functionSetupDateTime_16:
        MOVW    R17:R16, R27:R26
        CALL    ??correctDateTime
??functionSetupDateTime_5:
        RCALL   ?Subroutine33
//  429     }
??CrossCallReturnLabel_323:
        BREQ    $+2+2
        RJMP    ??functionSetupDateTime_1
        RCALL   ??Subroutine132_0
//  430 
//  431     LCDDriver::clearBuffer();
??CrossCallReturnLabel_334:
        RCALL   ?Subroutine41
//  432 
//  433     LCDDriver::num2Buf(0, 3, curDateTime->year, 4, LCD_DISPLAY_SYMBOL_SPACE);
??CrossCallReturnLabel_62:
        LDI     R19, 32
        LDI     R18, 4
        LD      R20, X+
        LD      R21, X
        RCALL   ?Subroutine21
//  434     LCDDriver::displayState.line[0][4] = LCD_DISPLAY_SYMBOL_DASH;
//  435     LCDDriver::num2Buf(0, 6, curDateTime->month, 2, '0');
??CrossCallReturnLabel_24:
        LDS     R20, (??activeParmSpace + 2)
        RCALL   ?Subroutine22
//  436     LCDDriver::displayState.line[0][7] = LCD_DISPLAY_SYMBOL_DASH;
//  437     LCDDriver::num2Buf(0, 9, curDateTime->day, 2, '0');
??CrossCallReturnLabel_26:
        LDS     R20, (??activeParmSpace + 3)
        RCALL   ?Subroutine23
//  438 
//  439     LCDDriver::num2Buf(1, 1, curDateTime->hour, 2, LCD_DISPLAY_SYMBOL_SPACE);
??CrossCallReturnLabel_279:
        LDI     R19, 32
        LDI     R18, 2
        LDS     R20, (??activeParmSpace + 4)
        RCALL   ?Subroutine99
??CrossCallReturnLabel_198:
        LDI     R17, 1
        RCALL   ?Subroutine8
??CrossCallReturnLabel_12:
        STS     (??displayState + 22), R16
//  440     LCDDriver::displayState.line[1][2] = LCD_DISPLAY_SYMBOL_COLON;
//  441     LCDDriver::num2Buf(1, 4, curDateTime->minute, 2, '0');
        RCALL   ?Subroutine66
??CrossCallReturnLabel_142:
        LDS     R20, (??activeParmSpace + 5)
        RCALL   ?Subroutine99
??CrossCallReturnLabel_199:
        LDI     R17, 4
        RCALL   ?Subroutine8
??CrossCallReturnLabel_13:
        STS     (??displayState + 25), R16
//  442     LCDDriver::displayState.line[1][5] = LCD_DISPLAY_SYMBOL_COLON;
//  443     LCDDriver::num2Buf(1, 7, curDateTime->second, 2, '0');
        RCALL   ?Subroutine66
??CrossCallReturnLabel_143:
        LDS     R20, (??activeParmSpace + 6)
        RCALL   ?Subroutine99
??CrossCallReturnLabel_200:
        LDI     R17, 7
        RCALL   ?Subroutine115
//  444 
//  445     LCDDriver::displayState.line[1][9] = curDateTime->summerTime ? LCD_DISPLAY_SYMBOL_SUN : LCD_DISPLAY_SYMBOL_SPACE;
??CrossCallReturnLabel_393:
        LDS     R16, (??activeParmSpace + 9)
        TST     R16
        BREQ    ??functionSetupDateTime_17
        LDI     R16, 238
        RJMP    ??functionSetupDateTime_18
??functionSetupDateTime_17:
        LDI     R16, 32
??functionSetupDateTime_18:
        STS     (??displayState + 29), R16
//  446 
//  447     LCDDriver::refreshDisplay(
//  448       LCDDriver::LCDDisplayMode_BlinkCursor,
//  449       setupDateTimeNavigationStruct[*curStatus].lcdPos / LCD_DISPLAY_WIDTH,
//  450       setupDateTimeNavigationStruct[*curStatus].lcdPos % LCD_DISPLAY_WIDTH);
        LDS     R17, (??activeParmSpace + 10)
        RCALL   ??Subroutine129_0
??CrossCallReturnLabel_314:
        SUBI    R30, LOW((-(??setupDateTimeNavigationStruct) & 0xFFFF))
        SBCI    R31, (-(??setupDateTimeNavigationStruct) & 0xFFFF) >> 8
        LPM     R17, Z
        RCALL   ?Subroutine98
??CrossCallReturnLabel_302:
        MOV     R18, R17
        ANDI    R18, 0x0F
        SWAP    R17
        ANDI    R17, 0x0F
        LDI     R16, 13
        RCALL   ??Subroutine135_0
//  451 
//  452     isTransition = false;
//  453   }
??CrossCallReturnLabel_402:
        RJMP    ?Subroutine58
          CFI EndBlock cfiBlock86

        RSEG NEAR_F:CODE:NOROOT(0)
??setupWorkDayDiffValues:
        DC16 600, 60, 10, 1
        DC8 2, 3, 5, 6, 10, 11, 13, 14

        RSEG CODE:CODE:NOROOT(1)
?Subroutine57:
          CFI Block cfiCond87 Using cfiCommon0
          CFI Function ??functionSetupWorkDay
          CFI Conditional ??CrossCallReturnLabel_318
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond88 Using cfiCommon0
          CFI (cfiCond88) Function ??functionSetupWorkDay
          CFI (cfiCond88) Conditional ??CrossCallReturnLabel_319
          CFI (cfiCond88) R24 Frame(CFA_Y, -4)
          CFI (cfiCond88) R25 Frame(CFA_Y, -3)
          CFI (cfiCond88) R26 Frame(CFA_Y, -2)
          CFI (cfiCond88) R27 Frame(CFA_Y, -1)
          CFI (cfiCond88) CFA_SP SP+4
          CFI (cfiCond88) CFA_Y Y+4
          CFI Block cfiPicker89 Using cfiCommon1
          CFI (cfiPicker89) NoFunction
          CFI (cfiPicker89) Picker
        LDI     R18, 2
        LDI     R20, 60
        LDI     R21, 0
          CFI EndBlock cfiCond87
          CFI EndBlock cfiCond88
          CFI EndBlock cfiPicker89
        REQUIRE ??Subroutine130_0
        ;               // Fall through to label ??Subroutine130_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine130_0:
          CFI Block cfiCond90 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_316
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond91 Using cfiCommon0
          CFI (cfiCond91) Function ??functionSetupDateTime
          CFI (cfiCond91) Conditional ??CrossCallReturnLabel_317
          CFI (cfiCond91) R26 Frame(CFA_Y, -2)
          CFI (cfiCond91) R27 Frame(CFA_Y, -1)
          CFI (cfiCond91) CFA_SP SP+4
          CFI (cfiCond91) CFA_Y Y+2
          CFI Block cfiCond92 Using cfiCommon0
          CFI (cfiCond92) Function ??functionSetupWorkDay
          CFI (cfiCond92) Conditional ??CrossCallReturnLabel_318
          CFI (cfiCond92) R24 Frame(CFA_Y, -4)
          CFI (cfiCond92) R25 Frame(CFA_Y, -3)
          CFI (cfiCond92) R26 Frame(CFA_Y, -2)
          CFI (cfiCond92) R27 Frame(CFA_Y, -1)
          CFI (cfiCond92) CFA_SP SP+4
          CFI (cfiCond92) CFA_Y Y+4
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function ??functionSetupWorkDay
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_319
          CFI (cfiCond93) R24 Frame(CFA_Y, -4)
          CFI (cfiCond93) R25 Frame(CFA_Y, -3)
          CFI (cfiCond93) R26 Frame(CFA_Y, -2)
          CFI (cfiCond93) R27 Frame(CFA_Y, -1)
          CFI (cfiCond93) CFA_SP SP+4
          CFI (cfiCond93) CFA_Y Y+4
          CFI Block cfiPicker94 Using cfiCommon1
          CFI (cfiPicker94) NoFunction
          CFI (cfiPicker94) Picker
        LD      R16, X+
        LD      R17, X
        RET
          CFI EndBlock cfiCond90
          CFI EndBlock cfiCond91
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiPicker94

        RSEG CODE:CODE:NOROOT(1)
?Subroutine30:
          CFI Block cfiCond95 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_39
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function ??functionSetupDateTime
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond96) R26 Frame(CFA_Y, -2)
          CFI (cfiCond96) R27 Frame(CFA_Y, -1)
          CFI (cfiCond96) CFA_SP SP+4
          CFI (cfiCond96) CFA_Y Y+2
          CFI Block cfiCond97 Using cfiCommon0
          CFI (cfiCond97) Function ??functionSetupDateTime
          CFI (cfiCond97) Conditional ??CrossCallReturnLabel_41
          CFI (cfiCond97) R26 Frame(CFA_Y, -2)
          CFI (cfiCond97) R27 Frame(CFA_Y, -1)
          CFI (cfiCond97) CFA_SP SP+4
          CFI (cfiCond97) CFA_Y Y+2
          CFI Block cfiCond98 Using cfiCommon0
          CFI (cfiCond98) Function ??functionSetupDateTime
          CFI (cfiCond98) Conditional ??CrossCallReturnLabel_42
          CFI (cfiCond98) R26 Frame(CFA_Y, -2)
          CFI (cfiCond98) R27 Frame(CFA_Y, -1)
          CFI (cfiCond98) CFA_SP SP+4
          CFI (cfiCond98) CFA_Y Y+2
          CFI Block cfiCond99 Using cfiCommon0
          CFI (cfiCond99) Function ??functionSetupDateTime
          CFI (cfiCond99) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond99) R26 Frame(CFA_Y, -2)
          CFI (cfiCond99) R27 Frame(CFA_Y, -1)
          CFI (cfiCond99) CFA_SP SP+4
          CFI (cfiCond99) CFA_Y Y+2
          CFI Block cfiPicker100 Using cfiCommon1
          CFI (cfiPicker100) NoFunction
          CFI (cfiPicker100) Picker
        LD      R16, X
        ADD     R16, R0
        ST      X, R16
        RET
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiCond97
          CFI EndBlock cfiCond98
          CFI EndBlock cfiCond99
          CFI EndBlock cfiPicker100

        RSEG CODE:CODE:NOROOT(1)
?Subroutine23:
          CFI Block cfiCond101 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_279
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond102 Using cfiCommon0
          CFI (cfiCond102) Function ??functionReports
          CFI (cfiCond102) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond102) R24 Frame(CFA_Y, -3)
          CFI (cfiCond102) R26 Frame(CFA_Y, -2)
          CFI (cfiCond102) R27 Frame(CFA_Y, -1)
          CFI (cfiCond102) CFA_SP SP+4
          CFI (cfiCond102) CFA_Y Y+13
          CFI Block cfiPicker103 Using cfiCommon1
          CFI (cfiPicker103) NoFunction
          CFI (cfiPicker103) Picker
        RCALL   ?Subroutine99
??CrossCallReturnLabel_207:
        LDI     R17, 9
          CFI EndBlock cfiCond101
          CFI EndBlock cfiCond102
          CFI EndBlock cfiPicker103
        REQUIRE ?Subroutine118
        ;               // Fall through to label ?Subroutine118

        RSEG CODE:CODE:NOROOT(1)
?Subroutine118:
          CFI Block cfiCond104 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_279
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond105 Using cfiCommon0
          CFI (cfiCond105) Function ??functionReports
          CFI (cfiCond105) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond105) R24 Frame(CFA_Y, -3)
          CFI (cfiCond105) R26 Frame(CFA_Y, -2)
          CFI (cfiCond105) R27 Frame(CFA_Y, -1)
          CFI (cfiCond105) CFA_SP SP+4
          CFI (cfiCond105) CFA_Y Y+13
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function ??functionReports
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond106) R24 Frame(CFA_Y, -3)
          CFI (cfiCond106) R26 Frame(CFA_Y, -2)
          CFI (cfiCond106) R27 Frame(CFA_Y, -1)
          CFI (cfiCond106) CFA_SP SP+4
          CFI (cfiCond106) CFA_Y Y+13
          CFI Block cfiCond107 Using cfiCommon0
          CFI (cfiCond107) Function ??functionReports
          CFI (cfiCond107) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond107) R24 Frame(CFA_Y, -3)
          CFI (cfiCond107) R26 Frame(CFA_Y, -2)
          CFI (cfiCond107) R27 Frame(CFA_Y, -1)
          CFI (cfiCond107) CFA_SP SP+4
          CFI (cfiCond107) CFA_Y Y+13
          CFI Block cfiCond108 Using cfiCommon0
          CFI (cfiCond108) Function ??functionReports
          CFI (cfiCond108) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond108) R24 Frame(CFA_Y, -3)
          CFI (cfiCond108) R26 Frame(CFA_Y, -2)
          CFI (cfiCond108) R27 Frame(CFA_Y, -1)
          CFI (cfiCond108) CFA_SP SP+4
          CFI (cfiCond108) CFA_Y Y+13
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function ??functionSetupDateTime
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_26
          CFI (cfiCond109) R26 Frame(CFA_Y, -2)
          CFI (cfiCond109) R27 Frame(CFA_Y, -1)
          CFI (cfiCond109) CFA_SP SP+8
          CFI (cfiCond109) CFA_Y Y+2
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function ??functionReports
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_27
          CFI (cfiCond110) R24 Frame(CFA_Y, -3)
          CFI (cfiCond110) R26 Frame(CFA_Y, -2)
          CFI (cfiCond110) R27 Frame(CFA_Y, -1)
          CFI (cfiCond110) CFA_SP SP+8
          CFI (cfiCond110) CFA_Y Y+13
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function ??functionSetupDateTime
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_24
          CFI (cfiCond111) R26 Frame(CFA_Y, -2)
          CFI (cfiCond111) R27 Frame(CFA_Y, -1)
          CFI (cfiCond111) CFA_SP SP+8
          CFI (cfiCond111) CFA_Y Y+2
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function ??functionReports
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_25
          CFI (cfiCond112) R24 Frame(CFA_Y, -3)
          CFI (cfiCond112) R26 Frame(CFA_Y, -2)
          CFI (cfiCond112) R27 Frame(CFA_Y, -1)
          CFI (cfiCond112) CFA_SP SP+8
          CFI (cfiCond112) CFA_Y Y+13
          CFI Block cfiPicker113 Using cfiCommon1
          CFI (cfiPicker113) NoFunction
          CFI (cfiPicker113) Picker
        LDI     R16, 0
        RJMP    ?Subroutine122
          CFI EndBlock cfiCond104
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiCond107
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiPicker113
//  454 

        RSEG CODE:CODE:NOROOT(1)
//  455   void functionCancel()
??functionCancel:
          CFI Block cfiBlock114 Using cfiCommon0
          CFI Function ??functionCancel
//  456   {
//  457     transitionDown();
        FUNCALL ??functionCancel, ??transitionDown
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionCancel, ??transitionDown
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ??Subroutine137_0
//  458     transitionDown();
??CrossCallReturnLabel_413:
        RJMP    ??transitionDown
          CFI EndBlock cfiBlock114
//  459   }
//  460 

        RSEG CODE:CODE:NOROOT(1)
//  461   void functionIncorrectFunction()
??functionIncorrectFunction:
          CFI Block cfiBlock115 Using cfiCommon0
          CFI Function ??functionIncorrectFunction
//  462   {
        FUNCALL ??functionIncorrectFunction, ??clearBuffer
        LOCFRAME CSTACK, 20, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionIncorrectFunction, ??str2Buf
        LOCFRAME CSTACK, 20, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionIncorrectFunction, ??str2Buf
        LOCFRAME CSTACK, 20, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionIncorrectFunction, ??refreshDisplay
        LOCFRAME CSTACK, 20, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionIncorrectFunction, ??setTimer
        LOCFRAME CSTACK, 20, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        SBIW    R29:R28, 20
          CFI CFA_Y Y+20
//  463     unsigned char curIncorrectFunctionL1[] = {9, 'I', 'N', 'C', 'O', 'R', 'R', 'E', 'C', 'T'};
        MOVW    R19:R18, R29:R28
        SUBI    R18, 246
        SBCI    R19, 255
        LDI     R30, LOW(`?<Constant {(unsigned char)'\\t', (unsigned cha`)
        LDI     R31, (`?<Constant {(unsigned char)'\\t', (unsigned cha`) >> 8
        MOVW    R17:R16, R19:R18
        LDI     R20, 10
        LDI     R21, 0
        CALL    ?ML_FLASH_SRAM_16EC_16_L07
//  464     unsigned char curIncorrectFunctionL2[] = {9, 'F', 'U', 'N', 'C', 'T', 'I', 'O', 'N', '!'};
        MOVW    R17:R16, R29:R28
        LDI     R20, 10
        CALL    ?ML_FLASH_SRAM_16EC_16_L07
//  465 
//  466     LCDDriver::clearBuffer();
        RCALL   ?Subroutine42
//  467 
//  468     LCDDriver::str2Buf(0, curIncorrectFunctionL1, LCDDriver::LCDTextIdentation_Center);
??CrossCallReturnLabel_74:
        RCALL   ?Subroutine100
??CrossCallReturnLabel_208:
        MOVW    R21:R20, R29:R28
        SUBI    R20, 246
        SBCI    R21, 255
        LDI     R22, 0
        RCALL   ?Subroutine96
//  469     LCDDriver::str2Buf(1, curIncorrectFunctionL2, LCDDriver::LCDTextIdentation_Center);
??CrossCallReturnLabel_372:
        RCALL   ?Subroutine100
??CrossCallReturnLabel_209:
        MOVW    R21:R20, R29:R28
        LDI     R22, 0
        LDI     R16, 1
        RCALL   ??Subroutine127_0
??CrossCallReturnLabel_311:
        CALL    ??setTimer
//  470 
//  471     LCDDriver::refreshDisplay();
//  472 
//  473     initTransitionDownOnRefresh();
//  474   }
        ADIW    R29:R28, 20
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock115
//  475 

        RSEG CODE:CODE:NOROOT(1)
//  476   void functionReportVisitorsTotal()
??functionReportVisitorsTotal:
          CFI Block cfiBlock116 Using cfiCommon0
          CFI Function ??functionReportVisitorsTotal
//  477   {
        FUNCALL ??functionReportVisitorsTotal, ??popBuff
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReportVisitorsTotal, ??clearBuffer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReportVisitorsTotal, ??getString
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReportVisitorsTotal, ??str2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReportVisitorsTotal, ??num2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReportVisitorsTotal, ??getString
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReportVisitorsTotal, ??str2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReportVisitorsTotal, ??num2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReportVisitorsTotal, ??getString
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReportVisitorsTotal, ??str2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReportVisitorsTotal, ??num2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReportVisitorsTotal, ??refreshDisplay
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RJMP    ??CrossCallReturnLabel_346
//  478     while (transitionKey)
//  479     {
//  480       if (transitionKey == 1)
//  481       {
//  482           return;
//  483       }
//  484 
//  485       getNextTransitionKey();
??functionReportVisitorsTotal_1:
        RCALL   ?Subroutine34
??CrossCallReturnLabel_346:
        RCALL   ?Subroutine50
??CrossCallReturnLabel_87:
        BREQ    ??CrossCallReturnLabel_335
        CPI     R16, 1
        BREQ    ??CrossCallReturnLabel_400
        RCALL   ?Subroutine33
//  486     }
??CrossCallReturnLabel_324:
        BRNE    ??functionReportVisitorsTotal_1
        RCALL   ??Subroutine132_0
//  487 
//  488     LCDDriver::clearBuffer();
??CrossCallReturnLabel_335:
        RCALL   ?Subroutine42
//  489 
//  490     if (DeviceCounterConfig.detectDirection >= GLOBAL::DeviceProfile::CounterDetectDirectionType_Simulation)
??CrossCallReturnLabel_73:
        RCALL   ?Subroutine68
??CrossCallReturnLabel_147:
        CPI     R16, 2
        BRCS    ??functionReportVisitorsTotal_2
//  491     {
//  492       LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_REPORTS_MESSAGE_INCNT), LCDDriver::LCDTextIdentation_Left, 0);
        LDI     R16, 74
        RCALL   ?Subroutine20
??CrossCallReturnLabel_22:
        RCALL   ?Subroutine122
//  493       LCDDriver::num2Buf(0, 15, GLOBAL::Counter::totalInCnt, 8);
//  494       LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_REPORTS_MESSAGE_OUTCNT), LCDDriver::LCDTextIdentation_Left, 0);
??CrossCallReturnLabel_388:
        LDI     R16, 75
        RCALL   ?Subroutine15
//  495       LCDDriver::num2Buf(1, 15, GLOBAL::Counter::totalOutCnt, 8);
//  496     }
??CrossCallReturnLabel_20:
        LDI     R30, LOW(??totalOutCnt)
        LDI     R31, (??totalOutCnt) >> 8
        RCALL   ?Subroutine105
??CrossCallReturnLabel_215:
        LDI     R17, 15
        LDI     R16, 1
        RJMP    ??CrossCallReturnLabel_23
//  497     else
//  498     {
//  499       LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_REPORTS_MESSAGE_TOTALCNT), LCDDriver::LCDTextIdentation_Left, 0);
??functionReportVisitorsTotal_2:
        LDI     R16, 76
        RCALL   ?Subroutine20
//  500       LCDDriver::num2Buf(0, 15, GLOBAL::Counter::totalInCnt, 8);
//  501     }
??CrossCallReturnLabel_23:
        RCALL   ?Subroutine122
//  502 
//  503     LCDDriver::refreshDisplay();
??CrossCallReturnLabel_389:
        RCALL   ?Subroutine19
//  504 
//  505     isTransition = false;
//  506   }
??CrossCallReturnLabel_400:
        RET
          CFI EndBlock cfiBlock116

        RSEG CODE:CODE:NOROOT(1)
?Subroutine20:
          CFI Block cfiCond117 Using cfiCommon0
          CFI Function ??functionReportVisitorsTotal
          CFI Conditional ??CrossCallReturnLabel_22
          CFI CFA_SP SP+4
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function ??functionReportVisitorsTotal
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond118) CFA_SP SP+4
          CFI Block cfiPicker119 Using cfiCommon1
          CFI (cfiPicker119) NoFunction
          CFI (cfiPicker119) Picker
        RCALL   ?Subroutine116
??CrossCallReturnLabel_273:
        LDI     R17, 1
        RCALL   ?Subroutine96
??CrossCallReturnLabel_361:
        LDI     R19, 0
        LDI     R18, 8
        LDI     R30, LOW(??totalInCnt)
        LDI     R31, (??totalInCnt) >> 8
        RCALL   ?Subroutine105
??CrossCallReturnLabel_217:
        LDI     R17, 15
        LDI     R16, 0
        RET
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiPicker119
//  507 

        RSEG CODE:CODE:NOROOT(1)
//  508   void functionReports()
??functionReports:
          CFI Block cfiBlock120 Using cfiCommon0
          CFI Function ??functionReports
//  509   {
        FUNCALL ??functionReports, ??getPeriodNumDay
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??getPeriodNumMonth
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??getPeriodNumHour
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??popBuff
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??getRTCDateTimeDay
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??getRTCDateTimeMonth
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??getRTCDateTimeHour
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??getRTCDateTimeDay
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??clearBuffer
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??num2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??num2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??num2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??num2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??num2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??num2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??getString
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??str2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??scheduleStatisticOperation
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??getString
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??str2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??getString
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??str2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??num2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??getString
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??str2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??num2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??getString
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??str2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??num2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??getString
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??str2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??num2Buf
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReports, ??refreshDisplay
        LOCFRAME CSTACK, 14, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine54
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+2
??CrossCallReturnLabel_102:
        ST      -Y, R24
          CFI R24 Frame(CFA_Y, -3)
          CFI CFA_Y Y+3
        SBIW    R29:R28, 10
          CFI CFA_Y Y+13
//  510     unsigned long* curPeriodNum = (unsigned long*)activeParmSpace;
//  511     bool* isReloadScheduled = (bool*)(activeParmSpace + sizeof(unsigned long));
//  512     unsigned char* curStatus = (unsigned char*)(activeParmSpace + sizeof(unsigned long) + sizeof(bool));
//  513 
//  514     GLOBAL::RTC::TRTCDateTime curDateTime;
//  515 
//  516     if (activeFunctionChanged)
        LDI     R26, LOW(??curStatisticRecord)
        LDI     R27, (??curStatisticRecord) >> 8
        RCALL   ?Subroutine59
??CrossCallReturnLabel_116:
        BREQ    ??CrossCallReturnLabel_347
//  517     {
//  518       switch (menuStack[menuStackPos].funcState)
        RCALL   ?Subroutine9
??CrossCallReturnLabel_16:
        BREQ    ??functionReports_1
        DEC     R16
        BREQ    ??functionReports_1
        DEC     R16
        BREQ    ??functionReports_2
        SUBI    R16, 2
        BRNE    ??functionReports_3
//  519       {
//  520         case 2:
//  521         case 3:
//  522         case 6:
//  523           *curPeriodNum = GLOBAL::Counter::getPeriodNumDay(&GLOBAL::RTC::RTCDateTime);
??functionReports_1:
        LDI     R16, LOW(??RTCDateTime)
        LDI     R17, (??RTCDateTime) >> 8
        CALL    ??getPeriodNumDay
        RJMP    ??functionReports_4
//  524           break;
//  525 
//  526         case 4:
//  527           *curPeriodNum = GLOBAL::Counter::getPeriodNumMonth(&GLOBAL::RTC::RTCDateTime);
??functionReports_2:
        LDI     R16, LOW(??RTCDateTime)
        LDI     R17, (??RTCDateTime) >> 8
        CALL    ??getPeriodNumMonth
        LDI     R18, 0
        RCALL   ?Subroutine72
??CrossCallReturnLabel_154:
        STD     Z+3, R18
//  528           break;
        RJMP    ??functionReports_5
//  529 
//  530         default:
//  531           *curPeriodNum = GLOBAL::Counter::getPeriodNumHour(&GLOBAL::RTC::RTCDateTime);
??functionReports_3:
        LDI     R16, LOW(??RTCDateTime)
        LDI     R17, (??RTCDateTime) >> 8
        CALL    ??getPeriodNumHour
??functionReports_4:
        RCALL   ?Subroutine72
??CrossCallReturnLabel_155:
        STD     Z+3, R19
//  532           break;
//  533       }
//  534 
//  535       curStatisticRecord.status = GLOBAL::Counter::CounterStatisticProcessStatus_None;
??functionReports_5:
        LDI     R16, 0
        STS     (??curStatisticRecord + 24), R16
//  536       *isReloadScheduled = true;
        LDI     R18, 1
        STD     Z+4, R18
//  537 
//  538       *curStatus = 0;
        STD     Z+5, R16
        RJMP    ??CrossCallReturnLabel_347
//  539     }
//  540 
//  541     while (transitionKey)
//  542     {
//  543       signed char curDif;
//  544 
//  545       switch (transitionKey)
//  546       {
//  547         case 1:
//  548           if (*curStatus > 0)
//  549           {
//  550             (*curStatus)--;
//  551           }
//  552           else
//  553           {
//  554             return;
//  555           }
//  556           break;
//  557 
//  558         case 4:
//  559           //TODO: Add advanced data search
//  560           break;
//  561 
//  562         case 2:
//  563         case 3:
//  564           curDif = (transitionKey == 2) ? -1 : 1;
//  565 
//  566           switch (menuStack[menuStackPos].funcState)
//  567           {
//  568             case 3:
//  569               *curPeriodNum += curDif * 7;
//  570               break;
//  571 
//  572             default:
//  573               *curPeriodNum += curDif;
//  574               break;
//  575           }
//  576 
//  577           *isReloadScheduled = true;
//  578           break;
//  579       }
//  580 
//  581       getNextTransitionKey();
??functionReports_6:
        RCALL   ?Subroutine34
??CrossCallReturnLabel_347:
        RCALL   ?Subroutine50
??CrossCallReturnLabel_88:
        BREQ    ??CrossCallReturnLabel_336
        MOV     R17, R16
        DEC     R17
        BREQ    ??functionReports_7
        DEC     R17
        BREQ    ??functionReports_8
        DEC     R17
        BREQ    ??functionReports_8
        RJMP    ??functionReports_9
??functionReports_7:
        RCALL   ?Subroutine109
??CrossCallReturnLabel_232:
        LDD     R18, Z+5
        TST     R18
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_384
        MOV     R16, R18
        DEC     R16
        STD     Z+5, R16
        RJMP    ??functionReports_9
??functionReports_8:
        CPI     R16, 2
        BRNE    ??functionReports_10
        LDI     R20, 255
        RJMP    ??functionReports_11
??functionReports_10:
        LDI     R20, 1
??functionReports_11:
        RCALL   ?Subroutine28
??CrossCallReturnLabel_35:
        BRNE    ??functionReports_12
        MOV     R18, R20
        MOV     R19, R20
        LSL     R19
        SBC     R19, R19
        LDI     R20, 7
        MUL     R20, R19
        MOV     R21, R0
        MUL     R20, R18
        ADD     R21, R1
        MOV     R22, R21
        LSL     R22
        SBC     R22, R22
        RCALL   ?Subroutine71
??CrossCallReturnLabel_230:
        ADD     R16, R0
        ADC     R17, R21
        ADC     R18, R22
        ADC     R19, R22
        RJMP    ??functionReports_13
??functionReports_12:
        MOV     R21, R20
        LSL     R21
        SBC     R21, R21
        RCALL   ?Subroutine71
??CrossCallReturnLabel_231:
        ADD     R16, R20
        ADC     R17, R21
        ADC     R18, R21
        ADC     R19, R21
??functionReports_13:
        RCALL   ?Subroutine107
??CrossCallReturnLabel_225:
        STD     Z+2, R18
        STD     Z+3, R19
        LDI     R16, 1
        STD     Z+4, R16
??functionReports_9:
        RCALL   ?Subroutine33
//  582     }
??CrossCallReturnLabel_325:
        BRNE    ??functionReports_6
        RCALL   ??Subroutine132_0
//  583 
//  584     if (curStatisticRecord.status == GLOBAL::Counter::CounterStatisticProcessStatus_Scheduled)
??CrossCallReturnLabel_336:
        LDS     R16, (??curStatisticRecord + 24)
        CPI     R16, 1
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_384
//  585     {
//  586       return;
//  587     }
//  588 
//  589     GLOBAL::Counter::TCounterStatisticType curCounterStatisticType;
//  590 
//  591     switch (menuStack[menuStackPos].funcState)
        RCALL   ?Subroutine9
??CrossCallReturnLabel_17:
        BREQ    ??functionReports_14
        DEC     R16
        BREQ    ??functionReports_14
        DEC     R16
        BREQ    ??functionReports_15
        SUBI    R16, 2
        BRNE    ??functionReports_16
//  592     {
//  593       case 2:
//  594       case 3:
//  595       case 6:
//  596         GLOBAL::Counter::getRTCDateTimeDay(&curDateTime, *curPeriodNum);
??functionReports_14:
        RCALL   ?Subroutine69
??CrossCallReturnLabel_152:
        CALL    ??getRTCDateTimeDay
//  597         curCounterStatisticType = GLOBAL::Counter::CounterStatisticType_Day;
        LDI     R24, 2
//  598         break;
        RJMP    ??functionReports_17
//  599 
//  600       case 4:
//  601         GLOBAL::Counter::getRTCDateTimeMonth(&curDateTime, *curPeriodNum);
??functionReports_15:
        RCALL   ?Subroutine109
??CrossCallReturnLabel_233:
        LD      R18, Z
        LDD     R19, Z+1
        MOVW    R17:R16, R29:R28
        CALL    ??getRTCDateTimeMonth
//  602         curCounterStatisticType = GLOBAL::Counter::CounterStatisticType_Month;
        LDI     R24, 4
//  603         break;
        RJMP    ??functionReports_17
//  604 
//  605       default:
//  606         GLOBAL::Counter::getRTCDateTimeHour(&curDateTime, *curPeriodNum);
??functionReports_16:
        RCALL   ?Subroutine69
??CrossCallReturnLabel_153:
        CALL    ??getRTCDateTimeHour
//  607         curCounterStatisticType = GLOBAL::Counter::CounterStatisticType_Hour;
        LDI     R24, 1
//  608         break;
//  609     }
//  610 
//  611     switch (menuStack[menuStackPos].funcState)
??functionReports_17:
        RCALL   ?Subroutine28
??CrossCallReturnLabel_36:
        RCALL   ?Subroutine109
??CrossCallReturnLabel_234:
        BRNE    ??functionReports_18
//  612     {
//  613       case 3:
//  614         curStatisticRecord.periodNumFrom = *curPeriodNum - curDateTime.weekDay;
        RCALL   ?Subroutine108
??CrossCallReturnLabel_229:
        LDD     R20, Y+7
        SUB     R16, R20
        SBCI    R17, 0
        SBCI    R18, 0
        SBCI    R19, 0
        ST      X+, R16
        ST      X+, R17
        ST      X+, R18
        ST      X, R19
//  615         curStatisticRecord.periodNumTo = curStatisticRecord.periodNumFrom + 6;
        SBIW    R27:R26, 3
        SUBI    R16, 250
        SBCI    R17, 255
        SBCI    R18, 255
        SBCI    R19, 255
        MOVW    R31:R30, R27:R26
        STD     Z+4, R16
        STD     Z+5, R17
        STD     Z+6, R18
        STD     Z+7, R19
//  616 
//  617         GLOBAL::Counter::getRTCDateTimeDay(&curDateTime, curStatisticRecord.periodNumFrom);
        LD      R20, X+
        LD      R21, X+
        LD      R22, X+
        LD      R23, X
        SBIW    R27:R26, 3
        MOVW    R17:R16, R29:R28
        CALL    ??getRTCDateTimeDay
//  618         break;
        RJMP    ??functionReports_19
//  619 
//  620       default:
//  621         curStatisticRecord.periodNumFrom = *curPeriodNum;
??functionReports_18:
        RCALL   ?Subroutine105
??CrossCallReturnLabel_216:
        ST      X+, R20
        ST      X+, R21
        ST      X+, R22
        ST      X, R23
        SBIW    R27:R26, 3
//  622         curStatisticRecord.periodNumTo = *curPeriodNum;
        MOVW    R31:R30, R27:R26
        STD     Z+4, R20
        STD     Z+5, R21
        STD     Z+6, R22
        STD     Z+7, R23
//  623         break;
//  624     }
//  625 
//  626     LCDDriver::clearBuffer();
??functionReports_19:
        RCALL   ?Subroutine42
//  627 
//  628     switch (menuStack[menuStackPos].funcState)
??CrossCallReturnLabel_72:
        RCALL   ?Subroutine4
??CrossCallReturnLabel_7:
        SUBI    R16, 3
        BRCS    ??functionReports_20
        DEC     R16
        BREQ    ??functionReports_20
        DEC     R16
        BRNE    ??CrossCallReturnLabel_278
//  629     {
//  630       case 1:
//  631       case 2:
//  632       case 3:
//  633       case 5:
//  634       case 6:
//  635         LCDDriver::num2Buf(0, 3, curDateTime.year, 4, LCD_DISPLAY_SYMBOL_SPACE);
??functionReports_20:
        RCALL   ?Subroutine64
??CrossCallReturnLabel_140:
        RCALL   ?Subroutine21
//  636         LCDDriver::displayState.line[0][4] = LCD_DISPLAY_SYMBOL_DASH;
//  637         LCDDriver::num2Buf(0, 6, curDateTime.month, 2, '0');
??CrossCallReturnLabel_25:
        LDD     R20, Y+2
        RCALL   ?Subroutine22
//  638         LCDDriver::displayState.line[0][7] = LCD_DISPLAY_SYMBOL_DASH;
//  639         LCDDriver::num2Buf(0, 9, curDateTime.day, 2, '0');
??CrossCallReturnLabel_27:
        LDD     R20, Y+3
        RCALL   ?Subroutine23
//  640         break;
//  641     }
//  642 
//  643     switch (menuStack[menuStackPos].funcState)
??CrossCallReturnLabel_278:
        RCALL   ?Subroutine4
??CrossCallReturnLabel_8:
        BREQ    ??functionReports_21
        SUBI    R16, 2
        BREQ    ??functionReports_22
        DEC     R16
        BREQ    ??functionReports_23
        DEC     R16
        BRNE    ??CrossCallReturnLabel_373
//  644     {
//  645       case 1:
//  646       case 5:
//  647         LCDDriver::num2Buf(0, 12, curDateTime.hour, 2, LCD_DISPLAY_SYMBOL_SPACE);
??functionReports_21:
        LDI     R19, 32
        LDI     R18, 2
        LDD     R20, Y+4
        RCALL   ?Subroutine99
??CrossCallReturnLabel_201:
        LDI     R17, 12
        RCALL   ?Subroutine118
//  648         LCDDriver::displayState.line[0][13] = LCD_DISPLAY_SYMBOL_COLON;
??CrossCallReturnLabel_277:
        LDI     R16, 58
        STS     (??displayState + 17), R16
//  649         LCDDriver::num2Buf(0, 15, 0, 2, '0');
        RCALL   ?Subroutine66
??CrossCallReturnLabel_144:
        LDI     R20, 0
        RCALL   ?Subroutine99
??CrossCallReturnLabel_202:
        LDI     R17, 15
        RCALL   ?Subroutine118
//  650         break;
??CrossCallReturnLabel_276:
        RJMP    ??CrossCallReturnLabel_373
??functionReports_22:
        LDI     R16, 43
        STS     (??displayState + 15), R16
//  651 
//  652       case 3:
//  653         LCDDriver::displayState.line[0][11] = '+';
//  654         LCDDriver::displayState.line[0][13] = '7';
        LDI     R16, 55
        STS     (??displayState + 17), R16
//  655         break;
        RJMP    ??CrossCallReturnLabel_373
//  656 
//  657       case 4:
//  658         LCDDriver::num2Buf(0, 3, curDateTime.year, 4, LCD_DISPLAY_SYMBOL_SPACE);
??functionReports_23:
        RCALL   ?Subroutine64
??CrossCallReturnLabel_141:
        RCALL   ?Subroutine106
??CrossCallReturnLabel_219:
        LDI     R17, 3
        RCALL   ?Subroutine118
//  659         LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_MONTH_NAME_JANUARY + curDateTime.month - 1), LCDDriver::LCDTextIdentation_Left, 5);
??CrossCallReturnLabel_275:
        LDD     R16, Y+2
        LDI     R17, 0
        SUBI    R16, 178
        SBCI    R17, 255
        RCALL   ?Subroutine123
??CrossCallReturnLabel_295:
        LDI     R18, 5
        LDI     R17, 1
        RCALL   ?Subroutine96
//  660         break;
//  661     }
//  662 
//  663     if ((*isReloadScheduled) || (curStatisticRecord.status == GLOBAL::Counter::CounterStatisticProcessStatus_None))
??CrossCallReturnLabel_373:
        LDS     R16, (??activeParmSpace + 4)
        TST     R16
        BRNE    ??functionReports_24
        LDS     R16, (??curStatisticRecord + 24)
        TST     R16
        BRNE    ??functionReports_25
//  664     {
//  665       if (GLOBAL::Counter::scheduleStatisticOperation(&curStatisticRecord, curCounterStatisticType))
??functionReports_24:
        MOV     R18, R24
        MOVW    R17:R16, R27:R26
        CALL    ??scheduleStatisticOperation
        TST     R16
        BREQ    ??functionReports_26
//  666       {
//  667         *isReloadScheduled = false;
        LDI     R16, 0
        STS     (??activeParmSpace + 4), R16
//  668       }
//  669 
//  670       LCDDriver::displayState.line[1][15] = LCD_DISPLAY_SYMBOL_SUN;
??functionReports_26:
        LDI     R16, 238
        STS     (??displayState + 35), R16
        RJMP    ??CrossCallReturnLabel_406
//  671     }
//  672     else
//  673     {
//  674       if (curStatisticRecord.status == GLOBAL::Counter::CounterStatisticProcessStatus_Error)
??functionReports_25:
        CPI     R16, 3
        BRNE    ??functionReports_27
//  675       {
//  676         LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_MESSAGE_ERROR), LCDDriver::LCDTextIdentation_Right, 15);
        LDI     R16, 2
        RCALL   ?Subroutine16
//  677       }
??CrossCallReturnLabel_358:
        RJMP    ??CrossCallReturnLabel_394
//  678       else
//  679       {
//  680         if ((menuStack[menuStackPos].funcState) >= 5)
??functionReports_27:
        RCALL   ?Subroutine114
??CrossCallReturnLabel_258:
        CPI     R16, 5
        BRCS    ??functionReports_28
//  681         {
//  682           LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_REPORTS_MESSAGE_TOTALCNT), LCDDriver::LCDTextIdentation_Left, 0);
        LDI     R16, 76
        RCALL   ?Subroutine116
??CrossCallReturnLabel_271:
        LDI     R17, 1
        RCALL   ??Subroutine133_0
//  683           LCDDriver::num2Buf(1, 15, curStatisticRecord.NoSensorSec / 60, 8);
??CrossCallReturnLabel_357:
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+20
        LDD     R17, Z+21
        LDD     R18, Z+22
        LDD     R19, Z+23
        LDI     R20, 60
        RCALL   ?Subroutine99
//  684         }
??CrossCallReturnLabel_203:
        CALL    ?UL_DIVMOD_L03
        MOVW    R21:R20, R17:R16
        MOVW    R23:R22, R19:R18
        LDI     R19, 0
        LDI     R18, 8
        RJMP    ??CrossCallReturnLabel_157
//  685         else
//  686         if (DeviceCounterConfig.detectDirection >= GLOBAL::DeviceProfile::CounterDetectDirectionType_Simulation)
??functionReports_28:
        RCALL   ?Subroutine68
??CrossCallReturnLabel_148:
        CPI     R16, 2
        BRCS    ??functionReports_29
//  687         {
//  688           LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_REPORTS_MESSAGE_INCNT_SHORT), LCDDriver::LCDTextIdentation_Left, 0);
        LDI     R16, 77
        RCALL   ?Subroutine116
??CrossCallReturnLabel_270:
        RCALL   ?Subroutine11
??CrossCallReturnLabel_18:
        RCALL   ?Subroutine74
??CrossCallReturnLabel_156:
        RCALL   ?Subroutine13
//  689           LCDDriver::num2Buf(1, 6, curStatisticRecord.InCnt, 7);
//  690 
//  691           LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_REPORTS_MESSAGE_OUTCNT_SHORT), LCDDriver::LCDTextIdentation_Left, 8);
??CrossCallReturnLabel_391:
        LDI     R16, 78
        LDI     R17, 0
        RCALL   ?Subroutine123
//  692           LCDDriver::num2Buf(1, 15, curStatisticRecord.OutCnt, 7);
//  693         }
??CrossCallReturnLabel_294:
        LDI     R18, 8
        RCALL   ?Subroutine11
??CrossCallReturnLabel_19:
        LDD     R20, Z+16
        LDD     R21, Z+17
        LDD     R22, Z+18
        LDD     R23, Z+19
        RJMP    ??CrossCallReturnLabel_157
//  694         else
//  695         {
//  696           LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_REPORTS_MESSAGE_TOTALCNT), LCDDriver::LCDTextIdentation_Left, 0);
??functionReports_29:
        LDI     R16, 76
        RCALL   ?Subroutine15
//  697           LCDDriver::num2Buf(1, 15, curStatisticRecord.InCnt, 8);
//  698         }
//  699       }
??CrossCallReturnLabel_21:
        MOVW    R31:R30, R27:R26
        RCALL   ?Subroutine74
??CrossCallReturnLabel_157:
        LDI     R17, 15
        RCALL   ?Subroutine115
//  700 
//  701       isTransition = false;
??CrossCallReturnLabel_394:
        RCALL   ??Subroutine136_0
//  702     }
//  703 
//  704     LCDDriver::refreshDisplay();
??CrossCallReturnLabel_406:
        RCALL   ?Subroutine32
//  705   }
??CrossCallReturnLabel_384:
        ADIW    R29:R28, 10
          CFI CFA_Y Y+3
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+2
        RJMP    ?Subroutine58
          CFI EndBlock cfiBlock120

        RSEG CODE:CODE:NOROOT(1)
?Subroutine74:
          CFI Block cfiCond121 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_156
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function ??functionReports
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_157
          CFI (cfiCond122) R24 Frame(CFA_Y, -3)
          CFI (cfiCond122) R26 Frame(CFA_Y, -2)
          CFI (cfiCond122) R27 Frame(CFA_Y, -1)
          CFI (cfiCond122) CFA_SP SP+4
          CFI (cfiCond122) CFA_Y Y+13
          CFI Block cfiPicker123 Using cfiCommon1
          CFI (cfiPicker123) NoFunction
          CFI (cfiPicker123) Picker
        LDD     R20, Z+12
        LDD     R21, Z+13
        LDD     R22, Z+14
        LDD     R23, Z+15
        RET
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiPicker123

        RSEG CODE:CODE:NOROOT(1)
?Subroutine72:
          CFI Block cfiCond124 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_154
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function ??functionReports
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_155
          CFI (cfiCond125) R24 Frame(CFA_Y, -3)
          CFI (cfiCond125) R26 Frame(CFA_Y, -2)
          CFI (cfiCond125) R27 Frame(CFA_Y, -1)
          CFI (cfiCond125) CFA_SP SP+4
          CFI (cfiCond125) CFA_Y Y+13
          CFI Block cfiPicker126 Using cfiCommon1
          CFI (cfiPicker126) NoFunction
          CFI (cfiPicker126) Picker
        RCALL   ?Subroutine109
??CrossCallReturnLabel_244:
        RCALL   ?Subroutine107
??CrossCallReturnLabel_228:
        STD     Z+2, R18
        RET
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiPicker126

        RSEG CODE:CODE:NOROOT(1)
?Subroutine107:
          CFI Block cfiCond127 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_225
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function ??functionReports
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_154
          CFI (cfiCond128) R24 Frame(CFA_Y, -3)
          CFI (cfiCond128) R26 Frame(CFA_Y, -2)
          CFI (cfiCond128) R27 Frame(CFA_Y, -1)
          CFI (cfiCond128) CFA_SP SP+6
          CFI (cfiCond128) CFA_Y Y+13
          CFI Block cfiCond129 Using cfiCommon0
          CFI (cfiCond129) Function ??functionReports
          CFI (cfiCond129) Conditional ??CrossCallReturnLabel_228, ??CrossCallReturnLabel_155
          CFI (cfiCond129) R24 Frame(CFA_Y, -3)
          CFI (cfiCond129) R26 Frame(CFA_Y, -2)
          CFI (cfiCond129) R27 Frame(CFA_Y, -1)
          CFI (cfiCond129) CFA_SP SP+6
          CFI (cfiCond129) CFA_Y Y+13
          CFI Block cfiCond130 Using cfiCommon0
          CFI (cfiCond130) Function ??functionSetupWorkDay
          CFI (cfiCond130) Conditional ??CrossCallReturnLabel_226
          CFI (cfiCond130) R24 Frame(CFA_Y, -4)
          CFI (cfiCond130) R25 Frame(CFA_Y, -3)
          CFI (cfiCond130) R26 Frame(CFA_Y, -2)
          CFI (cfiCond130) R27 Frame(CFA_Y, -1)
          CFI (cfiCond130) CFA_SP SP+4
          CFI (cfiCond130) CFA_Y Y+4
          CFI Block cfiCond131 Using cfiCommon0
          CFI (cfiCond131) Function ??functionSetupWorkDay
          CFI (cfiCond131) Conditional ??CrossCallReturnLabel_227
          CFI (cfiCond131) R24 Frame(CFA_Y, -4)
          CFI (cfiCond131) R25 Frame(CFA_Y, -3)
          CFI (cfiCond131) R26 Frame(CFA_Y, -2)
          CFI (cfiCond131) R27 Frame(CFA_Y, -1)
          CFI (cfiCond131) CFA_SP SP+4
          CFI (cfiCond131) CFA_Y Y+4
          CFI Block cfiPicker132 Using cfiCommon1
          CFI (cfiPicker132) NoFunction
          CFI (cfiPicker132) Picker
        ST      Z, R16
        STD     Z+1, R17
        RET
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiCond129
          CFI EndBlock cfiCond130
          CFI EndBlock cfiCond131
          CFI EndBlock cfiPicker132

        RSEG CODE:CODE:NOROOT(1)
?Subroutine71:
          CFI Block cfiCond133 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_230
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function ??functionReports
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond134) R24 Frame(CFA_Y, -3)
          CFI (cfiCond134) R26 Frame(CFA_Y, -2)
          CFI (cfiCond134) R27 Frame(CFA_Y, -1)
          CFI (cfiCond134) CFA_SP SP+4
          CFI (cfiCond134) CFA_Y Y+13
          CFI Block cfiPicker135 Using cfiCommon1
          CFI (cfiPicker135) NoFunction
          CFI (cfiPicker135) Picker
        RCALL   ?Subroutine109
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiPicker135
??CrossCallReturnLabel_243:
        REQUIRE ?Subroutine108
        ;               // Fall through to label ?Subroutine108

        RSEG CODE:CODE:NOROOT(1)
?Subroutine108:
          CFI Block cfiCond136 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_229
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond137 Using cfiCommon0
          CFI (cfiCond137) Function ??functionReports
          CFI (cfiCond137) Conditional ??CrossCallReturnLabel_230
          CFI (cfiCond137) R24 Frame(CFA_Y, -3)
          CFI (cfiCond137) R26 Frame(CFA_Y, -2)
          CFI (cfiCond137) R27 Frame(CFA_Y, -1)
          CFI (cfiCond137) CFA_SP SP+4
          CFI (cfiCond137) CFA_Y Y+13
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function ??functionReports
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_231
          CFI (cfiCond138) R24 Frame(CFA_Y, -3)
          CFI (cfiCond138) R26 Frame(CFA_Y, -2)
          CFI (cfiCond138) R27 Frame(CFA_Y, -1)
          CFI (cfiCond138) CFA_SP SP+4
          CFI (cfiCond138) CFA_Y Y+13
          CFI Block cfiPicker139 Using cfiCommon1
          CFI (cfiPicker139) NoFunction
          CFI (cfiPicker139) Picker
        LD      R16, Z
        LDD     R17, Z+1
        LDD     R18, Z+2
        LDD     R19, Z+3
        RET
          CFI EndBlock cfiCond136
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiPicker139

        RSEG CODE:CODE:NOROOT(1)
?Subroutine105:
          CFI Block cfiCond140 Using cfiCommon0
          CFI Function ??functionReportVisitorsTotal
          CFI Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_22
          CFI CFA_SP SP+6
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function ??functionReportVisitorsTotal
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_217, ??CrossCallReturnLabel_23
          CFI (cfiCond141) CFA_SP SP+6
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function ??functionReportVisitorsTotal
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_215
          CFI (cfiCond142) CFA_SP SP+4
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function ??functionReports
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_216
          CFI (cfiCond143) R24 Frame(CFA_Y, -3)
          CFI (cfiCond143) R26 Frame(CFA_Y, -2)
          CFI (cfiCond143) R27 Frame(CFA_Y, -1)
          CFI (cfiCond143) CFA_SP SP+4
          CFI (cfiCond143) CFA_Y Y+13
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function ??functionReports
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_152
          CFI (cfiCond144) R24 Frame(CFA_Y, -3)
          CFI (cfiCond144) R26 Frame(CFA_Y, -2)
          CFI (cfiCond144) R27 Frame(CFA_Y, -1)
          CFI (cfiCond144) CFA_SP SP+6
          CFI (cfiCond144) CFA_Y Y+13
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function ??functionReports
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_218, ??CrossCallReturnLabel_153
          CFI (cfiCond145) R24 Frame(CFA_Y, -3)
          CFI (cfiCond145) R26 Frame(CFA_Y, -2)
          CFI (cfiCond145) R27 Frame(CFA_Y, -1)
          CFI (cfiCond145) CFA_SP SP+6
          CFI (cfiCond145) CFA_Y Y+13
          CFI Block cfiPicker146 Using cfiCommon1
          CFI (cfiPicker146) NoFunction
          CFI (cfiPicker146) Picker
        LD      R20, Z
        LDD     R21, Z+1
        LDD     R22, Z+2
        LDD     R23, Z+3
        RET
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiPicker146

        RSEG CODE:CODE:NOROOT(1)
?Subroutine69:
          CFI Block cfiCond147 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_152
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function ??functionReports
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_153
          CFI (cfiCond148) R24 Frame(CFA_Y, -3)
          CFI (cfiCond148) R26 Frame(CFA_Y, -2)
          CFI (cfiCond148) R27 Frame(CFA_Y, -1)
          CFI (cfiCond148) CFA_SP SP+4
          CFI (cfiCond148) CFA_Y Y+13
          CFI Block cfiPicker149 Using cfiCommon1
          CFI (cfiPicker149) NoFunction
          CFI (cfiPicker149) Picker
        RCALL   ?Subroutine109
??CrossCallReturnLabel_242:
        RCALL   ?Subroutine105
??CrossCallReturnLabel_218:
        MOVW    R17:R16, R29:R28
        RET
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiPicker149

        RSEG CODE:CODE:NOROOT(1)
?Subroutine64:
          CFI Block cfiCond150 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_140
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function ??functionReports
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_141
          CFI (cfiCond151) R24 Frame(CFA_Y, -3)
          CFI (cfiCond151) R26 Frame(CFA_Y, -2)
          CFI (cfiCond151) R27 Frame(CFA_Y, -1)
          CFI (cfiCond151) CFA_SP SP+4
          CFI (cfiCond151) CFA_Y Y+13
          CFI Block cfiPicker152 Using cfiCommon1
          CFI (cfiPicker152) NoFunction
          CFI (cfiPicker152) Picker
        LDI     R19, 32
        LDI     R18, 4
        LD      R20, Y
        LDD     R21, Y+1
        RET
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiPicker152

        RSEG CODE:CODE:NOROOT(1)
?Subroutine123:
          CFI Block cfiCond153 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_295
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond154 Using cfiCommon0
          CFI (cfiCond154) Function ??functionReports
          CFI (cfiCond154) Conditional ??CrossCallReturnLabel_294
          CFI (cfiCond154) R24 Frame(CFA_Y, -3)
          CFI (cfiCond154) R26 Frame(CFA_Y, -2)
          CFI (cfiCond154) R27 Frame(CFA_Y, -1)
          CFI (cfiCond154) CFA_SP SP+4
          CFI (cfiCond154) CFA_Y Y+13
          CFI Block cfiCond155 Using cfiCommon0
          CFI (cfiCond155) Function ??functionReports
          CFI (cfiCond155) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_358
          CFI (cfiCond155) R24 Frame(CFA_Y, -3)
          CFI (cfiCond155) R26 Frame(CFA_Y, -2)
          CFI (cfiCond155) R27 Frame(CFA_Y, -1)
          CFI (cfiCond155) CFA_SP SP+6
          CFI (cfiCond155) CFA_Y Y+13
          CFI Block cfiCond156 Using cfiCommon0
          CFI (cfiCond156) Function ??functionSetupDetectionTime
          CFI (cfiCond156) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_359
          CFI (cfiCond156) CFA_SP SP+6
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function ??functionSetupInactivityTime
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_293, ??CrossCallReturnLabel_360
          CFI (cfiCond157) CFA_SP SP+6
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function ??functionReportVisitorsTotal
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_22
          CFI (cfiCond158) CFA_SP SP+8
          CFI Block cfiCond159 Using cfiCommon0
          CFI (cfiCond159) Function ??functionReportVisitorsTotal
          CFI (cfiCond159) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_23
          CFI (cfiCond159) CFA_SP SP+8
          CFI Block cfiCond160 Using cfiCommon0
          CFI (cfiCond160) Function ??functionMenu
          CFI (cfiCond160) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_272
          CFI (cfiCond160) R26 Frame(CFA_Y, -2)
          CFI (cfiCond160) R27 Frame(CFA_Y, -1)
          CFI (cfiCond160) CFA_SP SP+6
          CFI (cfiCond160) CFA_Y Y+2
          CFI Block cfiCond161 Using cfiCommon0
          CFI (cfiCond161) Function ??functionReports
          CFI (cfiCond161) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_271
          CFI (cfiCond161) R24 Frame(CFA_Y, -3)
          CFI (cfiCond161) R26 Frame(CFA_Y, -2)
          CFI (cfiCond161) R27 Frame(CFA_Y, -1)
          CFI (cfiCond161) CFA_SP SP+6
          CFI (cfiCond161) CFA_Y Y+13
          CFI Block cfiCond162 Using cfiCommon0
          CFI (cfiCond162) Function ??functionReports
          CFI (cfiCond162) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_270
          CFI (cfiCond162) R24 Frame(CFA_Y, -3)
          CFI (cfiCond162) R26 Frame(CFA_Y, -2)
          CFI (cfiCond162) R27 Frame(CFA_Y, -1)
          CFI (cfiCond162) CFA_SP SP+6
          CFI (cfiCond162) CFA_Y Y+13
          CFI Block cfiCond163 Using cfiCommon0
          CFI (cfiCond163) Function ??functionReportVisitorsTotal
          CFI (cfiCond163) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_20
          CFI (cfiCond163) CFA_SP SP+8
          CFI Block cfiCond164 Using cfiCommon0
          CFI (cfiCond164) Function ??functionReports
          CFI (cfiCond164) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_21
          CFI (cfiCond164) R24 Frame(CFA_Y, -3)
          CFI (cfiCond164) R26 Frame(CFA_Y, -2)
          CFI (cfiCond164) R27 Frame(CFA_Y, -1)
          CFI (cfiCond164) CFA_SP SP+8
          CFI (cfiCond164) CFA_Y Y+13
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ??functionMenu
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_362
          CFI (cfiCond165) R26 Frame(CFA_Y, -2)
          CFI (cfiCond165) R27 Frame(CFA_Y, -1)
          CFI (cfiCond165) CFA_SP SP+8
          CFI (cfiCond165) CFA_Y Y+2
          CFI Block cfiCond166 Using cfiCommon0
          CFI (cfiCond166) Function ??functionSafeBattRemove
          CFI (cfiCond166) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_363
          CFI (cfiCond166) CFA_SP SP+8
          CFI Block cfiCond167 Using cfiCommon0
          CFI (cfiCond167) Function ??functionSafeBattRemove
          CFI (cfiCond167) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_364
          CFI (cfiCond167) CFA_SP SP+8
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function ??functionSetupDetectionTime
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_365
          CFI (cfiCond168) CFA_SP SP+8
          CFI Block cfiCond169 Using cfiCommon0
          CFI (cfiCond169) Function ??functionSetupInactivityTime
          CFI (cfiCond169) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_366
          CFI (cfiCond169) CFA_SP SP+8
          CFI Block cfiCond170 Using cfiCommon0
          CFI (cfiCond170) Function ??functionSetupWorkWeek
          CFI (cfiCond170) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_367
          CFI (cfiCond170) R26 Frame(CFA_Y, -2)
          CFI (cfiCond170) R27 Frame(CFA_Y, -1)
          CFI (cfiCond170) CFA_SP SP+8
          CFI (cfiCond170) CFA_Y Y+2
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function ??functionSetCheckPassword
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_368
          CFI (cfiCond171) R24 Frame(CFA_Y, -4)
          CFI (cfiCond171) R25 Frame(CFA_Y, -3)
          CFI (cfiCond171) R26 Frame(CFA_Y, -2)
          CFI (cfiCond171) R27 Frame(CFA_Y, -1)
          CFI (cfiCond171) CFA_SP SP+8
          CFI (cfiCond171) CFA_Y Y+4
          CFI Block cfiCond172 Using cfiCommon0
          CFI (cfiCond172) Function ??functionBatteryVoltage
          CFI (cfiCond172) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_369
          CFI (cfiCond172) R24 Frame(CFA_Y, -2)
          CFI (cfiCond172) R25 Frame(CFA_Y, -1)
          CFI (cfiCond172) CFA_SP SP+8
          CFI (cfiCond172) CFA_Y Y+2
          CFI Block cfiCond173 Using cfiCommon0
          CFI (cfiCond173) Function ??functionSerialNumber
          CFI (cfiCond173) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_370
          CFI (cfiCond173) R26 Frame(CFA_Y, -2)
          CFI (cfiCond173) R27 Frame(CFA_Y, -1)
          CFI (cfiCond173) CFA_SP SP+8
          CFI (cfiCond173) CFA_Y Y+2
          CFI Block cfiCond174 Using cfiCommon0
          CFI (cfiCond174) Function ??functionResetNum
          CFI (cfiCond174) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_371
          CFI (cfiCond174) R24 Frame(CFA_Y, -5)
          CFI (cfiCond174) R25 Frame(CFA_Y, -4)
          CFI (cfiCond174) R26 Frame(CFA_Y, -3)
          CFI (cfiCond174) R27 Frame(CFA_Y, -2)
          CFI (cfiCond174) R4 Frame(CFA_Y, -1)
          CFI (cfiCond174) CFA_SP SP+8
          CFI (cfiCond174) CFA_Y Y+5
          CFI Block cfiCond175 Using cfiCommon0
          CFI (cfiCond175) Function ??displayDoneMessage
          CFI (cfiCond175) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_309
          CFI (cfiCond175) CFA_SP SP+10
          CFI Block cfiCond176 Using cfiCommon0
          CFI (cfiCond176) Function ??displayErrorMessage
          CFI (cfiCond176) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_310
          CFI (cfiCond176) CFA_SP SP+10
          CFI Block cfiCond177 Using cfiCommon0
          CFI (cfiCond177) Function ??functionSetupWorkDay
          CFI (cfiCond177) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_33
          CFI (cfiCond177) R24 Frame(CFA_Y, -4)
          CFI (cfiCond177) R25 Frame(CFA_Y, -3)
          CFI (cfiCond177) R26 Frame(CFA_Y, -2)
          CFI (cfiCond177) R27 Frame(CFA_Y, -1)
          CFI (cfiCond177) CFA_SP SP+10
          CFI (cfiCond177) CFA_Y Y+4
          CFI Block cfiCond178 Using cfiCommon0
          CFI (cfiCond178) Function ??functionSetupWorkDay
          CFI (cfiCond178) Conditional ??CrossCallReturnLabel_296, ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_34
          CFI (cfiCond178) R24 Frame(CFA_Y, -4)
          CFI (cfiCond178) R25 Frame(CFA_Y, -3)
          CFI (cfiCond178) R26 Frame(CFA_Y, -2)
          CFI (cfiCond178) R27 Frame(CFA_Y, -1)
          CFI (cfiCond178) CFA_SP SP+10
          CFI (cfiCond178) CFA_Y Y+4
          CFI Block cfiPicker179 Using cfiCommon1
          CFI (cfiPicker179) NoFunction
          CFI (cfiPicker179) Picker
        CALL    ??getString
        MOVW    R21:R20, R17:R16
        MOV     R22, R18
        RET
          CFI EndBlock cfiCond153
          CFI EndBlock cfiCond154
          CFI EndBlock cfiCond155
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiCond159
          CFI EndBlock cfiCond160
          CFI EndBlock cfiCond161
          CFI EndBlock cfiCond162
          CFI EndBlock cfiCond163
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiCond166
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiCond169
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiCond172
          CFI EndBlock cfiCond173
          CFI EndBlock cfiCond174
          CFI EndBlock cfiCond175
          CFI EndBlock cfiCond176
          CFI EndBlock cfiCond177
          CFI EndBlock cfiCond178
          CFI EndBlock cfiPicker179

        RSEG CODE:CODE:NOROOT(1)
?Subroutine32:
          CFI Block cfiCond180 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_384
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function ??functionSensorQuality
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond181) CFA_SP SP+4
          CFI Block cfiPicker182 Using cfiCommon1
          CFI (cfiPicker182) NoFunction
          CFI (cfiPicker182) Picker
        RCALL   ?Subroutine98
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiPicker182
??CrossCallReturnLabel_307:
        REQUIRE ?Subroutine93
        ;               // Fall through to label ?Subroutine93

        RSEG CODE:CODE:NOROOT(1)
?Subroutine93:
          CFI Block cfiCond183 Using cfiCommon0
          CFI Function ??displayDoneMessage
          CFI Conditional ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_309
          CFI CFA_SP SP+6
          CFI Block cfiCond184 Using cfiCommon0
          CFI (cfiCond184) Function ??displayErrorMessage
          CFI (cfiCond184) Conditional ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_310
          CFI (cfiCond184) CFA_SP SP+6
          CFI Block cfiCond185 Using cfiCommon0
          CFI (cfiCond185) Function ??functionIncorrectFunction
          CFI (cfiCond185) Conditional ??CrossCallReturnLabel_387, ??CrossCallReturnLabel_311
          CFI (cfiCond185) CFA_SP SP+6
          CFI (cfiCond185) CFA_Y Y+20
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function ??functionReports
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_384
          CFI (cfiCond186) R24 Frame(CFA_Y, -3)
          CFI (cfiCond186) R26 Frame(CFA_Y, -2)
          CFI (cfiCond186) R27 Frame(CFA_Y, -1)
          CFI (cfiCond186) CFA_SP SP+4
          CFI (cfiCond186) CFA_Y Y+13
          CFI Block cfiCond187 Using cfiCommon0
          CFI (cfiCond187) Function ??functionSensorQuality
          CFI (cfiCond187) Conditional ??CrossCallReturnLabel_385
          CFI (cfiCond187) CFA_SP SP+4
          CFI Block cfiCond188 Using cfiCommon0
          CFI (cfiCond188) Function ??functionResetNum
          CFI (cfiCond188) Conditional ??CrossCallReturnLabel_386
          CFI (cfiCond188) R24 Frame(CFA_Y, -5)
          CFI (cfiCond188) R25 Frame(CFA_Y, -4)
          CFI (cfiCond188) R26 Frame(CFA_Y, -3)
          CFI (cfiCond188) R27 Frame(CFA_Y, -2)
          CFI (cfiCond188) R4 Frame(CFA_Y, -1)
          CFI (cfiCond188) CFA_SP SP+4
          CFI (cfiCond188) CFA_Y Y+5
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function ??functionSetupDetectionTime
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_377
          CFI (cfiCond189) CFA_SP SP+6
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function ??functionBatteryVoltage
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_378
          CFI (cfiCond190) R24 Frame(CFA_Y, -2)
          CFI (cfiCond190) R25 Frame(CFA_Y, -1)
          CFI (cfiCond190) CFA_SP SP+6
          CFI (cfiCond190) CFA_Y Y+2
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ??functionSetupInactivityTime
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_383, ??CrossCallReturnLabel_379
          CFI (cfiCond191) CFA_SP SP+6
          CFI Block cfiPicker192 Using cfiCommon1
          CFI (cfiPicker192) NoFunction
          CFI (cfiPicker192) Picker
        LDI     R18, 0
        LDI     R17, 0
        LDI     R16, 12
        JMP     ??refreshDisplay
          CFI EndBlock cfiCond183
          CFI EndBlock cfiCond184
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiCond187
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiPicker192

        RSEG CODE:CODE:NOROOT(1)
?Subroutine116:
          CFI Block cfiCond193 Using cfiCommon0
          CFI Function ??functionReportVisitorsTotal
          CFI Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_22
          CFI CFA_SP SP+6
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function ??functionReportVisitorsTotal
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_273, ??CrossCallReturnLabel_23
          CFI (cfiCond194) CFA_SP SP+6
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function ??functionMenu
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_272
          CFI (cfiCond195) R26 Frame(CFA_Y, -2)
          CFI (cfiCond195) R27 Frame(CFA_Y, -1)
          CFI (cfiCond195) CFA_SP SP+4
          CFI (cfiCond195) CFA_Y Y+2
          CFI Block cfiCond196 Using cfiCommon0
          CFI (cfiCond196) Function ??functionReports
          CFI (cfiCond196) Conditional ??CrossCallReturnLabel_271
          CFI (cfiCond196) R24 Frame(CFA_Y, -3)
          CFI (cfiCond196) R26 Frame(CFA_Y, -2)
          CFI (cfiCond196) R27 Frame(CFA_Y, -1)
          CFI (cfiCond196) CFA_SP SP+4
          CFI (cfiCond196) CFA_Y Y+13
          CFI Block cfiCond197 Using cfiCommon0
          CFI (cfiCond197) Function ??functionReports
          CFI (cfiCond197) Conditional ??CrossCallReturnLabel_270
          CFI (cfiCond197) R24 Frame(CFA_Y, -3)
          CFI (cfiCond197) R26 Frame(CFA_Y, -2)
          CFI (cfiCond197) R27 Frame(CFA_Y, -1)
          CFI (cfiCond197) CFA_SP SP+4
          CFI (cfiCond197) CFA_Y Y+13
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function ??functionReportVisitorsTotal
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_20
          CFI (cfiCond198) CFA_SP SP+6
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ??functionReports
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_269, ??CrossCallReturnLabel_21
          CFI (cfiCond199) R24 Frame(CFA_Y, -3)
          CFI (cfiCond199) R26 Frame(CFA_Y, -2)
          CFI (cfiCond199) R27 Frame(CFA_Y, -1)
          CFI (cfiCond199) CFA_SP SP+6
          CFI (cfiCond199) CFA_Y Y+13
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function ??functionMenu
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_362
          CFI (cfiCond200) R26 Frame(CFA_Y, -2)
          CFI (cfiCond200) R27 Frame(CFA_Y, -1)
          CFI (cfiCond200) CFA_SP SP+6
          CFI (cfiCond200) CFA_Y Y+2
          CFI Block cfiCond201 Using cfiCommon0
          CFI (cfiCond201) Function ??functionSafeBattRemove
          CFI (cfiCond201) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_363
          CFI (cfiCond201) CFA_SP SP+6
          CFI Block cfiCond202 Using cfiCommon0
          CFI (cfiCond202) Function ??functionSafeBattRemove
          CFI (cfiCond202) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_364
          CFI (cfiCond202) CFA_SP SP+6
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function ??functionSetupDetectionTime
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_365
          CFI (cfiCond203) CFA_SP SP+6
          CFI Block cfiCond204 Using cfiCommon0
          CFI (cfiCond204) Function ??functionSetupInactivityTime
          CFI (cfiCond204) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_366
          CFI (cfiCond204) CFA_SP SP+6
          CFI Block cfiCond205 Using cfiCommon0
          CFI (cfiCond205) Function ??functionSetupWorkWeek
          CFI (cfiCond205) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_367
          CFI (cfiCond205) R26 Frame(CFA_Y, -2)
          CFI (cfiCond205) R27 Frame(CFA_Y, -1)
          CFI (cfiCond205) CFA_SP SP+6
          CFI (cfiCond205) CFA_Y Y+2
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function ??functionSetCheckPassword
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_368
          CFI (cfiCond206) R24 Frame(CFA_Y, -4)
          CFI (cfiCond206) R25 Frame(CFA_Y, -3)
          CFI (cfiCond206) R26 Frame(CFA_Y, -2)
          CFI (cfiCond206) R27 Frame(CFA_Y, -1)
          CFI (cfiCond206) CFA_SP SP+6
          CFI (cfiCond206) CFA_Y Y+4
          CFI Block cfiCond207 Using cfiCommon0
          CFI (cfiCond207) Function ??functionBatteryVoltage
          CFI (cfiCond207) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_369
          CFI (cfiCond207) R24 Frame(CFA_Y, -2)
          CFI (cfiCond207) R25 Frame(CFA_Y, -1)
          CFI (cfiCond207) CFA_SP SP+6
          CFI (cfiCond207) CFA_Y Y+2
          CFI Block cfiCond208 Using cfiCommon0
          CFI (cfiCond208) Function ??functionSerialNumber
          CFI (cfiCond208) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_370
          CFI (cfiCond208) R26 Frame(CFA_Y, -2)
          CFI (cfiCond208) R27 Frame(CFA_Y, -1)
          CFI (cfiCond208) CFA_SP SP+6
          CFI (cfiCond208) CFA_Y Y+2
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function ??functionResetNum
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_268, ??CrossCallReturnLabel_371
          CFI (cfiCond209) R24 Frame(CFA_Y, -5)
          CFI (cfiCond209) R25 Frame(CFA_Y, -4)
          CFI (cfiCond209) R26 Frame(CFA_Y, -3)
          CFI (cfiCond209) R27 Frame(CFA_Y, -2)
          CFI (cfiCond209) R4 Frame(CFA_Y, -1)
          CFI (cfiCond209) CFA_SP SP+6
          CFI (cfiCond209) CFA_Y Y+5
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ??displayDoneMessage
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_309
          CFI (cfiCond210) CFA_SP SP+8
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function ??displayErrorMessage
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_310
          CFI (cfiCond211) CFA_SP SP+8
          CFI Block cfiCond212 Using cfiCommon0
          CFI (cfiCond212) Function ??functionSetupWorkDay
          CFI (cfiCond212) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_33
          CFI (cfiCond212) R24 Frame(CFA_Y, -4)
          CFI (cfiCond212) R25 Frame(CFA_Y, -3)
          CFI (cfiCond212) R26 Frame(CFA_Y, -2)
          CFI (cfiCond212) R27 Frame(CFA_Y, -1)
          CFI (cfiCond212) CFA_SP SP+8
          CFI (cfiCond212) CFA_Y Y+4
          CFI Block cfiCond213 Using cfiCommon0
          CFI (cfiCond213) Function ??functionSetupWorkDay
          CFI (cfiCond213) Conditional ??CrossCallReturnLabel_274, ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_34
          CFI (cfiCond213) R24 Frame(CFA_Y, -4)
          CFI (cfiCond213) R25 Frame(CFA_Y, -3)
          CFI (cfiCond213) R26 Frame(CFA_Y, -2)
          CFI (cfiCond213) R27 Frame(CFA_Y, -1)
          CFI (cfiCond213) CFA_SP SP+8
          CFI (cfiCond213) CFA_Y Y+4
          CFI Block cfiPicker214 Using cfiCommon1
          CFI (cfiPicker214) NoFunction
          CFI (cfiPicker214) Picker
        LDI     R17, 0
        RCALL   ?Subroutine123
??CrossCallReturnLabel_296:
        LDI     R18, 0
        RET
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiCond196
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiCond201
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiCond204
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiCond207
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiCond212
          CFI EndBlock cfiCond213
          CFI EndBlock cfiPicker214

        RSEG CODE:CODE:NOROOT(1)
?Subroutine28:
          CFI Block cfiCond215 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_35
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond216 Using cfiCommon0
          CFI (cfiCond216) Function ??functionReports
          CFI (cfiCond216) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond216) R24 Frame(CFA_Y, -3)
          CFI (cfiCond216) R26 Frame(CFA_Y, -2)
          CFI (cfiCond216) R27 Frame(CFA_Y, -1)
          CFI (cfiCond216) CFA_SP SP+4
          CFI (cfiCond216) CFA_Y Y+13
          CFI Block cfiPicker217 Using cfiCommon1
          CFI (cfiPicker217) NoFunction
          CFI (cfiPicker217) Picker
        LDS     R19, (??curStatisticRecord + 25)
        LDI     R18, 5
        MUL     R19, R18
        RCALL   ?Subroutine121
??CrossCallReturnLabel_287:
        LDD     R18, Z+4
        CPI     R18, 3
        RET
          CFI EndBlock cfiCond215
          CFI EndBlock cfiCond216
          CFI EndBlock cfiPicker217

        RSEG CODE:CODE:NOROOT(1)
?Subroutine22:
          CFI Block cfiCond218 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_26
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ??functionReports
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond219) R24 Frame(CFA_Y, -3)
          CFI (cfiCond219) R26 Frame(CFA_Y, -2)
          CFI (cfiCond219) R27 Frame(CFA_Y, -1)
          CFI (cfiCond219) CFA_SP SP+4
          CFI (cfiCond219) CFA_Y Y+13
          CFI Block cfiPicker220 Using cfiCommon1
          CFI (cfiPicker220) NoFunction
          CFI (cfiPicker220) Picker
        RCALL   ?Subroutine99
??CrossCallReturnLabel_206:
        LDI     R17, 6
        RCALL   ?Subroutine95
??CrossCallReturnLabel_193:
        STS     (??displayState + 11), R16
        LDI     R19, 48
        LDI     R18, 2
        RET
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiPicker220

        RSEG CODE:CODE:NOROOT(1)
?Subroutine21:
          CFI Block cfiCond221 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_24
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ??functionReports
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_25
          CFI (cfiCond222) R24 Frame(CFA_Y, -3)
          CFI (cfiCond222) R26 Frame(CFA_Y, -2)
          CFI (cfiCond222) R27 Frame(CFA_Y, -1)
          CFI (cfiCond222) CFA_SP SP+4
          CFI (cfiCond222) CFA_Y Y+13
          CFI Block cfiPicker223 Using cfiCommon1
          CFI (cfiPicker223) NoFunction
          CFI (cfiPicker223) Picker
        RCALL   ?Subroutine106
??CrossCallReturnLabel_222:
        LDI     R17, 3
        RCALL   ?Subroutine95
??CrossCallReturnLabel_194:
        STS     (??displayState + 8), R16
        LDI     R19, 48
        LDI     R18, 2
        RET
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiPicker223

        RSEG CODE:CODE:NOROOT(1)
?Subroutine95:
          CFI Block cfiCond224 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_26
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+6
          CFI CFA_Y Y+2
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function ??functionReports
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_27
          CFI (cfiCond225) R24 Frame(CFA_Y, -3)
          CFI (cfiCond225) R26 Frame(CFA_Y, -2)
          CFI (cfiCond225) R27 Frame(CFA_Y, -1)
          CFI (cfiCond225) CFA_SP SP+6
          CFI (cfiCond225) CFA_Y Y+13
          CFI Block cfiCond226 Using cfiCommon0
          CFI (cfiCond226) Function ??functionSetupDateTime
          CFI (cfiCond226) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_24
          CFI (cfiCond226) R26 Frame(CFA_Y, -2)
          CFI (cfiCond226) R27 Frame(CFA_Y, -1)
          CFI (cfiCond226) CFA_SP SP+6
          CFI (cfiCond226) CFA_Y Y+2
          CFI Block cfiCond227 Using cfiCommon0
          CFI (cfiCond227) Function ??functionReports
          CFI (cfiCond227) Conditional ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_25
          CFI (cfiCond227) R24 Frame(CFA_Y, -3)
          CFI (cfiCond227) R26 Frame(CFA_Y, -2)
          CFI (cfiCond227) R27 Frame(CFA_Y, -1)
          CFI (cfiCond227) CFA_SP SP+6
          CFI (cfiCond227) CFA_Y Y+13
          CFI Block cfiPicker228 Using cfiCommon1
          CFI (cfiPicker228) NoFunction
          CFI (cfiPicker228) Picker
        RCALL   ?Subroutine118
??CrossCallReturnLabel_280:
        LDI     R16, 45
        RET
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiCond226
          CFI EndBlock cfiCond227
          CFI EndBlock cfiPicker228

        RSEG CODE:CODE:NOROOT(1)
?Subroutine15:
          CFI Block cfiCond229 Using cfiCommon0
          CFI Function ??functionReportVisitorsTotal
          CFI Conditional ??CrossCallReturnLabel_20
          CFI CFA_SP SP+4
          CFI Block cfiCond230 Using cfiCommon0
          CFI (cfiCond230) Function ??functionReports
          CFI (cfiCond230) Conditional ??CrossCallReturnLabel_21
          CFI (cfiCond230) R24 Frame(CFA_Y, -3)
          CFI (cfiCond230) R26 Frame(CFA_Y, -2)
          CFI (cfiCond230) R27 Frame(CFA_Y, -1)
          CFI (cfiCond230) CFA_SP SP+4
          CFI (cfiCond230) CFA_Y Y+13
          CFI Block cfiPicker231 Using cfiCommon1
          CFI (cfiPicker231) NoFunction
          CFI (cfiPicker231) Picker
        RCALL   ?Subroutine116
??CrossCallReturnLabel_269:
        RCALL   ?Subroutine87
??CrossCallReturnLabel_183:
        LDI     R18, 8
        RET
          CFI EndBlock cfiCond229
          CFI EndBlock cfiCond230
          CFI EndBlock cfiPicker231

        RSEG CODE:CODE:NOROOT(1)
?Subroutine11:
          CFI Block cfiCond232 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_18
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond233 Using cfiCommon0
          CFI (cfiCond233) Function ??functionReports
          CFI (cfiCond233) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond233) R24 Frame(CFA_Y, -3)
          CFI (cfiCond233) R26 Frame(CFA_Y, -2)
          CFI (cfiCond233) R27 Frame(CFA_Y, -1)
          CFI (cfiCond233) CFA_SP SP+4
          CFI (cfiCond233) CFA_Y Y+13
          CFI Block cfiPicker234 Using cfiCommon1
          CFI (cfiPicker234) NoFunction
          CFI (cfiPicker234) Picker
        RCALL   ?Subroutine87
??CrossCallReturnLabel_184:
        LDI     R18, 7
        MOVW    R31:R30, R27:R26
        RET
          CFI EndBlock cfiCond232
          CFI EndBlock cfiCond233
          CFI EndBlock cfiPicker234

        RSEG CODE:CODE:NOROOT(1)
?Subroutine87:
          CFI Block cfiCond235 Using cfiCommon0
          CFI Function ??functionReportVisitorsTotal
          CFI Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_20
          CFI CFA_SP SP+6
          CFI Block cfiCond236 Using cfiCommon0
          CFI (cfiCond236) Function ??functionReports
          CFI (cfiCond236) Conditional ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_21
          CFI (cfiCond236) R24 Frame(CFA_Y, -3)
          CFI (cfiCond236) R26 Frame(CFA_Y, -2)
          CFI (cfiCond236) R27 Frame(CFA_Y, -1)
          CFI (cfiCond236) CFA_SP SP+6
          CFI (cfiCond236) CFA_Y Y+13
          CFI Block cfiCond237 Using cfiCommon0
          CFI (cfiCond237) Function ??functionReports
          CFI (cfiCond237) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_18
          CFI (cfiCond237) R24 Frame(CFA_Y, -3)
          CFI (cfiCond237) R26 Frame(CFA_Y, -2)
          CFI (cfiCond237) R27 Frame(CFA_Y, -1)
          CFI (cfiCond237) CFA_SP SP+6
          CFI (cfiCond237) CFA_Y Y+13
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function ??functionReports
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_19
          CFI (cfiCond238) R24 Frame(CFA_Y, -3)
          CFI (cfiCond238) R26 Frame(CFA_Y, -2)
          CFI (cfiCond238) R27 Frame(CFA_Y, -1)
          CFI (cfiCond238) CFA_SP SP+6
          CFI (cfiCond238) CFA_Y Y+13
          CFI Block cfiPicker239 Using cfiCommon1
          CFI (cfiPicker239) NoFunction
          CFI (cfiPicker239) Picker
        LDI     R17, 1
        LDI     R16, 1
        RCALL   ?Subroutine119
??CrossCallReturnLabel_376:
        LDI     R19, 0
        RET
          CFI EndBlock cfiCond235
          CFI EndBlock cfiCond236
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiPicker239

        RSEG CODE:CODE:NOROOT(1)
?Subroutine9:
          CFI Block cfiCond240 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond241 Using cfiCommon0
          CFI (cfiCond241) Function ??functionReports
          CFI (cfiCond241) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond241) R24 Frame(CFA_Y, -3)
          CFI (cfiCond241) R26 Frame(CFA_Y, -2)
          CFI (cfiCond241) R27 Frame(CFA_Y, -1)
          CFI (cfiCond241) CFA_SP SP+4
          CFI (cfiCond241) CFA_Y Y+13
          CFI Block cfiPicker242 Using cfiCommon1
          CFI (cfiPicker242) NoFunction
          CFI (cfiPicker242) Picker
        RCALL   ?Subroutine114
??CrossCallReturnLabel_266:
        SUBI    R16, 2
        RET
          CFI EndBlock cfiCond240
          CFI EndBlock cfiCond241
          CFI EndBlock cfiPicker242
//  706 

        RSEG CODE:CODE:NOROOT(1)
//  707   void functionSafeBattRemove()
??functionSafeBattRemove:
          CFI Block cfiBlock243 Using cfiCommon0
          CFI Function ??functionSafeBattRemove
//  708   {
        FUNCALL ??functionSafeBattRemove, ??popBuff
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??clearBuffer
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??ready
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??saveDeviceStatus
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??setUpdateCounter
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??getString
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??str2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??refreshDisplay
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??ready
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??isUpdateCounter
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??blockMemOperations
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??blocked
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??setInactivityTimeTimeout
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??getString
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??str2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??getTimer
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??num2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??refreshDisplay
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSafeBattRemove, ??transitionDown
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine59
??CrossCallReturnLabel_117:
        BREQ    ??CrossCallReturnLabel_105
//  709     if (activeFunctionChanged)
//  710     {
//  711       menuStack[menuStackPos].funcState = 0;
        LDI     R16, 0
        RCALL   ?Subroutine55
//  712     }
//  713 
//  714     while (transitionKey)
??CrossCallReturnLabel_105:
        RCALL   ?Subroutine50
??CrossCallReturnLabel_89:
        BREQ    ??CrossCallReturnLabel_337
//  715     {
//  716       getNextTransitionKey();
??functionSafeBattRemove_1:
        RCALL   ?Subroutine33
//  717     }
??CrossCallReturnLabel_326:
        BREQ    ??functionSafeBattRemove_2
        RCALL   ?Subroutine34
??CrossCallReturnLabel_348:
        TST     R16
        BREQ    ??CrossCallReturnLabel_337
        RJMP    ??functionSafeBattRemove_1
??functionSafeBattRemove_2:
        RCALL   ??Subroutine132_0
//  718 
//  719     LCDDriver::clearBuffer();
??CrossCallReturnLabel_337:
        RCALL   ?Subroutine42
//  720 
//  721     switch (menuStack[menuStackPos].funcState)
??CrossCallReturnLabel_71:
        RCALL   ?Subroutine82
??CrossCallReturnLabel_177:
        BREQ    ??functionSafeBattRemove_3
        DEC     R16
        BREQ    ??functionSafeBattRemove_4
        DEC     R16
        BREQ    ??functionSafeBattRemove_5
        RJMP    ??CrossCallReturnLabel_106
//  722     {
//  723       case 0:
//  724         if (GLOBAL::Counter::ready())
??functionSafeBattRemove_3:
        CALL    ??ready
        TST     R16
        BREQ    ??CrossCallReturnLabel_106
//  725         {
//  726           DeviceManager::saveDeviceStatus();
        CALL    ??saveDeviceStatus
//  727           GLOBAL::Counter::setUpdateCounter();
        CALL    ??setUpdateCounter
//  728           menuStack[menuStackPos].funcState = 1;
        LDI     R16, 1
//  729         }
??functionSafeBattRemove_6:
        RCALL   ?Subroutine55
//  730         break;
//  731 
//  732       case 1:
//  733         if (GLOBAL::Counter::ready() && (!GLOBAL::Counter::isUpdateCounter()))
//  734         {
//  735           if (MemAT25Driver::blockMemOperations())
//  736           {
//  737             menuStack[menuStackPos].funcState = 2;
//  738           }
//  739         }
//  740         break;
//  741 
//  742       case 2:
//  743         if (MemAT25Driver::blocked())
//  744         {
//  745           setInactivityTimeTimeout();
//  746 
//  747           LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_MESSAGE_DONE), LCDDriver::LCDTextIdentation_Center);
//  748           LCDDriver::displayState.line[1][6] = '0';
//  749           LCDDriver::displayState.line[1][7] = '0';
//  750           LCDDriver::displayState.line[1][8] = LCD_DISPLAY_SYMBOL_COLON;
//  751           LCDDriver::num2Buf(1, 10, GLOBAL::MultyThreading::getTimer(GLOBALTIMERS_MEMAT25_ERRORTIMER) / 1000, 2, '0');
//  752           LCDDriver::refreshDisplay();
//  753         }
//  754         else
//  755         {
//  756           transitionDown();
//  757         }
//  758         return;
//  759     }
//  760 
//  761     LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_MESSAGE_SAVING), LCDDriver::LCDTextIdentation_Center);
??CrossCallReturnLabel_106:
        LDI     R16, 3
        RCALL   ?Subroutine27
//  762     LCDDriver::displayState.line[1][15] = LCD_DISPLAY_SYMBOL_SUN;
??CrossCallReturnLabel_363:
        LDI     R16, 238
        STS     (??displayState + 35), R16
//  763     LCDDriver::refreshDisplay();
        RJMP    ??CrossCallReturnLabel_395
??functionSafeBattRemove_4:
        CALL    ??ready
        TST     R16
        BREQ    ??CrossCallReturnLabel_106
        CALL    ??isUpdateCounter
        TST     R16
        BRNE    ??CrossCallReturnLabel_106
        CALL    ??blockMemOperations
        TST     R16
        BREQ    ??CrossCallReturnLabel_106
        LDI     R16, 2
        RJMP    ??functionSafeBattRemove_6
??functionSafeBattRemove_5:
        CALL    ??blocked
        TST     R16
        BREQ    ??functionSafeBattRemove_7
        RCALL   ?Subroutine38
??CrossCallReturnLabel_55:
        LDI     R16, 1
        RCALL   ?Subroutine27
??CrossCallReturnLabel_364:
        LDI     R30, LOW(??displayState)
        LDI     R31, (??displayState) >> 8
        LDI     R16, 48
        STD     Z+26, R16
        STD     Z+27, R16
        LDI     R16, 58
        STD     Z+28, R16
        LDI     R16, 3
        RCALL   ?Subroutine75
??CrossCallReturnLabel_160:
        RCALL   ?Subroutine66
??CrossCallReturnLabel_145:
        LDI     R20, 232
        LDI     R21, 3
        RCALL   ?Subroutine43
??CrossCallReturnLabel_78:
        LDI     R17, 10
        RCALL   ?Subroutine115
??CrossCallReturnLabel_395:
        RCALL   ?Subroutine98
??CrossCallReturnLabel_303:
        RCALL   ?Subroutine100
??CrossCallReturnLabel_210:
        LDI     R16, 12
        JMP     ??refreshDisplay
??functionSafeBattRemove_7:
        RJMP    ??transitionDown
          CFI EndBlock cfiBlock243
//  764   }

        RSEG CODE:CODE:NOROOT(1)
?Subroutine100:
          CFI Block cfiCond244 Using cfiCommon0
          CFI Function ??functionIncorrectFunction
          CFI Conditional ??CrossCallReturnLabel_208
          CFI CFA_SP SP+4
          CFI CFA_Y Y+20
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function ??functionIncorrectFunction
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_209
          CFI (cfiCond245) CFA_SP SP+4
          CFI (cfiCond245) CFA_Y Y+20
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function ??functionSafeBattRemove
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_210
          CFI (cfiCond246) CFA_SP SP+4
          CFI Block cfiCond247 Using cfiCommon0
          CFI (cfiCond247) Function ??functionMenu
          CFI (cfiCond247) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_399
          CFI (cfiCond247) R26 Frame(CFA_Y, -2)
          CFI (cfiCond247) R27 Frame(CFA_Y, -1)
          CFI (cfiCond247) CFA_SP SP+6
          CFI (cfiCond247) CFA_Y Y+2
          CFI Block cfiCond248 Using cfiCommon0
          CFI (cfiCond248) Function ??functionReportVisitorsTotal
          CFI (cfiCond248) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_400
          CFI (cfiCond248) CFA_SP SP+6
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function ??functionSerialNumber
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_211, ??CrossCallReturnLabel_401
          CFI (cfiCond249) R26 Frame(CFA_Y, -2)
          CFI (cfiCond249) R27 Frame(CFA_Y, -1)
          CFI (cfiCond249) CFA_SP SP+6
          CFI (cfiCond249) CFA_Y Y+2
          CFI Block cfiPicker250 Using cfiCommon1
          CFI (cfiPicker250) NoFunction
          CFI (cfiPicker250) Picker
        LDI     R18, 0
        LDI     R17, 0
        RET
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiCond247
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiPicker250

        RSEG CODE:CODE:NOROOT(1)
?Subroutine66:
          CFI Block cfiCond251 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_142
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ??functionSetupDateTime
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_143
          CFI (cfiCond252) R26 Frame(CFA_Y, -2)
          CFI (cfiCond252) R27 Frame(CFA_Y, -1)
          CFI (cfiCond252) CFA_SP SP+4
          CFI (cfiCond252) CFA_Y Y+2
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ??functionReports
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_144
          CFI (cfiCond253) R24 Frame(CFA_Y, -3)
          CFI (cfiCond253) R26 Frame(CFA_Y, -2)
          CFI (cfiCond253) R27 Frame(CFA_Y, -1)
          CFI (cfiCond253) CFA_SP SP+4
          CFI (cfiCond253) CFA_Y Y+13
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function ??functionSafeBattRemove
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_145
          CFI (cfiCond254) CFA_SP SP+4
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ??functionBatteryVoltage
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_146
          CFI (cfiCond255) R24 Frame(CFA_Y, -2)
          CFI (cfiCond255) R25 Frame(CFA_Y, -1)
          CFI (cfiCond255) CFA_SP SP+4
          CFI (cfiCond255) CFA_Y Y+2
          CFI Block cfiPicker256 Using cfiCommon1
          CFI (cfiPicker256) NoFunction
          CFI (cfiPicker256) Picker
        LDI     R19, 48
        LDI     R18, 2
        RET
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiPicker256

        RSEG CODE:CODE:NOROOT(1)
?Subroutine38:
          CFI Block cfiCond257 Using cfiCommon0
          CFI Function ??enable
          CFI Conditional ??CrossCallReturnLabel_56
          CFI R24 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+1
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function ??functionSafeBattRemove
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_55
          CFI (cfiCond258) CFA_SP SP+4
          CFI Block cfiCond259 Using cfiCommon0
          CFI (cfiCond259) Function ??run
          CFI (cfiCond259) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond259) CFA_SP SP+4
          CFI Block cfiPicker260 Using cfiCommon1
          CFI (cfiPicker260) NoFunction
          CFI (cfiPicker260) Picker
        RJMP    ??setInactivityTimeTimeout
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiCond259
          CFI EndBlock cfiPicker260

        RSEG CODE:CODE:NOROOT(1)
?Subroutine33:
          CFI Block cfiCond261 Using cfiCommon0
          CFI Function ??getNextTransitionKey
          CFI Conditional ??CrossCallReturnLabel_321
          CFI CFA_SP SP+4
          CFI Block cfiCond262 Using cfiCommon0
          CFI (cfiCond262) Function ??functionMenu
          CFI (cfiCond262) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond262) R26 Frame(CFA_Y, -2)
          CFI (cfiCond262) R27 Frame(CFA_Y, -1)
          CFI (cfiCond262) CFA_SP SP+4
          CFI (cfiCond262) CFA_Y Y+2
          CFI Block cfiCond263 Using cfiCommon0
          CFI (cfiCond263) Function ??functionSetupDateTime
          CFI (cfiCond263) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond263) R26 Frame(CFA_Y, -2)
          CFI (cfiCond263) R27 Frame(CFA_Y, -1)
          CFI (cfiCond263) CFA_SP SP+4
          CFI (cfiCond263) CFA_Y Y+2
          CFI Block cfiCond264 Using cfiCommon0
          CFI (cfiCond264) Function ??functionReportVisitorsTotal
          CFI (cfiCond264) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond264) CFA_SP SP+4
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function ??functionReports
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond265) R24 Frame(CFA_Y, -3)
          CFI (cfiCond265) R26 Frame(CFA_Y, -2)
          CFI (cfiCond265) R27 Frame(CFA_Y, -1)
          CFI (cfiCond265) CFA_SP SP+4
          CFI (cfiCond265) CFA_Y Y+13
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function ??functionSafeBattRemove
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond266) CFA_SP SP+4
          CFI Block cfiCond267 Using cfiCommon0
          CFI (cfiCond267) Function ??functionSetupWorkDay
          CFI (cfiCond267) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond267) R24 Frame(CFA_Y, -4)
          CFI (cfiCond267) R25 Frame(CFA_Y, -3)
          CFI (cfiCond267) R26 Frame(CFA_Y, -2)
          CFI (cfiCond267) R27 Frame(CFA_Y, -1)
          CFI (cfiCond267) CFA_SP SP+4
          CFI (cfiCond267) CFA_Y Y+4
          CFI Block cfiCond268 Using cfiCommon0
          CFI (cfiCond268) Function ??functionSetupDetectionTime
          CFI (cfiCond268) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond268) CFA_SP SP+4
          CFI Block cfiCond269 Using cfiCommon0
          CFI (cfiCond269) Function ??functionSetupInactivityTime
          CFI (cfiCond269) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond269) CFA_SP SP+4
          CFI Block cfiCond270 Using cfiCommon0
          CFI (cfiCond270) Function ??functionSetupWorkWeek
          CFI (cfiCond270) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond270) R26 Frame(CFA_Y, -2)
          CFI (cfiCond270) R27 Frame(CFA_Y, -1)
          CFI (cfiCond270) CFA_SP SP+4
          CFI (cfiCond270) CFA_Y Y+2
          CFI Block cfiCond271 Using cfiCommon0
          CFI (cfiCond271) Function ??functionSetCheckPassword
          CFI (cfiCond271) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond271) R24 Frame(CFA_Y, -4)
          CFI (cfiCond271) R25 Frame(CFA_Y, -3)
          CFI (cfiCond271) R26 Frame(CFA_Y, -2)
          CFI (cfiCond271) R27 Frame(CFA_Y, -1)
          CFI (cfiCond271) CFA_SP SP+4
          CFI (cfiCond271) CFA_Y Y+4
          CFI Block cfiCond272 Using cfiCommon0
          CFI (cfiCond272) Function ??functionSensorQuality
          CFI (cfiCond272) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond272) CFA_SP SP+4
          CFI Block cfiPicker273 Using cfiCommon1
          CFI (cfiPicker273) NoFunction
          CFI (cfiPicker273) Picker
        LDS     R16, (??curStatisticRecord + 36)
          CFI EndBlock cfiCond261
          CFI EndBlock cfiCond262
          CFI EndBlock cfiCond263
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiCond267
          CFI EndBlock cfiCond268
          CFI EndBlock cfiCond269
          CFI EndBlock cfiCond270
          CFI EndBlock cfiCond271
          CFI EndBlock cfiCond272
          CFI EndBlock cfiPicker273
        REQUIRE ??Subroutine131_0
        ;               // Fall through to label ??Subroutine131_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine131_0:
          CFI Block cfiCond274 Using cfiCommon0
          CFI Function ??leaveInterface
          CFI Conditional ??CrossCallReturnLabel_320
          CFI CFA_SP SP+4
          CFI Block cfiCond275 Using cfiCommon0
          CFI (cfiCond275) Function ??getNextTransitionKey
          CFI (cfiCond275) Conditional ??CrossCallReturnLabel_321
          CFI (cfiCond275) CFA_SP SP+4
          CFI Block cfiCond276 Using cfiCommon0
          CFI (cfiCond276) Function ??functionMenu
          CFI (cfiCond276) Conditional ??CrossCallReturnLabel_322
          CFI (cfiCond276) R26 Frame(CFA_Y, -2)
          CFI (cfiCond276) R27 Frame(CFA_Y, -1)
          CFI (cfiCond276) CFA_SP SP+4
          CFI (cfiCond276) CFA_Y Y+2
          CFI Block cfiCond277 Using cfiCommon0
          CFI (cfiCond277) Function ??functionSetupDateTime
          CFI (cfiCond277) Conditional ??CrossCallReturnLabel_323
          CFI (cfiCond277) R26 Frame(CFA_Y, -2)
          CFI (cfiCond277) R27 Frame(CFA_Y, -1)
          CFI (cfiCond277) CFA_SP SP+4
          CFI (cfiCond277) CFA_Y Y+2
          CFI Block cfiCond278 Using cfiCommon0
          CFI (cfiCond278) Function ??functionReportVisitorsTotal
          CFI (cfiCond278) Conditional ??CrossCallReturnLabel_324
          CFI (cfiCond278) CFA_SP SP+4
          CFI Block cfiCond279 Using cfiCommon0
          CFI (cfiCond279) Function ??functionReports
          CFI (cfiCond279) Conditional ??CrossCallReturnLabel_325
          CFI (cfiCond279) R24 Frame(CFA_Y, -3)
          CFI (cfiCond279) R26 Frame(CFA_Y, -2)
          CFI (cfiCond279) R27 Frame(CFA_Y, -1)
          CFI (cfiCond279) CFA_SP SP+4
          CFI (cfiCond279) CFA_Y Y+13
          CFI Block cfiCond280 Using cfiCommon0
          CFI (cfiCond280) Function ??functionSafeBattRemove
          CFI (cfiCond280) Conditional ??CrossCallReturnLabel_326
          CFI (cfiCond280) CFA_SP SP+4
          CFI Block cfiCond281 Using cfiCommon0
          CFI (cfiCond281) Function ??functionSetupWorkDay
          CFI (cfiCond281) Conditional ??CrossCallReturnLabel_327
          CFI (cfiCond281) R24 Frame(CFA_Y, -4)
          CFI (cfiCond281) R25 Frame(CFA_Y, -3)
          CFI (cfiCond281) R26 Frame(CFA_Y, -2)
          CFI (cfiCond281) R27 Frame(CFA_Y, -1)
          CFI (cfiCond281) CFA_SP SP+4
          CFI (cfiCond281) CFA_Y Y+4
          CFI Block cfiCond282 Using cfiCommon0
          CFI (cfiCond282) Function ??functionSetupDetectionTime
          CFI (cfiCond282) Conditional ??CrossCallReturnLabel_328
          CFI (cfiCond282) CFA_SP SP+4
          CFI Block cfiCond283 Using cfiCommon0
          CFI (cfiCond283) Function ??functionSetupInactivityTime
          CFI (cfiCond283) Conditional ??CrossCallReturnLabel_329
          CFI (cfiCond283) CFA_SP SP+4
          CFI Block cfiCond284 Using cfiCommon0
          CFI (cfiCond284) Function ??functionSetupWorkWeek
          CFI (cfiCond284) Conditional ??CrossCallReturnLabel_330
          CFI (cfiCond284) R26 Frame(CFA_Y, -2)
          CFI (cfiCond284) R27 Frame(CFA_Y, -1)
          CFI (cfiCond284) CFA_SP SP+4
          CFI (cfiCond284) CFA_Y Y+2
          CFI Block cfiCond285 Using cfiCommon0
          CFI (cfiCond285) Function ??functionSetCheckPassword
          CFI (cfiCond285) Conditional ??CrossCallReturnLabel_331
          CFI (cfiCond285) R24 Frame(CFA_Y, -4)
          CFI (cfiCond285) R25 Frame(CFA_Y, -3)
          CFI (cfiCond285) R26 Frame(CFA_Y, -2)
          CFI (cfiCond285) R27 Frame(CFA_Y, -1)
          CFI (cfiCond285) CFA_SP SP+4
          CFI (cfiCond285) CFA_Y Y+4
          CFI Block cfiCond286 Using cfiCommon0
          CFI (cfiCond286) Function ??functionSensorQuality
          CFI (cfiCond286) Conditional ??CrossCallReturnLabel_332
          CFI (cfiCond286) CFA_SP SP+4
          CFI Block cfiPicker287 Using cfiCommon1
          CFI (cfiPicker287) NoFunction
          CFI (cfiPicker287) Picker
        TST     R16
        LDI     R16, 0
        RET
          CFI EndBlock cfiCond274
          CFI EndBlock cfiCond275
          CFI EndBlock cfiCond276
          CFI EndBlock cfiCond277
          CFI EndBlock cfiCond278
          CFI EndBlock cfiCond279
          CFI EndBlock cfiCond280
          CFI EndBlock cfiCond281
          CFI EndBlock cfiCond282
          CFI EndBlock cfiCond283
          CFI EndBlock cfiCond284
          CFI EndBlock cfiCond285
          CFI EndBlock cfiCond286
          CFI EndBlock cfiPicker287

        RSEG CODE:CODE:NOROOT(1)
?Subroutine13:
          CFI Block cfiCond288 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_391
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond289 Using cfiCommon0
          CFI (cfiCond289) Function ??functionSetupWorkDay
          CFI (cfiCond289) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond289) R24 Frame(CFA_Y, -4)
          CFI (cfiCond289) R25 Frame(CFA_Y, -3)
          CFI (cfiCond289) R26 Frame(CFA_Y, -2)
          CFI (cfiCond289) R27 Frame(CFA_Y, -1)
          CFI (cfiCond289) CFA_SP SP+4
          CFI (cfiCond289) CFA_Y Y+4
          CFI Block cfiPicker290 Using cfiCommon1
          CFI (cfiPicker290) NoFunction
          CFI (cfiPicker290) Picker
        LDI     R17, 6
          CFI EndBlock cfiCond288
          CFI EndBlock cfiCond289
          CFI EndBlock cfiPicker290
        REQUIRE ?Subroutine115
        ;               // Fall through to label ?Subroutine115

        RSEG CODE:CODE:NOROOT(1)
?Subroutine115:
          CFI Block cfiCond291 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_391
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond292 Using cfiCommon0
          CFI (cfiCond292) Function ??functionSetupWorkDay
          CFI (cfiCond292) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond292) R24 Frame(CFA_Y, -4)
          CFI (cfiCond292) R25 Frame(CFA_Y, -3)
          CFI (cfiCond292) R26 Frame(CFA_Y, -2)
          CFI (cfiCond292) R27 Frame(CFA_Y, -1)
          CFI (cfiCond292) CFA_SP SP+4
          CFI (cfiCond292) CFA_Y Y+4
          CFI Block cfiCond293 Using cfiCommon0
          CFI (cfiCond293) Function ??functionSetupDateTime
          CFI (cfiCond293) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond293) R26 Frame(CFA_Y, -2)
          CFI (cfiCond293) R27 Frame(CFA_Y, -1)
          CFI (cfiCond293) CFA_SP SP+4
          CFI (cfiCond293) CFA_Y Y+2
          CFI Block cfiCond294 Using cfiCommon0
          CFI (cfiCond294) Function ??functionReports
          CFI (cfiCond294) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond294) R24 Frame(CFA_Y, -3)
          CFI (cfiCond294) R26 Frame(CFA_Y, -2)
          CFI (cfiCond294) R27 Frame(CFA_Y, -1)
          CFI (cfiCond294) CFA_SP SP+4
          CFI (cfiCond294) CFA_Y Y+13
          CFI Block cfiCond295 Using cfiCommon0
          CFI (cfiCond295) Function ??functionSafeBattRemove
          CFI (cfiCond295) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond295) CFA_SP SP+4
          CFI Block cfiCond296 Using cfiCommon0
          CFI (cfiCond296) Function ??functionBatteryVoltage
          CFI (cfiCond296) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond296) R24 Frame(CFA_Y, -2)
          CFI (cfiCond296) R25 Frame(CFA_Y, -1)
          CFI (cfiCond296) CFA_SP SP+4
          CFI (cfiCond296) CFA_Y Y+2
          CFI Block cfiCond297 Using cfiCommon0
          CFI (cfiCond297) Function ??functionSetupDateTime
          CFI (cfiCond297) Conditional ??CrossCallReturnLabel_397, ??CrossCallReturnLabel_12
          CFI (cfiCond297) R26 Frame(CFA_Y, -2)
          CFI (cfiCond297) R27 Frame(CFA_Y, -1)
          CFI (cfiCond297) CFA_SP SP+6
          CFI (cfiCond297) CFA_Y Y+2
          CFI Block cfiCond298 Using cfiCommon0
          CFI (cfiCond298) Function ??functionSetupDateTime
          CFI (cfiCond298) Conditional ??CrossCallReturnLabel_397, ??CrossCallReturnLabel_13
          CFI (cfiCond298) R26 Frame(CFA_Y, -2)
          CFI (cfiCond298) R27 Frame(CFA_Y, -1)
          CFI (cfiCond298) CFA_SP SP+6
          CFI (cfiCond298) CFA_Y Y+2
          CFI Block cfiCond299 Using cfiCommon0
          CFI (cfiCond299) Function ??functionSetupWorkDay
          CFI (cfiCond299) Conditional ??CrossCallReturnLabel_397, ??CrossCallReturnLabel_14
          CFI (cfiCond299) R24 Frame(CFA_Y, -4)
          CFI (cfiCond299) R25 Frame(CFA_Y, -3)
          CFI (cfiCond299) R26 Frame(CFA_Y, -2)
          CFI (cfiCond299) R27 Frame(CFA_Y, -1)
          CFI (cfiCond299) CFA_SP SP+6
          CFI (cfiCond299) CFA_Y Y+4
          CFI Block cfiCond300 Using cfiCommon0
          CFI (cfiCond300) Function ??functionSetupWorkDay
          CFI (cfiCond300) Conditional ??CrossCallReturnLabel_397, ??CrossCallReturnLabel_15
          CFI (cfiCond300) R24 Frame(CFA_Y, -4)
          CFI (cfiCond300) R25 Frame(CFA_Y, -3)
          CFI (cfiCond300) R26 Frame(CFA_Y, -2)
          CFI (cfiCond300) R27 Frame(CFA_Y, -1)
          CFI (cfiCond300) CFA_SP SP+6
          CFI (cfiCond300) CFA_Y Y+4
          CFI Block cfiCond301 Using cfiCommon0
          CFI (cfiCond301) Function ??functionSetupDetectionTime
          CFI (cfiCond301) Conditional ??CrossCallReturnLabel_398, ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_377
          CFI (cfiCond301) CFA_SP SP+8
          CFI Block cfiCond302 Using cfiCommon0
          CFI (cfiCond302) Function ??functionBatteryVoltage
          CFI (cfiCond302) Conditional ??CrossCallReturnLabel_398, ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_378
          CFI (cfiCond302) R24 Frame(CFA_Y, -2)
          CFI (cfiCond302) R25 Frame(CFA_Y, -1)
          CFI (cfiCond302) CFA_SP SP+8
          CFI (cfiCond302) CFA_Y Y+2
          CFI Block cfiCond303 Using cfiCommon0
          CFI (cfiCond303) Function ??functionSetupInactivityTime
          CFI (cfiCond303) Conditional ??CrossCallReturnLabel_398, ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_379
          CFI (cfiCond303) CFA_SP SP+8
          CFI Block cfiCond304 Using cfiCommon0
          CFI (cfiCond304) Function ??functionSetupWorkDay
          CFI (cfiCond304) Conditional ??CrossCallReturnLabel_398, ??CrossCallReturnLabel_382
          CFI (cfiCond304) R24 Frame(CFA_Y, -4)
          CFI (cfiCond304) R25 Frame(CFA_Y, -3)
          CFI (cfiCond304) R26 Frame(CFA_Y, -2)
          CFI (cfiCond304) R27 Frame(CFA_Y, -1)
          CFI (cfiCond304) CFA_SP SP+6
          CFI (cfiCond304) CFA_Y Y+4
          CFI Block cfiCond305 Using cfiCommon0
          CFI (cfiCond305) Function ??functionResetNum
          CFI (cfiCond305) Conditional ??CrossCallReturnLabel_398, ??CrossCallReturnLabel_381
          CFI (cfiCond305) R24 Frame(CFA_Y, -5)
          CFI (cfiCond305) R25 Frame(CFA_Y, -4)
          CFI (cfiCond305) R26 Frame(CFA_Y, -3)
          CFI (cfiCond305) R27 Frame(CFA_Y, -2)
          CFI (cfiCond305) R4 Frame(CFA_Y, -1)
          CFI (cfiCond305) CFA_SP SP+6
          CFI (cfiCond305) CFA_Y Y+5
          CFI Block cfiPicker306 Using cfiCommon1
          CFI (cfiPicker306) NoFunction
          CFI (cfiPicker306) Picker
        LDI     R16, 1
          CFI EndBlock cfiCond291
          CFI EndBlock cfiCond292
          CFI EndBlock cfiCond293
          CFI EndBlock cfiCond294
          CFI EndBlock cfiCond295
          CFI EndBlock cfiCond296
          CFI EndBlock cfiCond297
          CFI EndBlock cfiCond298
          CFI EndBlock cfiCond299
          CFI EndBlock cfiCond300
          CFI EndBlock cfiCond301
          CFI EndBlock cfiCond302
          CFI EndBlock cfiCond303
          CFI EndBlock cfiCond304
          CFI EndBlock cfiCond305
          CFI EndBlock cfiPicker306
        REQUIRE ?Subroutine122
        ;               // Fall through to label ?Subroutine122

        RSEG CODE:CODE:NOROOT(1)
?Subroutine122:
          CFI Block cfiCond307 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_279
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond308 Using cfiCommon0
          CFI (cfiCond308) Function ??functionReports
          CFI (cfiCond308) Conditional ??CrossCallReturnLabel_278
          CFI (cfiCond308) R24 Frame(CFA_Y, -3)
          CFI (cfiCond308) R26 Frame(CFA_Y, -2)
          CFI (cfiCond308) R27 Frame(CFA_Y, -1)
          CFI (cfiCond308) CFA_SP SP+4
          CFI (cfiCond308) CFA_Y Y+13
          CFI Block cfiCond309 Using cfiCommon0
          CFI (cfiCond309) Function ??functionReports
          CFI (cfiCond309) Conditional ??CrossCallReturnLabel_277
          CFI (cfiCond309) R24 Frame(CFA_Y, -3)
          CFI (cfiCond309) R26 Frame(CFA_Y, -2)
          CFI (cfiCond309) R27 Frame(CFA_Y, -1)
          CFI (cfiCond309) CFA_SP SP+4
          CFI (cfiCond309) CFA_Y Y+13
          CFI Block cfiCond310 Using cfiCommon0
          CFI (cfiCond310) Function ??functionReports
          CFI (cfiCond310) Conditional ??CrossCallReturnLabel_276
          CFI (cfiCond310) R24 Frame(CFA_Y, -3)
          CFI (cfiCond310) R26 Frame(CFA_Y, -2)
          CFI (cfiCond310) R27 Frame(CFA_Y, -1)
          CFI (cfiCond310) CFA_SP SP+4
          CFI (cfiCond310) CFA_Y Y+13
          CFI Block cfiCond311 Using cfiCommon0
          CFI (cfiCond311) Function ??functionReports
          CFI (cfiCond311) Conditional ??CrossCallReturnLabel_275
          CFI (cfiCond311) R24 Frame(CFA_Y, -3)
          CFI (cfiCond311) R26 Frame(CFA_Y, -2)
          CFI (cfiCond311) R27 Frame(CFA_Y, -1)
          CFI (cfiCond311) CFA_SP SP+4
          CFI (cfiCond311) CFA_Y Y+13
          CFI Block cfiCond312 Using cfiCommon0
          CFI (cfiCond312) Function ??functionSetupDateTime
          CFI (cfiCond312) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_26
          CFI (cfiCond312) R26 Frame(CFA_Y, -2)
          CFI (cfiCond312) R27 Frame(CFA_Y, -1)
          CFI (cfiCond312) CFA_SP SP+8
          CFI (cfiCond312) CFA_Y Y+2
          CFI Block cfiCond313 Using cfiCommon0
          CFI (cfiCond313) Function ??functionReports
          CFI (cfiCond313) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_193, ??CrossCallReturnLabel_27
          CFI (cfiCond313) R24 Frame(CFA_Y, -3)
          CFI (cfiCond313) R26 Frame(CFA_Y, -2)
          CFI (cfiCond313) R27 Frame(CFA_Y, -1)
          CFI (cfiCond313) CFA_SP SP+8
          CFI (cfiCond313) CFA_Y Y+13
          CFI Block cfiCond314 Using cfiCommon0
          CFI (cfiCond314) Function ??functionSetupDateTime
          CFI (cfiCond314) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_24
          CFI (cfiCond314) R26 Frame(CFA_Y, -2)
          CFI (cfiCond314) R27 Frame(CFA_Y, -1)
          CFI (cfiCond314) CFA_SP SP+8
          CFI (cfiCond314) CFA_Y Y+2
          CFI Block cfiCond315 Using cfiCommon0
          CFI (cfiCond315) Function ??functionReports
          CFI (cfiCond315) Conditional ??CrossCallReturnLabel_280, ??CrossCallReturnLabel_194, ??CrossCallReturnLabel_25
          CFI (cfiCond315) R24 Frame(CFA_Y, -3)
          CFI (cfiCond315) R26 Frame(CFA_Y, -2)
          CFI (cfiCond315) R27 Frame(CFA_Y, -1)
          CFI (cfiCond315) CFA_SP SP+8
          CFI (cfiCond315) CFA_Y Y+13
          CFI Block cfiCond316 Using cfiCommon0
          CFI (cfiCond316) Function ??functionReports
          CFI (cfiCond316) Conditional ??CrossCallReturnLabel_391
          CFI (cfiCond316) R24 Frame(CFA_Y, -3)
          CFI (cfiCond316) R26 Frame(CFA_Y, -2)
          CFI (cfiCond316) R27 Frame(CFA_Y, -1)
          CFI (cfiCond316) CFA_SP SP+4
          CFI (cfiCond316) CFA_Y Y+13
          CFI Block cfiCond317 Using cfiCommon0
          CFI (cfiCond317) Function ??functionSetupWorkDay
          CFI (cfiCond317) Conditional ??CrossCallReturnLabel_392
          CFI (cfiCond317) R24 Frame(CFA_Y, -4)
          CFI (cfiCond317) R25 Frame(CFA_Y, -3)
          CFI (cfiCond317) R26 Frame(CFA_Y, -2)
          CFI (cfiCond317) R27 Frame(CFA_Y, -1)
          CFI (cfiCond317) CFA_SP SP+4
          CFI (cfiCond317) CFA_Y Y+4
          CFI Block cfiCond318 Using cfiCommon0
          CFI (cfiCond318) Function ??functionSetupDateTime
          CFI (cfiCond318) Conditional ??CrossCallReturnLabel_393
          CFI (cfiCond318) R26 Frame(CFA_Y, -2)
          CFI (cfiCond318) R27 Frame(CFA_Y, -1)
          CFI (cfiCond318) CFA_SP SP+4
          CFI (cfiCond318) CFA_Y Y+2
          CFI Block cfiCond319 Using cfiCommon0
          CFI (cfiCond319) Function ??functionReports
          CFI (cfiCond319) Conditional ??CrossCallReturnLabel_394
          CFI (cfiCond319) R24 Frame(CFA_Y, -3)
          CFI (cfiCond319) R26 Frame(CFA_Y, -2)
          CFI (cfiCond319) R27 Frame(CFA_Y, -1)
          CFI (cfiCond319) CFA_SP SP+4
          CFI (cfiCond319) CFA_Y Y+13
          CFI Block cfiCond320 Using cfiCommon0
          CFI (cfiCond320) Function ??functionSafeBattRemove
          CFI (cfiCond320) Conditional ??CrossCallReturnLabel_395
          CFI (cfiCond320) CFA_SP SP+4
          CFI Block cfiCond321 Using cfiCommon0
          CFI (cfiCond321) Function ??functionBatteryVoltage
          CFI (cfiCond321) Conditional ??CrossCallReturnLabel_396
          CFI (cfiCond321) R24 Frame(CFA_Y, -2)
          CFI (cfiCond321) R25 Frame(CFA_Y, -1)
          CFI (cfiCond321) CFA_SP SP+4
          CFI (cfiCond321) CFA_Y Y+2
          CFI Block cfiCond322 Using cfiCommon0
          CFI (cfiCond322) Function ??functionSetupDateTime
          CFI (cfiCond322) Conditional ??CrossCallReturnLabel_397, ??CrossCallReturnLabel_12
          CFI (cfiCond322) R26 Frame(CFA_Y, -2)
          CFI (cfiCond322) R27 Frame(CFA_Y, -1)
          CFI (cfiCond322) CFA_SP SP+6
          CFI (cfiCond322) CFA_Y Y+2
          CFI Block cfiCond323 Using cfiCommon0
          CFI (cfiCond323) Function ??functionSetupDateTime
          CFI (cfiCond323) Conditional ??CrossCallReturnLabel_397, ??CrossCallReturnLabel_13
          CFI (cfiCond323) R26 Frame(CFA_Y, -2)
          CFI (cfiCond323) R27 Frame(CFA_Y, -1)
          CFI (cfiCond323) CFA_SP SP+6
          CFI (cfiCond323) CFA_Y Y+2
          CFI Block cfiCond324 Using cfiCommon0
          CFI (cfiCond324) Function ??functionSetupWorkDay
          CFI (cfiCond324) Conditional ??CrossCallReturnLabel_397, ??CrossCallReturnLabel_14
          CFI (cfiCond324) R24 Frame(CFA_Y, -4)
          CFI (cfiCond324) R25 Frame(CFA_Y, -3)
          CFI (cfiCond324) R26 Frame(CFA_Y, -2)
          CFI (cfiCond324) R27 Frame(CFA_Y, -1)
          CFI (cfiCond324) CFA_SP SP+6
          CFI (cfiCond324) CFA_Y Y+4
          CFI Block cfiCond325 Using cfiCommon0
          CFI (cfiCond325) Function ??functionSetupWorkDay
          CFI (cfiCond325) Conditional ??CrossCallReturnLabel_397, ??CrossCallReturnLabel_15
          CFI (cfiCond325) R24 Frame(CFA_Y, -4)
          CFI (cfiCond325) R25 Frame(CFA_Y, -3)
          CFI (cfiCond325) R26 Frame(CFA_Y, -2)
          CFI (cfiCond325) R27 Frame(CFA_Y, -1)
          CFI (cfiCond325) CFA_SP SP+6
          CFI (cfiCond325) CFA_Y Y+4
          CFI Block cfiCond326 Using cfiCommon0
          CFI (cfiCond326) Function ??functionSetupDetectionTime
          CFI (cfiCond326) Conditional ??CrossCallReturnLabel_398, ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_377
          CFI (cfiCond326) CFA_SP SP+8
          CFI Block cfiCond327 Using cfiCommon0
          CFI (cfiCond327) Function ??functionBatteryVoltage
          CFI (cfiCond327) Conditional ??CrossCallReturnLabel_398, ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_378
          CFI (cfiCond327) R24 Frame(CFA_Y, -2)
          CFI (cfiCond327) R25 Frame(CFA_Y, -1)
          CFI (cfiCond327) CFA_SP SP+8
          CFI (cfiCond327) CFA_Y Y+2
          CFI Block cfiCond328 Using cfiCommon0
          CFI (cfiCond328) Function ??functionSetupInactivityTime
          CFI (cfiCond328) Conditional ??CrossCallReturnLabel_398, ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_379
          CFI (cfiCond328) CFA_SP SP+8
          CFI Block cfiCond329 Using cfiCommon0
          CFI (cfiCond329) Function ??functionSetupWorkDay
          CFI (cfiCond329) Conditional ??CrossCallReturnLabel_398, ??CrossCallReturnLabel_382
          CFI (cfiCond329) R24 Frame(CFA_Y, -4)
          CFI (cfiCond329) R25 Frame(CFA_Y, -3)
          CFI (cfiCond329) R26 Frame(CFA_Y, -2)
          CFI (cfiCond329) R27 Frame(CFA_Y, -1)
          CFI (cfiCond329) CFA_SP SP+6
          CFI (cfiCond329) CFA_Y Y+4
          CFI Block cfiCond330 Using cfiCommon0
          CFI (cfiCond330) Function ??functionResetNum
          CFI (cfiCond330) Conditional ??CrossCallReturnLabel_398, ??CrossCallReturnLabel_381
          CFI (cfiCond330) R24 Frame(CFA_Y, -5)
          CFI (cfiCond330) R25 Frame(CFA_Y, -4)
          CFI (cfiCond330) R26 Frame(CFA_Y, -3)
          CFI (cfiCond330) R27 Frame(CFA_Y, -2)
          CFI (cfiCond330) R4 Frame(CFA_Y, -1)
          CFI (cfiCond330) CFA_SP SP+6
          CFI (cfiCond330) CFA_Y Y+5
          CFI Block cfiCond331 Using cfiCommon0
          CFI (cfiCond331) Function ??functionReportVisitorsTotal
          CFI (cfiCond331) Conditional ??CrossCallReturnLabel_388
          CFI (cfiCond331) CFA_SP SP+4
          CFI Block cfiCond332 Using cfiCommon0
          CFI (cfiCond332) Function ??functionReportVisitorsTotal
          CFI (cfiCond332) Conditional ??CrossCallReturnLabel_389
          CFI (cfiCond332) CFA_SP SP+4
          CFI Block cfiCond333 Using cfiCommon0
          CFI (cfiCond333) Function ??displaySensorQuality
          CFI (cfiCond333) Conditional ??CrossCallReturnLabel_390
          CFI (cfiCond333) R24 Frame(CFA_Y, -4)
          CFI (cfiCond333) R26 Frame(CFA_Y, -3)
          CFI (cfiCond333) R4 Frame(CFA_Y, -2)
          CFI (cfiCond333) R5 Frame(CFA_Y, -1)
          CFI (cfiCond333) CFA_SP SP+4
          CFI (cfiCond333) CFA_Y Y+4
          CFI Block cfiPicker334 Using cfiCommon1
          CFI (cfiPicker334) NoFunction
          CFI (cfiPicker334) Picker
        JMP     ??num2Buf
          CFI EndBlock cfiCond307
          CFI EndBlock cfiCond308
          CFI EndBlock cfiCond309
          CFI EndBlock cfiCond310
          CFI EndBlock cfiCond311
          CFI EndBlock cfiCond312
          CFI EndBlock cfiCond313
          CFI EndBlock cfiCond314
          CFI EndBlock cfiCond315
          CFI EndBlock cfiCond316
          CFI EndBlock cfiCond317
          CFI EndBlock cfiCond318
          CFI EndBlock cfiCond319
          CFI EndBlock cfiCond320
          CFI EndBlock cfiCond321
          CFI EndBlock cfiCond322
          CFI EndBlock cfiCond323
          CFI EndBlock cfiCond324
          CFI EndBlock cfiCond325
          CFI EndBlock cfiCond326
          CFI EndBlock cfiCond327
          CFI EndBlock cfiCond328
          CFI EndBlock cfiCond329
          CFI EndBlock cfiCond330
          CFI EndBlock cfiCond331
          CFI EndBlock cfiCond332
          CFI EndBlock cfiCond333
          CFI EndBlock cfiPicker334
//  765 

        RSEG CODE:CODE:NOROOT(1)
//  766   void functionSetupSummerTimeMenu()
??functionSetupSummerTimeMenu:
          CFI Block cfiBlock335 Using cfiCommon0
          CFI Function ??functionSetupSummerTimeMenu
//  767   {
//  768     if (activeFunctionChanged)
        FUNCALL ??functionSetupSummerTimeMenu, ??functionMenu
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine59
??CrossCallReturnLabel_118:
        BREQ    ??CrossCallReturnLabel_107
//  769     {
//  770       menuStack[menuStackPos].funcState = USER_MENU_SETUP_SUMMERTIME + GLOBAL::RTC::RTCConfig.summerTimeRule;
        LDS     R16, ??RTCConfig
        SUBI    R16, 223
        RCALL   ?Subroutine55
//  771     }
//  772 
//  773     functionMenu();
??CrossCallReturnLabel_107:
        RJMP    ??functionMenu
          CFI EndBlock cfiBlock335
//  774   }
//  775 

        RSEG CODE:CODE:NOROOT(1)
//  776   void functionSetupSummerTime()
??functionSetupSummerTime:
          CFI Block cfiBlock336 Using cfiCommon0
          CFI Function ??functionSetupSummerTime
//  777   {
//  778     GLOBAL::RTC::setSummerTimeRule((GLOBAL::RTC::TSummerTimeRule)menuStack[menuStackPos].funcState);
        FUNCALL ??functionSetupSummerTime, ??setSummerTimeRule
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupSummerTime, ??transitionDown
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupSummerTime, ??displayDoneMessage
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine114
??CrossCallReturnLabel_259:
        CALL    ??setSummerTimeRule
//  779     processMenuOptionChanged();
        RCALL   ??Subroutine137_0
??CrossCallReturnLabel_412:
        RJMP    ??displayDoneMessage
          CFI EndBlock cfiBlock336
//  780   }
//  781 

        RSEG CODE:CODE:NOROOT(1)
//  782   void functionSetupDetectorMenu()
??functionSetupDetectorMenu:
          CFI Block cfiBlock337 Using cfiCommon0
          CFI Function ??functionSetupDetectorMenu
//  783   {
//  784     if (activeFunctionChanged)
        FUNCALL ??functionSetupDetectorMenu, ??functionMenu
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine59
??CrossCallReturnLabel_119:
        BREQ    ??CrossCallReturnLabel_108
//  785     {
//  786       menuStack[menuStackPos].funcState = USER_MENU_SETUP_COUNTER_DETECTOR + DeviceCounterConfig.detectDirection;
        RCALL   ?Subroutine68
//  787     }
??CrossCallReturnLabel_149:
        SUBI    R16, 195
        RCALL   ?Subroutine55
//  788 
//  789     functionMenu();
??CrossCallReturnLabel_108:
        RJMP    ??functionMenu
          CFI EndBlock cfiBlock337
//  790   }

        RSEG CODE:CODE:NOROOT(1)
?Subroutine68:
          CFI Block cfiCond338 Using cfiCommon0
          CFI Function ??functionReportVisitorsTotal
          CFI Conditional ??CrossCallReturnLabel_147
          CFI CFA_SP SP+4
          CFI Block cfiCond339 Using cfiCommon0
          CFI (cfiCond339) Function ??functionReports
          CFI (cfiCond339) Conditional ??CrossCallReturnLabel_148
          CFI (cfiCond339) R24 Frame(CFA_Y, -3)
          CFI (cfiCond339) R26 Frame(CFA_Y, -2)
          CFI (cfiCond339) R27 Frame(CFA_Y, -1)
          CFI (cfiCond339) CFA_SP SP+4
          CFI (cfiCond339) CFA_Y Y+13
          CFI Block cfiCond340 Using cfiCommon0
          CFI (cfiCond340) Function ??functionSetupDetectorMenu
          CFI (cfiCond340) Conditional ??CrossCallReturnLabel_149
          CFI (cfiCond340) CFA_SP SP+4
          CFI Block cfiCond341 Using cfiCommon0
          CFI (cfiCond341) Function ??functionSetupDetectionTime
          CFI (cfiCond341) Conditional ??CrossCallReturnLabel_150
          CFI (cfiCond341) CFA_SP SP+4
          CFI Block cfiCond342 Using cfiCommon0
          CFI (cfiCond342) Function ??functionSensorQuality
          CFI (cfiCond342) Conditional ??CrossCallReturnLabel_151
          CFI (cfiCond342) CFA_SP SP+4
          CFI Block cfiPicker343 Using cfiCommon1
          CFI (cfiPicker343) NoFunction
          CFI (cfiPicker343) Picker
        LDS     R16, ??DeviceCounterConfig
        RET
          CFI EndBlock cfiCond338
          CFI EndBlock cfiCond339
          CFI EndBlock cfiCond340
          CFI EndBlock cfiCond341
          CFI EndBlock cfiCond342
          CFI EndBlock cfiPicker343
//  791 

        RSEG CODE:CODE:NOROOT(1)
//  792   void functionSetupDetector()
??functionSetupDetector:
          CFI Block cfiBlock344 Using cfiCommon0
          CFI Function ??functionSetupDetector
//  793   {
//  794     DeviceCounterConfig.detectDirection = (TCounterDetectDirectionType)menuStack[menuStackPos].funcState;
        FUNCALL ??functionSetupDetector, ??saveDeviceCounterConfig
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDetector, ??transitionDown
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDetector, ??displayDoneMessage
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine114
??CrossCallReturnLabel_260:
        STS     ??DeviceCounterConfig, R16
//  795     DeviceManager::saveDeviceCounterConfig();
        RCALL   ?Subroutine76
//  796     processMenuOptionChanged();
??CrossCallReturnLabel_163:
        RCALL   ??Subroutine137_0
??CrossCallReturnLabel_411:
        RJMP    ??displayDoneMessage
          CFI EndBlock cfiBlock344
//  797   }
//  798 

        RSEG CODE:CODE:NOROOT(1)
//  799   void functionSetupInventCntMenu()
??functionSetupInventCntMenu:
          CFI Block cfiBlock345 Using cfiCommon0
          CFI Function ??functionSetupInventCntMenu
//  800   {
//  801     if (activeFunctionChanged)
        FUNCALL ??functionSetupInventCntMenu, ??functionMenu
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine59
??CrossCallReturnLabel_120:
        BREQ    ??CrossCallReturnLabel_109
//  802     {
//  803       menuStack[menuStackPos].funcState = USER_MENU_SETUP_COUNTER_INVERTCOUNT + DeviceCounterConfig.invertCounting;
        LDS     R16, (??DeviceCounterConfig + 1)
        SUBI    R16, 189
        RCALL   ?Subroutine55
//  804     }
//  805 
//  806     functionMenu();
??CrossCallReturnLabel_109:
        RJMP    ??functionMenu
          CFI EndBlock cfiBlock345
//  807   }
//  808 

        RSEG CODE:CODE:NOROOT(1)
//  809   void functionSetupInventCnt()
??functionSetupInventCnt:
          CFI Block cfiBlock346 Using cfiCommon0
          CFI Function ??functionSetupInventCnt
//  810   {
//  811     DeviceCounterConfig.invertCounting = (bool)menuStack[menuStackPos].funcState;
        FUNCALL ??functionSetupInventCnt, ??saveDeviceCounterConfig
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupInventCnt, ??transitionDown
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupInventCnt, ??displayDoneMessage
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine6
??CrossCallReturnLabel_10:
        STS     (??DeviceCounterConfig + 1), R16
//  812     DeviceManager::saveDeviceCounterConfig();
        RCALL   ?Subroutine76
//  813     processMenuOptionChanged();
??CrossCallReturnLabel_162:
        RCALL   ??Subroutine137_0
??CrossCallReturnLabel_410:
        RJMP    ??displayDoneMessage
          CFI EndBlock cfiBlock346
//  814   }

        RSEG CODE:CODE:NOROOT(1)
?Subroutine76:
          CFI Block cfiCond347 Using cfiCommon0
          CFI Function ??functionSetupDetector
          CFI Conditional ??CrossCallReturnLabel_163
          CFI CFA_SP SP+4
          CFI Block cfiCond348 Using cfiCommon0
          CFI (cfiCond348) Function ??functionSetupInventCnt
          CFI (cfiCond348) Conditional ??CrossCallReturnLabel_162
          CFI (cfiCond348) CFA_SP SP+4
          CFI Block cfiCond349 Using cfiCommon0
          CFI (cfiCond349) Function ??functionSetupDetectionTime
          CFI (cfiCond349) Conditional ??CrossCallReturnLabel_161
          CFI (cfiCond349) CFA_SP SP+4
          CFI Block cfiPicker350 Using cfiCommon1
          CFI (cfiPicker350) NoFunction
          CFI (cfiPicker350) Picker
        JMP     ??saveDeviceCounterConfig
          CFI EndBlock cfiCond347
          CFI EndBlock cfiCond348
          CFI EndBlock cfiCond349
          CFI EndBlock cfiPicker350
//  815 

        RSEG CODE:CODE:NOROOT(1)
//  816   void functionSetupSaveModeMenu()
??functionSetupSaveModeMenu:
          CFI Block cfiBlock351 Using cfiCommon0
          CFI Function ??functionSetupSaveModeMenu
//  817   {
//  818     if (activeFunctionChanged)
        FUNCALL ??functionSetupSaveModeMenu, ??functionMenu
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine59
??CrossCallReturnLabel_121:
        BREQ    ??CrossCallReturnLabel_110
//  819     {
//  820       menuStack[menuStackPos].funcState = USER_MENU_SETUP_ENERGYSAVING_SAVEMODE + DeviceAdvancedSetup.batterySaveMode;
        LDS     R16, ??DeviceAdvancedSetup
        SUBI    R16, 186
        RCALL   ?Subroutine55
//  821     }
//  822 
//  823     functionMenu();
??CrossCallReturnLabel_110:
        RJMP    ??functionMenu
          CFI EndBlock cfiBlock351
//  824   }

        RSEG CODE:CODE:NOROOT(1)
?Subroutine55:
          CFI Block cfiCond352 Using cfiCommon0
          CFI Function ??functionSafeBattRemove
          CFI Conditional ??CrossCallReturnLabel_105
          CFI CFA_SP SP+4
          CFI Block cfiCond353 Using cfiCommon0
          CFI (cfiCond353) Function ??functionSafeBattRemove
          CFI (cfiCond353) Conditional ??CrossCallReturnLabel_106
          CFI (cfiCond353) CFA_SP SP+4
          CFI Block cfiCond354 Using cfiCommon0
          CFI (cfiCond354) Function ??functionSetupSummerTimeMenu
          CFI (cfiCond354) Conditional ??CrossCallReturnLabel_107
          CFI (cfiCond354) CFA_SP SP+4
          CFI Block cfiCond355 Using cfiCommon0
          CFI (cfiCond355) Function ??functionSetupDetectorMenu
          CFI (cfiCond355) Conditional ??CrossCallReturnLabel_108
          CFI (cfiCond355) CFA_SP SP+4
          CFI Block cfiCond356 Using cfiCommon0
          CFI (cfiCond356) Function ??functionSetupInventCntMenu
          CFI (cfiCond356) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond356) CFA_SP SP+4
          CFI Block cfiCond357 Using cfiCommon0
          CFI (cfiCond357) Function ??functionSetupSaveModeMenu
          CFI (cfiCond357) Conditional ??CrossCallReturnLabel_110
          CFI (cfiCond357) CFA_SP SP+4
          CFI Block cfiCond358 Using cfiCommon0
          CFI (cfiCond358) Function ??functionSetupWorkTodayMenu
          CFI (cfiCond358) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond358) CFA_SP SP+4
          CFI Block cfiCond359 Using cfiCommon0
          CFI (cfiCond359) Function ??functionSetupWorkDayMenu
          CFI (cfiCond359) Conditional ??CrossCallReturnLabel_112
          CFI (cfiCond359) CFA_SP SP+4
          CFI Block cfiCond360 Using cfiCommon0
          CFI (cfiCond360) Function ??functionSetupBacklightMenu
          CFI (cfiCond360) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond360) CFA_SP SP+4
          CFI Block cfiPicker361 Using cfiCommon1
          CFI (cfiPicker361) NoFunction
          CFI (cfiPicker361) Picker
        RCALL   ?Subroutine111
??CrossCallReturnLabel_251:
        RCALL   ?Subroutine121
??CrossCallReturnLabel_288:
        STD     Z+4, R16
        RET
          CFI EndBlock cfiCond352
          CFI EndBlock cfiCond353
          CFI EndBlock cfiCond354
          CFI EndBlock cfiCond355
          CFI EndBlock cfiCond356
          CFI EndBlock cfiCond357
          CFI EndBlock cfiCond358
          CFI EndBlock cfiCond359
          CFI EndBlock cfiCond360
          CFI EndBlock cfiPicker361
//  825 

        RSEG CODE:CODE:NOROOT(1)
//  826   void functionSetupSaveMode()
??functionSetupSaveMode:
          CFI Block cfiBlock362 Using cfiCommon0
          CFI Function ??functionSetupSaveMode
//  827   {
//  828     DeviceAdvancedSetup.batterySaveMode = (TDeviceBatterySaveMode)menuStack[menuStackPos].funcState;
        FUNCALL ??functionSetupSaveMode, ??saveDeviceAdvancedSetup
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupSaveMode, ??transitionDown
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupSaveMode, ??displayDoneMessage
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine114
??CrossCallReturnLabel_261:
        STS     ??DeviceAdvancedSetup, R16
//  829     DeviceManager::saveDeviceAdvancedSetup();
        RCALL   ?Subroutine51
??CrossCallReturnLabel_418:
        RJMP    ??displayDoneMessage
          CFI EndBlock cfiBlock362
//  830     processMenuOptionChanged();
//  831   }

        RSEG CODE:CODE:NOROOT(1)
?Subroutine114:
          CFI Block cfiCond363 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_16
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+6
          CFI CFA_Y Y+13
          CFI Block cfiCond364 Using cfiCommon0
          CFI (cfiCond364) Function ??functionReports
          CFI (cfiCond364) Conditional ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_17
          CFI (cfiCond364) R24 Frame(CFA_Y, -3)
          CFI (cfiCond364) R26 Frame(CFA_Y, -2)
          CFI (cfiCond364) R27 Frame(CFA_Y, -1)
          CFI (cfiCond364) CFA_SP SP+6
          CFI (cfiCond364) CFA_Y Y+13
          CFI Block cfiCond365 Using cfiCommon0
          CFI (cfiCond365) Function ??functionReports
          CFI (cfiCond365) Conditional ??CrossCallReturnLabel_258
          CFI (cfiCond365) R24 Frame(CFA_Y, -3)
          CFI (cfiCond365) R26 Frame(CFA_Y, -2)
          CFI (cfiCond365) R27 Frame(CFA_Y, -1)
          CFI (cfiCond365) CFA_SP SP+4
          CFI (cfiCond365) CFA_Y Y+13
          CFI Block cfiCond366 Using cfiCommon0
          CFI (cfiCond366) Function ??functionSetupSummerTime
          CFI (cfiCond366) Conditional ??CrossCallReturnLabel_259
          CFI (cfiCond366) CFA_SP SP+4
          CFI Block cfiCond367 Using cfiCommon0
          CFI (cfiCond367) Function ??functionSetupDetector
          CFI (cfiCond367) Conditional ??CrossCallReturnLabel_260
          CFI (cfiCond367) CFA_SP SP+4
          CFI Block cfiCond368 Using cfiCommon0
          CFI (cfiCond368) Function ??functionSetupSaveMode
          CFI (cfiCond368) Conditional ??CrossCallReturnLabel_261
          CFI (cfiCond368) CFA_SP SP+4
          CFI Block cfiCond369 Using cfiCommon0
          CFI (cfiCond369) Function ??functionSetupWorkDay
          CFI (cfiCond369) Conditional ??CrossCallReturnLabel_262
          CFI (cfiCond369) R24 Frame(CFA_Y, -4)
          CFI (cfiCond369) R25 Frame(CFA_Y, -3)
          CFI (cfiCond369) R26 Frame(CFA_Y, -2)
          CFI (cfiCond369) R27 Frame(CFA_Y, -1)
          CFI (cfiCond369) CFA_SP SP+4
          CFI (cfiCond369) CFA_Y Y+4
          CFI Block cfiCond370 Using cfiCommon0
          CFI (cfiCond370) Function ??functionSetupDetectionTime
          CFI (cfiCond370) Conditional ??CrossCallReturnLabel_263
          CFI (cfiCond370) CFA_SP SP+4
          CFI Block cfiCond371 Using cfiCommon0
          CFI (cfiCond371) Function ??functionSetupInactivityTime
          CFI (cfiCond371) Conditional ??CrossCallReturnLabel_264
          CFI (cfiCond371) CFA_SP SP+4
          CFI Block cfiCond372 Using cfiCommon0
          CFI (cfiCond372) Function ??functionReports
          CFI (cfiCond372) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_7
          CFI (cfiCond372) R24 Frame(CFA_Y, -3)
          CFI (cfiCond372) R26 Frame(CFA_Y, -2)
          CFI (cfiCond372) R27 Frame(CFA_Y, -1)
          CFI (cfiCond372) CFA_SP SP+6
          CFI (cfiCond372) CFA_Y Y+13
          CFI Block cfiCond373 Using cfiCommon0
          CFI (cfiCond373) Function ??functionReports
          CFI (cfiCond373) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_8
          CFI (cfiCond373) R24 Frame(CFA_Y, -3)
          CFI (cfiCond373) R26 Frame(CFA_Y, -2)
          CFI (cfiCond373) R27 Frame(CFA_Y, -1)
          CFI (cfiCond373) CFA_SP SP+6
          CFI (cfiCond373) CFA_Y Y+13
          CFI Block cfiCond374 Using cfiCommon0
          CFI (cfiCond374) Function ??functionReset
          CFI (cfiCond374) Conditional ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_9
          CFI (cfiCond374) CFA_SP SP+6
          CFI Block cfiCond375 Using cfiCommon0
          CFI (cfiCond375) Function ??functionSafeBattRemove
          CFI (cfiCond375) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_177
          CFI (cfiCond375) CFA_SP SP+6
          CFI Block cfiCond376 Using cfiCommon0
          CFI (cfiCond376) Function ??functionSetupWorkToday
          CFI (cfiCond376) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_178
          CFI (cfiCond376) CFA_SP SP+6
          CFI Block cfiCond377 Using cfiCommon0
          CFI (cfiCond377) Function ??functionSetCheckPassword
          CFI (cfiCond377) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_179
          CFI (cfiCond377) R24 Frame(CFA_Y, -4)
          CFI (cfiCond377) R25 Frame(CFA_Y, -3)
          CFI (cfiCond377) R26 Frame(CFA_Y, -2)
          CFI (cfiCond377) R27 Frame(CFA_Y, -1)
          CFI (cfiCond377) CFA_SP SP+6
          CFI (cfiCond377) CFA_Y Y+4
          CFI Block cfiCond378 Using cfiCommon0
          CFI (cfiCond378) Function ??functionSetCheckPassword
          CFI (cfiCond378) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_180
          CFI (cfiCond378) R24 Frame(CFA_Y, -4)
          CFI (cfiCond378) R25 Frame(CFA_Y, -3)
          CFI (cfiCond378) R26 Frame(CFA_Y, -2)
          CFI (cfiCond378) R27 Frame(CFA_Y, -1)
          CFI (cfiCond378) CFA_SP SP+6
          CFI (cfiCond378) CFA_Y Y+4
          CFI Block cfiCond379 Using cfiCommon0
          CFI (cfiCond379) Function ??functionResetNum
          CFI (cfiCond379) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_181
          CFI (cfiCond379) R24 Frame(CFA_Y, -5)
          CFI (cfiCond379) R25 Frame(CFA_Y, -4)
          CFI (cfiCond379) R26 Frame(CFA_Y, -3)
          CFI (cfiCond379) R27 Frame(CFA_Y, -2)
          CFI (cfiCond379) R4 Frame(CFA_Y, -1)
          CFI (cfiCond379) CFA_SP SP+6
          CFI (cfiCond379) CFA_Y Y+5
          CFI Block cfiCond380 Using cfiCommon0
          CFI (cfiCond380) Function ??functionSetupInventCnt
          CFI (cfiCond380) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_10
          CFI (cfiCond380) CFA_SP SP+8
          CFI Block cfiCond381 Using cfiCommon0
          CFI (cfiCond381) Function ??functionSetupBacklight
          CFI (cfiCond381) Conditional ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_11
          CFI (cfiCond381) CFA_SP SP+8
          CFI Block cfiPicker382 Using cfiCommon1
          CFI (cfiPicker382) NoFunction
          CFI (cfiPicker382) Picker
        RCALL   ?Subroutine120
??CrossCallReturnLabel_285:
        RCALL   ?Subroutine121
??CrossCallReturnLabel_292:
        LDD     R16, Z+4
        RET
          CFI EndBlock cfiCond363
          CFI EndBlock cfiCond364
          CFI EndBlock cfiCond365
          CFI EndBlock cfiCond366
          CFI EndBlock cfiCond367
          CFI EndBlock cfiCond368
          CFI EndBlock cfiCond369
          CFI EndBlock cfiCond370
          CFI EndBlock cfiCond371
          CFI EndBlock cfiCond372
          CFI EndBlock cfiCond373
          CFI EndBlock cfiCond374
          CFI EndBlock cfiCond375
          CFI EndBlock cfiCond376
          CFI EndBlock cfiCond377
          CFI EndBlock cfiCond378
          CFI EndBlock cfiCond379
          CFI EndBlock cfiCond380
          CFI EndBlock cfiCond381
          CFI EndBlock cfiPicker382
//  832 

        RSEG CODE:CODE:NOROOT(1)
//  833   void functionSetupWorkTodayMenu()
??functionSetupWorkTodayMenu:
          CFI Block cfiBlock383 Using cfiCommon0
          CFI Function ??functionSetupWorkTodayMenu
//  834   {
//  835     if (activeFunctionChanged)
        FUNCALL ??functionSetupWorkTodayMenu, ??functionMenu
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine59
??CrossCallReturnLabel_122:
        BREQ    ??CrossCallReturnLabel_111
//  836     {
//  837       menuStack[menuStackPos].funcState = USER_MENU_SETUP_ENERGYSAVING_WORKTODAY + ((DeviceAdvancedSetup.workWeekMask & 0x80) ? 1 : 0);
        LDS     R16, (??DeviceAdvancedSetup + 3)
        LSL     R16
        LDI     R16, 0
        ROL     R16
        SUBI    R16, 181
        RCALL   ?Subroutine55
//  838     }
//  839 
//  840     functionMenu();
??CrossCallReturnLabel_111:
        RJMP    ??functionMenu
          CFI EndBlock cfiBlock383
//  841   }

        RSEG CODE:CODE:NOROOT(1)
?Subroutine59:
          CFI Block cfiCond384 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_116
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond385 Using cfiCommon0
          CFI (cfiCond385) Function ??functionSafeBattRemove
          CFI (cfiCond385) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond385) CFA_SP SP+4
          CFI Block cfiCond386 Using cfiCommon0
          CFI (cfiCond386) Function ??functionSetupSummerTimeMenu
          CFI (cfiCond386) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond386) CFA_SP SP+4
          CFI Block cfiCond387 Using cfiCommon0
          CFI (cfiCond387) Function ??functionSetupDetectorMenu
          CFI (cfiCond387) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond387) CFA_SP SP+4
          CFI Block cfiCond388 Using cfiCommon0
          CFI (cfiCond388) Function ??functionSetupInventCntMenu
          CFI (cfiCond388) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond388) CFA_SP SP+4
          CFI Block cfiCond389 Using cfiCommon0
          CFI (cfiCond389) Function ??functionSetupSaveModeMenu
          CFI (cfiCond389) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond389) CFA_SP SP+4
          CFI Block cfiCond390 Using cfiCommon0
          CFI (cfiCond390) Function ??functionSetupWorkTodayMenu
          CFI (cfiCond390) Conditional ??CrossCallReturnLabel_122
          CFI (cfiCond390) CFA_SP SP+4
          CFI Block cfiCond391 Using cfiCommon0
          CFI (cfiCond391) Function ??functionSetupWorkDayMenu
          CFI (cfiCond391) Conditional ??CrossCallReturnLabel_123
          CFI (cfiCond391) CFA_SP SP+4
          CFI Block cfiCond392 Using cfiCommon0
          CFI (cfiCond392) Function ??functionSetupWorkDay
          CFI (cfiCond392) Conditional ??CrossCallReturnLabel_124
          CFI (cfiCond392) R24 Frame(CFA_Y, -4)
          CFI (cfiCond392) R25 Frame(CFA_Y, -3)
          CFI (cfiCond392) R26 Frame(CFA_Y, -2)
          CFI (cfiCond392) R27 Frame(CFA_Y, -1)
          CFI (cfiCond392) CFA_SP SP+4
          CFI (cfiCond392) CFA_Y Y+4
          CFI Block cfiCond393 Using cfiCommon0
          CFI (cfiCond393) Function ??functionSetupDetectionTime
          CFI (cfiCond393) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond393) CFA_SP SP+4
          CFI Block cfiCond394 Using cfiCommon0
          CFI (cfiCond394) Function ??functionSetupInactivityTime
          CFI (cfiCond394) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond394) CFA_SP SP+4
          CFI Block cfiCond395 Using cfiCommon0
          CFI (cfiCond395) Function ??functionSetupBacklightMenu
          CFI (cfiCond395) Conditional ??CrossCallReturnLabel_127
          CFI (cfiCond395) CFA_SP SP+4
          CFI Block cfiPicker396 Using cfiCommon1
          CFI (cfiPicker396) NoFunction
          CFI (cfiPicker396) Picker
        LDS     R16, (??curStatisticRecord + 27)
        TST     R16
        RET
          CFI EndBlock cfiCond384
          CFI EndBlock cfiCond385
          CFI EndBlock cfiCond386
          CFI EndBlock cfiCond387
          CFI EndBlock cfiCond388
          CFI EndBlock cfiCond389
          CFI EndBlock cfiCond390
          CFI EndBlock cfiCond391
          CFI EndBlock cfiCond392
          CFI EndBlock cfiCond393
          CFI EndBlock cfiCond394
          CFI EndBlock cfiCond395
          CFI EndBlock cfiPicker396
//  842 

        RSEG CODE:CODE:NOROOT(1)
//  843   void functionSetupWorkToday()
??functionSetupWorkToday:
          CFI Block cfiBlock397 Using cfiCommon0
          CFI Function ??functionSetupWorkToday
//  844   {
//  845     if (menuStack[menuStackPos].funcState)
        FUNCALL ??functionSetupWorkToday, ??saveDeviceAdvancedSetup
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkToday, ??transitionDown
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkToday, ??displayDoneMessage
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine82
??CrossCallReturnLabel_178:
        LDI     R30, LOW(??DeviceAdvancedSetup)
        LDI     R31, (??DeviceAdvancedSetup) >> 8
        LDD     R16, Z+3
        BREQ    ??functionSetupWorkToday_1
//  846     {
//  847       DeviceAdvancedSetup.workWeekMask |= 0x80;
        ORI     R16, 0x80
        RJMP    ??functionSetupWorkToday_2
//  848     }
//  849     else
//  850     {
//  851       DeviceAdvancedSetup.workWeekMask &= 0x7F;
??functionSetupWorkToday_1:
        ANDI    R16, 0x7F
??functionSetupWorkToday_2:
        STD     Z+3, R16
//  852     }
//  853 
//  854     DeviceManager::saveDeviceAdvancedSetup();
        RCALL   ?Subroutine51
??CrossCallReturnLabel_417:
        RJMP    ??displayDoneMessage
          CFI EndBlock cfiBlock397
//  855     processMenuOptionChanged();
//  856   }
//  857 

        RSEG CODE:CODE:NOROOT(1)
//  858   void functionSetupWorkDayMenu()
??functionSetupWorkDayMenu:
          CFI Block cfiBlock398 Using cfiCommon0
          CFI Function ??functionSetupWorkDayMenu
//  859   {
//  860     if (activeFunctionChanged)
        FUNCALL ??functionSetupWorkDayMenu, ??functionMenu
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine59
??CrossCallReturnLabel_123:
        BREQ    ??CrossCallReturnLabel_112
//  861     {
//  862       menuStack[menuStackPos].funcState = USER_MENU_SETUP_ENERGYSAVING_WORKDAY + DeviceAdvancedSetup.workDayStruct;
        LDS     R16, (??DeviceAdvancedSetup + 4)
        SUBI    R16, 178
        RCALL   ?Subroutine55
//  863     }
//  864 
//  865     functionMenu();
??CrossCallReturnLabel_112:
        RJMP    ??functionMenu
          CFI EndBlock cfiBlock398
//  866   }
//  867 

        RSEG CODE:CODE:NOROOT(1)
//  868   void setWorkDaySetup(TDeviceAdvancedSetup* _curSetup)
??setWorkDaySetup:
          CFI Block cfiBlock399 Using cfiCommon0
          CFI Function ??setWorkDaySetup
//  869   {
        FUNCALL ??setWorkDaySetup, ??saveDeviceAdvancedSetup
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??setWorkDaySetup, ??transitionDown
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??setWorkDaySetup, ??displayDoneMessage
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine54
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+2
//  870     DeviceAdvancedSetup.workDayStruct = _curSetup->workDayStruct;
??CrossCallReturnLabel_103:
        LDI     R26, LOW(??DeviceAdvancedSetup)
        LDI     R27, (??DeviceAdvancedSetup) >> 8
        MOVW    R31:R30, R17:R16
        LDD     R18, Z+4
        STS     (??DeviceAdvancedSetup + 4), R18
//  871     DeviceAdvancedSetup.shiftStart1 = _curSetup->shiftStart1;
        LDD     R18, Z+5
        LDD     R19, Z+6
        MOVW    R31:R30, R27:R26
        STD     Z+5, R18
        STD     Z+6, R19
//  872     DeviceAdvancedSetup.shiftEnd1 = _curSetup->shiftEnd1;
        MOVW    R31:R30, R17:R16
        LDD     R18, Z+7
        LDD     R19, Z+8
        MOVW    R31:R30, R27:R26
        STD     Z+7, R18
        STD     Z+8, R19
//  873     DeviceAdvancedSetup.shiftStart2 = _curSetup->shiftStart2;
        MOVW    R31:R30, R17:R16
        LDD     R18, Z+9
        LDD     R19, Z+10
        MOVW    R31:R30, R27:R26
        STD     Z+9, R18
        STD     Z+10, R19
//  874     DeviceAdvancedSetup.shiftEnd2 = _curSetup->shiftEnd2;
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+11
        LDD     R17, Z+12
        MOVW    R31:R30, R27:R26
        STD     Z+11, R16
        STD     Z+12, R17
//  875 
//  876     DeviceManager::saveDeviceAdvancedSetup();
        RCALL   ?Subroutine51
??CrossCallReturnLabel_416:
        RCALL   ?Subroutine60
          CFI EndBlock cfiBlock399
//  877     processMenuOptionChanged();
//  878   }
??CrossCallReturnLabel_130:
        REQUIRE ?Subroutine58
        ;               // Fall through to label ?Subroutine58

        RSEG CODE:CODE:NOROOT(1)
?Subroutine58:
          CFI Block cfiBlock400 Using cfiCommon0
          CFI NoFunction
          CFI CFA_Y Y+2
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI Block cfiPicker401 Using cfiCommon1
          CFI (cfiPicker401) NoFunction
          CFI (cfiPicker401) Picker
        LD      R26, Y+
          CFI (cfiBlock400) CFA_Y Y+1
          CFI (cfiBlock400) R26 SameValue
        LD      R27, Y+
          CFI (cfiBlock400) CFA_Y Y+0
          CFI (cfiBlock400) R27 SameValue
        RET
          CFI EndBlock cfiBlock400
          CFI EndBlock cfiPicker401

        RSEG CODE:CODE:NOROOT(1)
?Subroutine54:
          CFI Block cfiCond402 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_101
          CFI CFA_SP SP+4
          CFI Block cfiCond403 Using cfiCommon0
          CFI (cfiCond403) Function ??functionReports
          CFI (cfiCond403) Conditional ??CrossCallReturnLabel_102
          CFI (cfiCond403) CFA_SP SP+4
          CFI Block cfiCond404 Using cfiCommon0
          CFI (cfiCond404) Function ??setWorkDaySetup
          CFI (cfiCond404) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond404) CFA_SP SP+4
          CFI Block cfiCond405 Using cfiCommon0
          CFI (cfiCond405) Function ??functionSerialNumber
          CFI (cfiCond405) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond405) CFA_SP SP+4
          CFI Block cfiPicker406 Using cfiCommon1
          CFI (cfiPicker406) NoFunction
          CFI (cfiPicker406) Picker
        ST      -Y, R27
          CFI (cfiCond402) R27 Frame(CFA_Y, -1)
          CFI (cfiCond402) CFA_Y Y+1
          CFI (cfiCond403) R27 Frame(CFA_Y, -1)
          CFI (cfiCond403) CFA_Y Y+1
          CFI (cfiCond404) R27 Frame(CFA_Y, -1)
          CFI (cfiCond404) CFA_Y Y+1
          CFI (cfiCond405) R27 Frame(CFA_Y, -1)
          CFI (cfiCond405) CFA_Y Y+1
          CFI (cfiPicker406) R27 Frame(CFA_Y, -1)
        ST      -Y, R26
          CFI (cfiCond402) R26 Frame(CFA_Y, -2)
          CFI (cfiCond402) CFA_Y Y+2
          CFI (cfiCond403) R26 Frame(CFA_Y, -2)
          CFI (cfiCond403) CFA_Y Y+2
          CFI (cfiCond404) R26 Frame(CFA_Y, -2)
          CFI (cfiCond404) CFA_Y Y+2
          CFI (cfiCond405) R26 Frame(CFA_Y, -2)
          CFI (cfiCond405) CFA_Y Y+2
          CFI (cfiPicker406) R26 Frame(CFA_Y, -2)
        RET
          CFI EndBlock cfiCond402
          CFI EndBlock cfiCond403
          CFI EndBlock cfiCond404
          CFI EndBlock cfiCond405
          CFI EndBlock cfiPicker406
//  879 
//  880   __flash const unsigned short setupWorkDayDiffValues[4] = {600, 60, 10, 1};
//  881   __flash const unsigned char setupWorkDayDisplayPos[8] = {2, 3, 5, 6, 10, 11, 13, 14};
//  882 

        RSEG CODE:CODE:NOROOT(1)
//  883   void functionSetupWorkDay()
??functionSetupWorkDay:
          CFI Block cfiBlock407 Using cfiCommon0
          CFI Function ??functionSetupWorkDay
//  884   {
        FUNCALL ??functionSetupWorkDay, ??popBuff
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkDay, ??setWorkDaySetup
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkDay, ??clearBuffer
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkDay, ??getString
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkDay, ??str2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkDay, ??getString
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkDay, ??str2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkDay, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkDay, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkDay, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkDay, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkDay, ??refreshDisplay
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine52
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+4
??CrossCallReturnLabel_96:
        RCALL   ?Subroutine59
??CrossCallReturnLabel_124:
        BREQ    ??CrossCallReturnLabel_349
//  885     TDeviceAdvancedSetup* curAdvSetup = (TDeviceAdvancedSetup*)activeParmSpace;
//  886     unsigned char* curStatus = (unsigned char*)(activeParmSpace + sizeof(TDeviceAdvancedSetup));
//  887 
//  888     if (activeFunctionChanged)
//  889     {
//  890       *curAdvSetup = DeviceAdvancedSetup;
        RCALL   ?Subroutine61
??CrossCallReturnLabel_133:
        LDI     R18, LOW(??DeviceAdvancedSetup)
        LDI     R19, (??DeviceAdvancedSetup) >> 8
        MOVW    R31:R30, R19:R18
        LDI     R20, 15
        RCALL   ?Subroutine47
//  891       curAdvSetup->workDayStruct = (TWorkDayShiftStructure)menuStack[menuStackPos].funcState;
??CrossCallReturnLabel_82:
        RCALL   ?Subroutine114
??CrossCallReturnLabel_262:
        STS     (??activeParmSpace + 4), R16
//  892       *curStatus = 0;
        STS     (??activeParmSpace + 15), R20
//  893 
//  894       if (curAdvSetup->workDayStruct == WorkDayShiftStructure_WholeDay)
        TST     R16
        BRNE    ??CrossCallReturnLabel_349
        RJMP    ??functionSetupWorkDay_1
//  895       {
//  896         setWorkDaySetup(curAdvSetup);
//  897         return;
//  898       }
//  899     }
//  900 
//  901     while (transitionKey)
//  902     {
//  903       signed short curDif;
//  904       unsigned short* curValue;
//  905 
//  906       switch (transitionKey)
//  907       {
//  908         case 1:
//  909           if (*curStatus > 0)
//  910           {
//  911             (*curStatus)--;
//  912           }
//  913           else
//  914           {
//  915             return;
//  916           }
//  917           break;
//  918 
//  919         case 4:
//  920           (*curStatus)++;
//  921           if (((curAdvSetup->workDayStruct == WorkDayShiftStructure_Shift1) && (*curStatus >= 8)) ||
//  922               (*curStatus >= 16))
//  923           {
//  924             setWorkDaySetup(curAdvSetup);
//  925             return;
//  926           }
//  927           break;
//  928 
//  929         case 2:
//  930         case 3:
//  931           curDif = ((transitionKey == 2) ? -1 : 1) * setupWorkDayDiffValues[*curStatus % 4];
//  932 
//  933           switch (*curStatus / 4)
//  934           {
//  935             case 0:
//  936               curValue = &(curAdvSetup->shiftStart1);
//  937               break;
//  938 
//  939             case 1:
//  940               curValue = &(curAdvSetup->shiftEnd1);
//  941               break;
//  942 
//  943             case 2:
//  944               curValue = &(curAdvSetup->shiftStart2);
//  945               break;
//  946 
//  947             case 3:
//  948               curValue = &(curAdvSetup->shiftEnd2);
//  949               break;
//  950           }
//  951 
//  952           *curValue += curDif;
//  953 
//  954           if (*curValue > 1440)
//  955           {
//  956             *curValue = (curDif > 0) ? 1440 : 0;
//  957           }
//  958           break;
//  959       }
//  960 
//  961       getNextTransitionKey();
??functionSetupWorkDay_2:
        RCALL   ?Subroutine34
??CrossCallReturnLabel_349:
        RCALL   ?Subroutine50
??CrossCallReturnLabel_90:
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_338
        MOV     R17, R16
        DEC     R17
        BREQ    ??functionSetupWorkDay_3
        DEC     R17
        BREQ    ??functionSetupWorkDay_4
        DEC     R17
        BREQ    ??functionSetupWorkDay_4
        DEC     R17
        BREQ    ??functionSetupWorkDay_5
        RJMP    ??CrossCallReturnLabel_227
??functionSetupWorkDay_3:
        RCALL   ?Subroutine109
??CrossCallReturnLabel_235:
        LDD     R16, Z+15
        TST     R16
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_403
        DEC     R16
        STD     Z+15, R16
        RJMP    ??CrossCallReturnLabel_227
??functionSetupWorkDay_5:
        RCALL   ?Subroutine109
??CrossCallReturnLabel_236:
        LDD     R16, Z+15
        INC     R16
        STD     Z+15, R16
        LDS     R16, (??activeParmSpace + 4)
        CPI     R16, 1
        BRNE    ??functionSetupWorkDay_6
        RCALL   ?Subroutine77
??CrossCallReturnLabel_164:
        CPI     R16, 8
        BRCC    ??functionSetupWorkDay_1
??functionSetupWorkDay_6:
        RCALL   ?Subroutine77
??CrossCallReturnLabel_165:
        CPI     R16, 16
        BRCC    $+2+2
        RJMP    ??CrossCallReturnLabel_227
??functionSetupWorkDay_1:
        RCALL   ?Subroutine61
??CrossCallReturnLabel_134:
        RCALL   ??setWorkDaySetup
        RJMP    ??CrossCallReturnLabel_403
??functionSetupWorkDay_4:
        CPI     R16, 2
        BRNE    ??functionSetupWorkDay_7
        LDI     R16, 255
        LDI     R17, 255
        RJMP    ??functionSetupWorkDay_8
??functionSetupWorkDay_7:
        LDI     R16, 1
        LDI     R17, 0
??functionSetupWorkDay_8:
        RCALL   ?Subroutine104
??CrossCallReturnLabel_213:
        LDS     R22, (??activeParmSpace + 15)
        MOV     R20, R22
        ANDI    R20, 0x03
        LDI     R21, 2
        MUL     R20, R21
        MOVW    R31:R30, R1:R0
        SUBI    R30, LOW((-(??setupWorkDayDiffValues) & 0xFFFF))
        SBCI    R31, (-(??setupWorkDayDiffValues) & 0xFFFF) >> 8
        LPM     R20, Z+
        LPM     R21, Z
        MUL     R21, R16
        MOV     R21, R0
        MUL     R20, R17
        ADD     R21, R0
        MUL     R20, R16
        MOV     R20, R0
        ADD     R21, R1
        LSR     R22
        LSR     R22
        BREQ    ??functionSetupWorkDay_9
        DEC     R22
        BREQ    ??functionSetupWorkDay_10
        DEC     R22
        BREQ    ??functionSetupWorkDay_11
        DEC     R22
        BREQ    ??functionSetupWorkDay_12
        RJMP    ??functionSetupWorkDay_13
??functionSetupWorkDay_9:
        ADIW    R27:R26, 5
        RJMP    ??functionSetupWorkDay_14
??functionSetupWorkDay_10:
        ADIW    R27:R26, 7
        RJMP    ??functionSetupWorkDay_14
??functionSetupWorkDay_11:
        ADIW    R27:R26, 9
        RJMP    ??functionSetupWorkDay_14
??functionSetupWorkDay_12:
        ADIW    R27:R26, 11
??functionSetupWorkDay_14:
        MOVW    R19:R18, R27:R26
??functionSetupWorkDay_13:
        MOVW    R31:R30, R19:R18
        LD      R16, Z
        LDD     R17, Z+1
        ADD     R16, R0
        ADC     R17, R21
        RCALL   ?Subroutine107
??CrossCallReturnLabel_226:
        LD      R16, Z
        CPI     R16, 161
        SBCI    R17, 5
        BRCS    ??CrossCallReturnLabel_227
        CPI     R20, 1
        LDI     R16, 0
        SBCI    R21, 0
        BRLT    ??functionSetupWorkDay_15
        LDI     R16, 160
        LDI     R17, 5
        RJMP    ??functionSetupWorkDay_16
??functionSetupWorkDay_15:
        LDI     R17, 0
??functionSetupWorkDay_16:
        RCALL   ?Subroutine107
??CrossCallReturnLabel_227:
        RCALL   ?Subroutine33
//  962     }
??CrossCallReturnLabel_327:
        BREQ    $+2+2
        RJMP    ??functionSetupWorkDay_2
        RCALL   ??Subroutine132_0
//  963 
//  964     LCDDriver::clearBuffer();
??CrossCallReturnLabel_338:
        RCALL   ?Subroutine41
//  965 
//  966     unsigned short* curShiftStart;
//  967     unsigned short* curShiftEnd;
//  968 
//  969     if (*curStatus < 8)
??CrossCallReturnLabel_61:
        RCALL   ?Subroutine77
??CrossCallReturnLabel_166:
        CPI     R16, 8
        BRCC    ??functionSetupWorkDay_17
//  970     {
//  971       LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_TEXT_SHIFT1), LCDDriver::LCDTextIdentation_Center);
        LDI     R16, 94
        RCALL   ?Subroutine26
??CrossCallReturnLabel_33:
        ADIW    R25:R24, 5
//  972 
//  973       curShiftStart = &(curAdvSetup->shiftStart1);
//  974       curShiftEnd = &(curAdvSetup->shiftEnd1);
        ADIW    R27:R26, 7
        RJMP    ??functionSetupWorkDay_18
//  975     }
//  976     else
//  977     {
//  978       LCDDriver::str2Buf(
//  979         0,
//  980         getString((curAdvSetup->workDayStruct == WorkDayShiftStructure_Shift2) ?
//  981           USER_TEXT_CONST_TEXT_SHIFT2 :
//  982           USER_TEXT_CONST_TEXT_LUNCH),
//  983         LCDDriver::LCDTextIdentation_Center);
??functionSetupWorkDay_17:
        LDS     R16, (??activeParmSpace + 4)
        CPI     R16, 2
        BRNE    ??functionSetupWorkDay_19
        LDI     R16, 95
        RJMP    ??functionSetupWorkDay_20
??functionSetupWorkDay_19:
        LDI     R16, 96
??functionSetupWorkDay_20:
        RCALL   ?Subroutine26
//  984 
//  985       curShiftStart = &(curAdvSetup->shiftStart2);
??CrossCallReturnLabel_34:
        ADIW    R25:R24, 9
//  986       curShiftEnd = &(curAdvSetup->shiftEnd2);
        ADIW    R27:R26, 11
//  987     }
//  988 
//  989     LCDDriver::num2Buf(1, 3, *curShiftStart / 60, 2, LCD_DISPLAY_SYMBOL_SPACE);
??functionSetupWorkDay_18:
        LDI     R19, 32
        RCALL   ?Subroutine48
??CrossCallReturnLabel_83:
        RCALL   ?Subroutine43
??CrossCallReturnLabel_79:
        LDI     R17, 3
        RCALL   ?Subroutine8
??CrossCallReturnLabel_14:
        STS     (??displayState + 24), R16
//  990       LCDDriver::displayState.line[1][4] = LCD_DISPLAY_SYMBOL_COLON;
//  991       LCDDriver::num2Buf(1, 6, *curShiftStart % 60, 2, '0');
        LDI     R19, 48
        RCALL   ?Subroutine48
??CrossCallReturnLabel_84:
        RCALL   ?Subroutine65
??CrossCallReturnLabel_223:
        RCALL   ?Subroutine13
//  992       LCDDriver::displayState.line[1][8] = LCD_DISPLAY_SYMBOL_DASH;
??CrossCallReturnLabel_392:
        LDI     R16, 45
        STS     (??displayState + 28), R16
//  993       LCDDriver::num2Buf(1, 11, *curShiftEnd / 60, 2, LCD_DISPLAY_SYMBOL_SPACE);
        LDI     R19, 32
        RCALL   ?Subroutine57
??CrossCallReturnLabel_318:
        SBIW    R27:R26, 1
        RCALL   ?Subroutine43
??CrossCallReturnLabel_80:
        LDI     R17, 11
        RCALL   ?Subroutine8
//  994       LCDDriver::displayState.line[1][12] = LCD_DISPLAY_SYMBOL_COLON;
??CrossCallReturnLabel_15:
        STS     (??displayState + 32), R16
//  995       LCDDriver::num2Buf(1, 14, *curShiftEnd % 60, 2, '0');
        LDI     R19, 48
        RCALL   ?Subroutine57
??CrossCallReturnLabel_319:
        RCALL   ?Subroutine65
??CrossCallReturnLabel_224:
        LDI     R17, 14
        RCALL   ?Subroutine85
??CrossCallReturnLabel_382:
        RCALL   ?Subroutine77
??CrossCallReturnLabel_167:
        ANDI    R16, 0x07
        LDI     R31, 0
        MOV     R30, R16
        SUBI    R30, LOW((-(??setupWorkDayDiffValues + 8) & 0xFFFF))
        SBCI    R31, HIGH((-(??setupWorkDayDiffValues + 8) & 0xFFFF))
        LPM     R18, Z
        LDI     R17, 1
        LDI     R16, 13
        RCALL   ??Subroutine135_0
//  996 
//  997     LCDDriver::refreshDisplay(
//  998       LCDDriver::LCDDisplayMode_BlinkCursor,
//  999       1,
// 1000       setupWorkDayDisplayPos[*curStatus % 8]);
// 1001 
// 1002     isTransition = false;
// 1003   }
??CrossCallReturnLabel_403:
        RJMP    ?Subroutine39
          CFI EndBlock cfiBlock407

        RSEG CODE:CODE:NOROOT(1)
?Subroutine77:
          CFI Block cfiCond408 Using cfiCommon0
          CFI Function ??functionSetupWorkDay
          CFI Conditional ??CrossCallReturnLabel_164
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond409 Using cfiCommon0
          CFI (cfiCond409) Function ??functionSetupWorkDay
          CFI (cfiCond409) Conditional ??CrossCallReturnLabel_165
          CFI (cfiCond409) R24 Frame(CFA_Y, -4)
          CFI (cfiCond409) R25 Frame(CFA_Y, -3)
          CFI (cfiCond409) R26 Frame(CFA_Y, -2)
          CFI (cfiCond409) R27 Frame(CFA_Y, -1)
          CFI (cfiCond409) CFA_SP SP+4
          CFI (cfiCond409) CFA_Y Y+4
          CFI Block cfiCond410 Using cfiCommon0
          CFI (cfiCond410) Function ??functionSetupWorkDay
          CFI (cfiCond410) Conditional ??CrossCallReturnLabel_166
          CFI (cfiCond410) R24 Frame(CFA_Y, -4)
          CFI (cfiCond410) R25 Frame(CFA_Y, -3)
          CFI (cfiCond410) R26 Frame(CFA_Y, -2)
          CFI (cfiCond410) R27 Frame(CFA_Y, -1)
          CFI (cfiCond410) CFA_SP SP+4
          CFI (cfiCond410) CFA_Y Y+4
          CFI Block cfiCond411 Using cfiCommon0
          CFI (cfiCond411) Function ??functionSetupWorkDay
          CFI (cfiCond411) Conditional ??CrossCallReturnLabel_167
          CFI (cfiCond411) R24 Frame(CFA_Y, -4)
          CFI (cfiCond411) R25 Frame(CFA_Y, -3)
          CFI (cfiCond411) R26 Frame(CFA_Y, -2)
          CFI (cfiCond411) R27 Frame(CFA_Y, -1)
          CFI (cfiCond411) CFA_SP SP+4
          CFI (cfiCond411) CFA_Y Y+4
          CFI Block cfiPicker412 Using cfiCommon1
          CFI (cfiPicker412) NoFunction
          CFI (cfiPicker412) Picker
        LDS     R16, (??activeParmSpace + 15)
        RET
          CFI EndBlock cfiCond408
          CFI EndBlock cfiCond409
          CFI EndBlock cfiCond410
          CFI EndBlock cfiCond411
          CFI EndBlock cfiPicker412

        RSEG CODE:CODE:NOROOT(1)
?Subroutine61:
          CFI Block cfiCond413 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_132
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond414 Using cfiCommon0
          CFI (cfiCond414) Function ??functionSetupWorkDay
          CFI (cfiCond414) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond414) R24 Frame(CFA_Y, -4)
          CFI (cfiCond414) R25 Frame(CFA_Y, -3)
          CFI (cfiCond414) R26 Frame(CFA_Y, -2)
          CFI (cfiCond414) R27 Frame(CFA_Y, -1)
          CFI (cfiCond414) CFA_SP SP+4
          CFI (cfiCond414) CFA_Y Y+4
          CFI Block cfiCond415 Using cfiCommon0
          CFI (cfiCond415) Function ??functionSetupWorkDay
          CFI (cfiCond415) Conditional ??CrossCallReturnLabel_134
          CFI (cfiCond415) R24 Frame(CFA_Y, -4)
          CFI (cfiCond415) R25 Frame(CFA_Y, -3)
          CFI (cfiCond415) R26 Frame(CFA_Y, -2)
          CFI (cfiCond415) R27 Frame(CFA_Y, -1)
          CFI (cfiCond415) CFA_SP SP+4
          CFI (cfiCond415) CFA_Y Y+4
          CFI Block cfiCond416 Using cfiCommon0
          CFI (cfiCond416) Function ??functionSetCheckPassword
          CFI (cfiCond416) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond416) R24 Frame(CFA_Y, -4)
          CFI (cfiCond416) R25 Frame(CFA_Y, -3)
          CFI (cfiCond416) R26 Frame(CFA_Y, -2)
          CFI (cfiCond416) R27 Frame(CFA_Y, -1)
          CFI (cfiCond416) CFA_SP SP+4
          CFI (cfiCond416) CFA_Y Y+4
          CFI Block cfiPicker417 Using cfiCommon1
          CFI (cfiPicker417) NoFunction
          CFI (cfiPicker417) Picker
        LDI     R16, LOW(??activeParmSpace)
        LDI     R17, (??activeParmSpace) >> 8
        RET
          CFI EndBlock cfiCond413
          CFI EndBlock cfiCond414
          CFI EndBlock cfiCond415
          CFI EndBlock cfiCond416
          CFI EndBlock cfiPicker417

        RSEG CODE:CODE:NOROOT(1)
?Subroutine50:
          CFI Block cfiCond418 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_85
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond419 Using cfiCommon0
          CFI (cfiCond419) Function ??functionSetupDateTime
          CFI (cfiCond419) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond419) R26 Frame(CFA_Y, -2)
          CFI (cfiCond419) R27 Frame(CFA_Y, -1)
          CFI (cfiCond419) CFA_SP SP+4
          CFI (cfiCond419) CFA_Y Y+2
          CFI Block cfiCond420 Using cfiCommon0
          CFI (cfiCond420) Function ??functionReportVisitorsTotal
          CFI (cfiCond420) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond420) CFA_SP SP+4
          CFI Block cfiCond421 Using cfiCommon0
          CFI (cfiCond421) Function ??functionReports
          CFI (cfiCond421) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond421) R24 Frame(CFA_Y, -3)
          CFI (cfiCond421) R26 Frame(CFA_Y, -2)
          CFI (cfiCond421) R27 Frame(CFA_Y, -1)
          CFI (cfiCond421) CFA_SP SP+4
          CFI (cfiCond421) CFA_Y Y+13
          CFI Block cfiCond422 Using cfiCommon0
          CFI (cfiCond422) Function ??functionSafeBattRemove
          CFI (cfiCond422) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond422) CFA_SP SP+4
          CFI Block cfiCond423 Using cfiCommon0
          CFI (cfiCond423) Function ??functionSetupWorkDay
          CFI (cfiCond423) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond423) R24 Frame(CFA_Y, -4)
          CFI (cfiCond423) R25 Frame(CFA_Y, -3)
          CFI (cfiCond423) R26 Frame(CFA_Y, -2)
          CFI (cfiCond423) R27 Frame(CFA_Y, -1)
          CFI (cfiCond423) CFA_SP SP+4
          CFI (cfiCond423) CFA_Y Y+4
          CFI Block cfiCond424 Using cfiCommon0
          CFI (cfiCond424) Function ??functionSetupDetectionTime
          CFI (cfiCond424) Conditional ??CrossCallReturnLabel_91
          CFI (cfiCond424) CFA_SP SP+4
          CFI Block cfiCond425 Using cfiCommon0
          CFI (cfiCond425) Function ??functionSetupInactivityTime
          CFI (cfiCond425) Conditional ??CrossCallReturnLabel_92
          CFI (cfiCond425) CFA_SP SP+4
          CFI Block cfiCond426 Using cfiCommon0
          CFI (cfiCond426) Function ??functionSetupWorkWeek
          CFI (cfiCond426) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond426) R26 Frame(CFA_Y, -2)
          CFI (cfiCond426) R27 Frame(CFA_Y, -1)
          CFI (cfiCond426) CFA_SP SP+4
          CFI (cfiCond426) CFA_Y Y+2
          CFI Block cfiCond427 Using cfiCommon0
          CFI (cfiCond427) Function ??functionSetCheckPassword
          CFI (cfiCond427) Conditional ??CrossCallReturnLabel_94
          CFI (cfiCond427) R24 Frame(CFA_Y, -4)
          CFI (cfiCond427) R25 Frame(CFA_Y, -3)
          CFI (cfiCond427) R26 Frame(CFA_Y, -2)
          CFI (cfiCond427) R27 Frame(CFA_Y, -1)
          CFI (cfiCond427) CFA_SP SP+4
          CFI (cfiCond427) CFA_Y Y+4
          CFI Block cfiCond428 Using cfiCommon0
          CFI (cfiCond428) Function ??functionSensorQuality
          CFI (cfiCond428) Conditional ??CrossCallReturnLabel_95
          CFI (cfiCond428) CFA_SP SP+4
          CFI Block cfiPicker429 Using cfiCommon1
          CFI (cfiPicker429) NoFunction
          CFI (cfiPicker429) Picker
        LDS     R16, (??curStatisticRecord + 34)
        TST     R16
        RET
          CFI EndBlock cfiCond418
          CFI EndBlock cfiCond419
          CFI EndBlock cfiCond420
          CFI EndBlock cfiCond421
          CFI EndBlock cfiCond422
          CFI EndBlock cfiCond423
          CFI EndBlock cfiCond424
          CFI EndBlock cfiCond425
          CFI EndBlock cfiCond426
          CFI EndBlock cfiCond427
          CFI EndBlock cfiCond428
          CFI EndBlock cfiPicker429

        RSEG CODE:CODE:NOROOT(1)
?Subroutine48:
          CFI Block cfiCond430 Using cfiCommon0
          CFI Function ??functionSetupWorkDay
          CFI Conditional ??CrossCallReturnLabel_83
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond431 Using cfiCommon0
          CFI (cfiCond431) Function ??functionSetupWorkDay
          CFI (cfiCond431) Conditional ??CrossCallReturnLabel_84
          CFI (cfiCond431) R24 Frame(CFA_Y, -4)
          CFI (cfiCond431) R25 Frame(CFA_Y, -3)
          CFI (cfiCond431) R26 Frame(CFA_Y, -2)
          CFI (cfiCond431) R27 Frame(CFA_Y, -1)
          CFI (cfiCond431) CFA_SP SP+4
          CFI (cfiCond431) CFA_Y Y+4
          CFI Block cfiPicker432 Using cfiCommon1
          CFI (cfiPicker432) NoFunction
          CFI (cfiPicker432) Picker
        LDI     R18, 2
        LDI     R20, 60
        LDI     R21, 0
        MOVW    R31:R30, R25:R24
        LD      R16, Z
        LDD     R17, Z+1
        RET
          CFI EndBlock cfiCond430
          CFI EndBlock cfiCond431
          CFI EndBlock cfiPicker432

        RSEG CODE:CODE:NOROOT(1)
?Subroutine47:
          CFI Block cfiCond433 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond434 Using cfiCommon0
          CFI (cfiCond434) Function ??functionSetupWorkDay
          CFI (cfiCond434) Conditional ??CrossCallReturnLabel_82
          CFI (cfiCond434) R24 Frame(CFA_Y, -4)
          CFI (cfiCond434) R25 Frame(CFA_Y, -3)
          CFI (cfiCond434) R26 Frame(CFA_Y, -2)
          CFI (cfiCond434) R27 Frame(CFA_Y, -1)
          CFI (cfiCond434) CFA_SP SP+4
          CFI (cfiCond434) CFA_Y Y+4
          CFI Block cfiPicker435 Using cfiCommon1
          CFI (cfiPicker435) NoFunction
          CFI (cfiPicker435) Picker
        LDI     R21, 0
        JMP     ?ML_SRAM_SRAM_16_L07
          CFI EndBlock cfiCond433
          CFI EndBlock cfiCond434
          CFI EndBlock cfiPicker435

        RSEG CODE:CODE:NOROOT(1)
?Subroutine43:
          CFI Block cfiCond436 Using cfiCommon0
          CFI Function ??functionSafeBattRemove
          CFI Conditional ??CrossCallReturnLabel_78
          CFI CFA_SP SP+4
          CFI Block cfiCond437 Using cfiCommon0
          CFI (cfiCond437) Function ??functionSetupWorkDay
          CFI (cfiCond437) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond437) R24 Frame(CFA_Y, -4)
          CFI (cfiCond437) R25 Frame(CFA_Y, -3)
          CFI (cfiCond437) R26 Frame(CFA_Y, -2)
          CFI (cfiCond437) R27 Frame(CFA_Y, -1)
          CFI (cfiCond437) CFA_SP SP+4
          CFI (cfiCond437) CFA_Y Y+4
          CFI Block cfiCond438 Using cfiCommon0
          CFI (cfiCond438) Function ??functionSetupWorkDay
          CFI (cfiCond438) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond438) R24 Frame(CFA_Y, -4)
          CFI (cfiCond438) R25 Frame(CFA_Y, -3)
          CFI (cfiCond438) R26 Frame(CFA_Y, -2)
          CFI (cfiCond438) R27 Frame(CFA_Y, -1)
          CFI (cfiCond438) CFA_SP SP+4
          CFI (cfiCond438) CFA_Y Y+4
          CFI Block cfiPicker439 Using cfiCommon1
          CFI (cfiPicker439) NoFunction
          CFI (cfiPicker439) Picker
        RCALL   ?Subroutine110
??CrossCallReturnLabel_246:
        MOVW    R21:R20, R17:R16
        RJMP    ?Subroutine106
          CFI EndBlock cfiCond436
          CFI EndBlock cfiCond437
          CFI EndBlock cfiCond438
          CFI EndBlock cfiPicker439

        RSEG CODE:CODE:NOROOT(1)
?Subroutine41:
          CFI Block cfiCond440 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_62
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond441 Using cfiCommon0
          CFI (cfiCond441) Function ??functionSetupWorkDay
          CFI (cfiCond441) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond441) R24 Frame(CFA_Y, -4)
          CFI (cfiCond441) R25 Frame(CFA_Y, -3)
          CFI (cfiCond441) R26 Frame(CFA_Y, -2)
          CFI (cfiCond441) R27 Frame(CFA_Y, -1)
          CFI (cfiCond441) CFA_SP SP+4
          CFI (cfiCond441) CFA_Y Y+4
          CFI Block cfiPicker442 Using cfiCommon1
          CFI (cfiPicker442) NoFunction
          CFI (cfiPicker442) Picker
        CALL    ??clearBuffer
          CFI EndBlock cfiCond440
          CFI EndBlock cfiCond441
          CFI EndBlock cfiPicker442
        REQUIRE ?Subroutine104
        ;               // Fall through to label ?Subroutine104

        RSEG CODE:CODE:NOROOT(1)
?Subroutine104:
          CFI Block cfiCond443 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_212
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond444 Using cfiCommon0
          CFI (cfiCond444) Function ??functionSetupWorkDay
          CFI (cfiCond444) Conditional ??CrossCallReturnLabel_213
          CFI (cfiCond444) R24 Frame(CFA_Y, -4)
          CFI (cfiCond444) R25 Frame(CFA_Y, -3)
          CFI (cfiCond444) R26 Frame(CFA_Y, -2)
          CFI (cfiCond444) R27 Frame(CFA_Y, -1)
          CFI (cfiCond444) CFA_SP SP+4
          CFI (cfiCond444) CFA_Y Y+4
          CFI Block cfiCond445 Using cfiCommon0
          CFI (cfiCond445) Function ??functionSetupDateTime
          CFI (cfiCond445) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond445) R26 Frame(CFA_Y, -2)
          CFI (cfiCond445) R27 Frame(CFA_Y, -1)
          CFI (cfiCond445) CFA_SP SP+4
          CFI (cfiCond445) CFA_Y Y+2
          CFI Block cfiCond446 Using cfiCommon0
          CFI (cfiCond446) Function ??functionSetupWorkDay
          CFI (cfiCond446) Conditional ??CrossCallReturnLabel_61
          CFI (cfiCond446) R24 Frame(CFA_Y, -4)
          CFI (cfiCond446) R25 Frame(CFA_Y, -3)
          CFI (cfiCond446) R26 Frame(CFA_Y, -2)
          CFI (cfiCond446) R27 Frame(CFA_Y, -1)
          CFI (cfiCond446) CFA_SP SP+4
          CFI (cfiCond446) CFA_Y Y+4
          CFI Block cfiCond447 Using cfiCommon0
          CFI (cfiCond447) Function ??functionSetCheckPassword
          CFI (cfiCond447) Conditional ??CrossCallReturnLabel_214
          CFI (cfiCond447) R24 Frame(CFA_Y, -4)
          CFI (cfiCond447) R25 Frame(CFA_Y, -3)
          CFI (cfiCond447) R26 Frame(CFA_Y, -2)
          CFI (cfiCond447) R27 Frame(CFA_Y, -1)
          CFI (cfiCond447) CFA_SP SP+4
          CFI (cfiCond447) CFA_Y Y+4
          CFI Block cfiPicker448 Using cfiCommon1
          CFI (cfiPicker448) NoFunction
          CFI (cfiPicker448) Picker
        LDI     R26, LOW(??activeParmSpace)
        LDI     R27, (??activeParmSpace) >> 8
        RET
          CFI EndBlock cfiCond443
          CFI EndBlock cfiCond444
          CFI EndBlock cfiCond445
          CFI EndBlock cfiCond446
          CFI EndBlock cfiCond447
          CFI EndBlock cfiPicker448

        RSEG CODE:CODE:NOROOT(1)
?Subroutine34:
          CFI Block cfiCond449 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_344
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond450 Using cfiCommon0
          CFI (cfiCond450) Function ??functionSetupDateTime
          CFI (cfiCond450) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond450) R26 Frame(CFA_Y, -2)
          CFI (cfiCond450) R27 Frame(CFA_Y, -1)
          CFI (cfiCond450) CFA_SP SP+4
          CFI (cfiCond450) CFA_Y Y+2
          CFI Block cfiCond451 Using cfiCommon0
          CFI (cfiCond451) Function ??functionReportVisitorsTotal
          CFI (cfiCond451) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond451) CFA_SP SP+4
          CFI Block cfiCond452 Using cfiCommon0
          CFI (cfiCond452) Function ??functionReports
          CFI (cfiCond452) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond452) R24 Frame(CFA_Y, -3)
          CFI (cfiCond452) R26 Frame(CFA_Y, -2)
          CFI (cfiCond452) R27 Frame(CFA_Y, -1)
          CFI (cfiCond452) CFA_SP SP+4
          CFI (cfiCond452) CFA_Y Y+13
          CFI Block cfiCond453 Using cfiCommon0
          CFI (cfiCond453) Function ??functionSafeBattRemove
          CFI (cfiCond453) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond453) CFA_SP SP+4
          CFI Block cfiCond454 Using cfiCommon0
          CFI (cfiCond454) Function ??functionSetupWorkDay
          CFI (cfiCond454) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond454) R24 Frame(CFA_Y, -4)
          CFI (cfiCond454) R25 Frame(CFA_Y, -3)
          CFI (cfiCond454) R26 Frame(CFA_Y, -2)
          CFI (cfiCond454) R27 Frame(CFA_Y, -1)
          CFI (cfiCond454) CFA_SP SP+4
          CFI (cfiCond454) CFA_Y Y+4
          CFI Block cfiCond455 Using cfiCommon0
          CFI (cfiCond455) Function ??functionSetupDetectionTime
          CFI (cfiCond455) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond455) CFA_SP SP+4
          CFI Block cfiCond456 Using cfiCommon0
          CFI (cfiCond456) Function ??functionSetupInactivityTime
          CFI (cfiCond456) Conditional ??CrossCallReturnLabel_351
          CFI (cfiCond456) CFA_SP SP+4
          CFI Block cfiCond457 Using cfiCommon0
          CFI (cfiCond457) Function ??functionSetupWorkWeek
          CFI (cfiCond457) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond457) R26 Frame(CFA_Y, -2)
          CFI (cfiCond457) R27 Frame(CFA_Y, -1)
          CFI (cfiCond457) CFA_SP SP+4
          CFI (cfiCond457) CFA_Y Y+2
          CFI Block cfiCond458 Using cfiCommon0
          CFI (cfiCond458) Function ??functionSetCheckPassword
          CFI (cfiCond458) Conditional ??CrossCallReturnLabel_353
          CFI (cfiCond458) R24 Frame(CFA_Y, -4)
          CFI (cfiCond458) R25 Frame(CFA_Y, -3)
          CFI (cfiCond458) R26 Frame(CFA_Y, -2)
          CFI (cfiCond458) R27 Frame(CFA_Y, -1)
          CFI (cfiCond458) CFA_SP SP+4
          CFI (cfiCond458) CFA_Y Y+4
          CFI Block cfiCond459 Using cfiCommon0
          CFI (cfiCond459) Function ??functionSetCheckPassword
          CFI (cfiCond459) Conditional ??CrossCallReturnLabel_354
          CFI (cfiCond459) R24 Frame(CFA_Y, -4)
          CFI (cfiCond459) R25 Frame(CFA_Y, -3)
          CFI (cfiCond459) R26 Frame(CFA_Y, -2)
          CFI (cfiCond459) R27 Frame(CFA_Y, -1)
          CFI (cfiCond459) CFA_SP SP+4
          CFI (cfiCond459) CFA_Y Y+4
          CFI Block cfiCond460 Using cfiCommon0
          CFI (cfiCond460) Function ??functionSensorQuality
          CFI (cfiCond460) Conditional ??CrossCallReturnLabel_355
          CFI (cfiCond460) CFA_SP SP+4
          CFI Block cfiPicker461 Using cfiCommon1
          CFI (cfiPicker461) NoFunction
          CFI (cfiPicker461) Picker
        RCALL   ?Subroutine97
          CFI EndBlock cfiCond449
          CFI EndBlock cfiCond450
          CFI EndBlock cfiCond451
          CFI EndBlock cfiCond452
          CFI EndBlock cfiCond453
          CFI EndBlock cfiCond454
          CFI EndBlock cfiCond455
          CFI EndBlock cfiCond456
          CFI EndBlock cfiCond457
          CFI EndBlock cfiCond458
          CFI EndBlock cfiCond459
          CFI EndBlock cfiCond460
          CFI EndBlock cfiPicker461
??CrossCallReturnLabel_197:
        REQUIRE ??Subroutine132_0
        ;               // Fall through to label ??Subroutine132_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine132_0:
          CFI Block cfiCond462 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_333
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond463 Using cfiCommon0
          CFI (cfiCond463) Function ??functionSetupDateTime
          CFI (cfiCond463) Conditional ??CrossCallReturnLabel_334
          CFI (cfiCond463) R26 Frame(CFA_Y, -2)
          CFI (cfiCond463) R27 Frame(CFA_Y, -1)
          CFI (cfiCond463) CFA_SP SP+4
          CFI (cfiCond463) CFA_Y Y+2
          CFI Block cfiCond464 Using cfiCommon0
          CFI (cfiCond464) Function ??functionReportVisitorsTotal
          CFI (cfiCond464) Conditional ??CrossCallReturnLabel_335
          CFI (cfiCond464) CFA_SP SP+4
          CFI Block cfiCond465 Using cfiCommon0
          CFI (cfiCond465) Function ??functionReports
          CFI (cfiCond465) Conditional ??CrossCallReturnLabel_336
          CFI (cfiCond465) R24 Frame(CFA_Y, -3)
          CFI (cfiCond465) R26 Frame(CFA_Y, -2)
          CFI (cfiCond465) R27 Frame(CFA_Y, -1)
          CFI (cfiCond465) CFA_SP SP+4
          CFI (cfiCond465) CFA_Y Y+13
          CFI Block cfiCond466 Using cfiCommon0
          CFI (cfiCond466) Function ??functionSafeBattRemove
          CFI (cfiCond466) Conditional ??CrossCallReturnLabel_337
          CFI (cfiCond466) CFA_SP SP+4
          CFI Block cfiCond467 Using cfiCommon0
          CFI (cfiCond467) Function ??functionSetupWorkDay
          CFI (cfiCond467) Conditional ??CrossCallReturnLabel_338
          CFI (cfiCond467) R24 Frame(CFA_Y, -4)
          CFI (cfiCond467) R25 Frame(CFA_Y, -3)
          CFI (cfiCond467) R26 Frame(CFA_Y, -2)
          CFI (cfiCond467) R27 Frame(CFA_Y, -1)
          CFI (cfiCond467) CFA_SP SP+4
          CFI (cfiCond467) CFA_Y Y+4
          CFI Block cfiCond468 Using cfiCommon0
          CFI (cfiCond468) Function ??functionSetupDetectionTime
          CFI (cfiCond468) Conditional ??CrossCallReturnLabel_339
          CFI (cfiCond468) CFA_SP SP+4
          CFI Block cfiCond469 Using cfiCommon0
          CFI (cfiCond469) Function ??functionSetupInactivityTime
          CFI (cfiCond469) Conditional ??CrossCallReturnLabel_340
          CFI (cfiCond469) CFA_SP SP+4
          CFI Block cfiCond470 Using cfiCommon0
          CFI (cfiCond470) Function ??functionSetupWorkWeek
          CFI (cfiCond470) Conditional ??CrossCallReturnLabel_341
          CFI (cfiCond470) R26 Frame(CFA_Y, -2)
          CFI (cfiCond470) R27 Frame(CFA_Y, -1)
          CFI (cfiCond470) CFA_SP SP+4
          CFI (cfiCond470) CFA_Y Y+2
          CFI Block cfiCond471 Using cfiCommon0
          CFI (cfiCond471) Function ??functionSetCheckPassword
          CFI (cfiCond471) Conditional ??CrossCallReturnLabel_342
          CFI (cfiCond471) R24 Frame(CFA_Y, -4)
          CFI (cfiCond471) R25 Frame(CFA_Y, -3)
          CFI (cfiCond471) R26 Frame(CFA_Y, -2)
          CFI (cfiCond471) R27 Frame(CFA_Y, -1)
          CFI (cfiCond471) CFA_SP SP+4
          CFI (cfiCond471) CFA_Y Y+4
          CFI Block cfiCond472 Using cfiCommon0
          CFI (cfiCond472) Function ??functionSensorQuality
          CFI (cfiCond472) Conditional ??CrossCallReturnLabel_343
          CFI (cfiCond472) CFA_SP SP+4
          CFI Block cfiCond473 Using cfiCommon0
          CFI (cfiCond473) Function ??functionMenu
          CFI (cfiCond473) Conditional ??CrossCallReturnLabel_344
          CFI (cfiCond473) R26 Frame(CFA_Y, -2)
          CFI (cfiCond473) R27 Frame(CFA_Y, -1)
          CFI (cfiCond473) CFA_SP SP+4
          CFI (cfiCond473) CFA_Y Y+2
          CFI Block cfiCond474 Using cfiCommon0
          CFI (cfiCond474) Function ??functionSetupDateTime
          CFI (cfiCond474) Conditional ??CrossCallReturnLabel_345
          CFI (cfiCond474) R26 Frame(CFA_Y, -2)
          CFI (cfiCond474) R27 Frame(CFA_Y, -1)
          CFI (cfiCond474) CFA_SP SP+4
          CFI (cfiCond474) CFA_Y Y+2
          CFI Block cfiCond475 Using cfiCommon0
          CFI (cfiCond475) Function ??functionReportVisitorsTotal
          CFI (cfiCond475) Conditional ??CrossCallReturnLabel_346
          CFI (cfiCond475) CFA_SP SP+4
          CFI Block cfiCond476 Using cfiCommon0
          CFI (cfiCond476) Function ??functionReports
          CFI (cfiCond476) Conditional ??CrossCallReturnLabel_347
          CFI (cfiCond476) R24 Frame(CFA_Y, -3)
          CFI (cfiCond476) R26 Frame(CFA_Y, -2)
          CFI (cfiCond476) R27 Frame(CFA_Y, -1)
          CFI (cfiCond476) CFA_SP SP+4
          CFI (cfiCond476) CFA_Y Y+13
          CFI Block cfiCond477 Using cfiCommon0
          CFI (cfiCond477) Function ??functionSafeBattRemove
          CFI (cfiCond477) Conditional ??CrossCallReturnLabel_348
          CFI (cfiCond477) CFA_SP SP+4
          CFI Block cfiCond478 Using cfiCommon0
          CFI (cfiCond478) Function ??functionSetupWorkDay
          CFI (cfiCond478) Conditional ??CrossCallReturnLabel_349
          CFI (cfiCond478) R24 Frame(CFA_Y, -4)
          CFI (cfiCond478) R25 Frame(CFA_Y, -3)
          CFI (cfiCond478) R26 Frame(CFA_Y, -2)
          CFI (cfiCond478) R27 Frame(CFA_Y, -1)
          CFI (cfiCond478) CFA_SP SP+4
          CFI (cfiCond478) CFA_Y Y+4
          CFI Block cfiCond479 Using cfiCommon0
          CFI (cfiCond479) Function ??functionSetupDetectionTime
          CFI (cfiCond479) Conditional ??CrossCallReturnLabel_350
          CFI (cfiCond479) CFA_SP SP+4
          CFI Block cfiCond480 Using cfiCommon0
          CFI (cfiCond480) Function ??functionSetupInactivityTime
          CFI (cfiCond480) Conditional ??CrossCallReturnLabel_351
          CFI (cfiCond480) CFA_SP SP+4
          CFI Block cfiCond481 Using cfiCommon0
          CFI (cfiCond481) Function ??functionSetupWorkWeek
          CFI (cfiCond481) Conditional ??CrossCallReturnLabel_352
          CFI (cfiCond481) R26 Frame(CFA_Y, -2)
          CFI (cfiCond481) R27 Frame(CFA_Y, -1)
          CFI (cfiCond481) CFA_SP SP+4
          CFI (cfiCond481) CFA_Y Y+2
          CFI Block cfiCond482 Using cfiCommon0
          CFI (cfiCond482) Function ??functionSetCheckPassword
          CFI (cfiCond482) Conditional ??CrossCallReturnLabel_353
          CFI (cfiCond482) R24 Frame(CFA_Y, -4)
          CFI (cfiCond482) R25 Frame(CFA_Y, -3)
          CFI (cfiCond482) R26 Frame(CFA_Y, -2)
          CFI (cfiCond482) R27 Frame(CFA_Y, -1)
          CFI (cfiCond482) CFA_SP SP+4
          CFI (cfiCond482) CFA_Y Y+4
          CFI Block cfiCond483 Using cfiCommon0
          CFI (cfiCond483) Function ??functionSetCheckPassword
          CFI (cfiCond483) Conditional ??CrossCallReturnLabel_354
          CFI (cfiCond483) R24 Frame(CFA_Y, -4)
          CFI (cfiCond483) R25 Frame(CFA_Y, -3)
          CFI (cfiCond483) R26 Frame(CFA_Y, -2)
          CFI (cfiCond483) R27 Frame(CFA_Y, -1)
          CFI (cfiCond483) CFA_SP SP+4
          CFI (cfiCond483) CFA_Y Y+4
          CFI Block cfiCond484 Using cfiCommon0
          CFI (cfiCond484) Function ??functionSensorQuality
          CFI (cfiCond484) Conditional ??CrossCallReturnLabel_355
          CFI (cfiCond484) CFA_SP SP+4
          CFI Block cfiBlock485 Using cfiCommon0
          CFI (cfiBlock485) NoFunction
          CFI Block cfiPicker486 Using cfiCommon1
          CFI (cfiPicker486) NoFunction
          CFI (cfiPicker486) Picker
        STS     (??curStatisticRecord + 34), R16
        RET
          CFI EndBlock cfiCond462
          CFI EndBlock cfiCond463
          CFI EndBlock cfiCond464
          CFI EndBlock cfiCond465
          CFI EndBlock cfiCond466
          CFI EndBlock cfiCond467
          CFI EndBlock cfiCond468
          CFI EndBlock cfiCond469
          CFI EndBlock cfiCond470
          CFI EndBlock cfiCond471
          CFI EndBlock cfiCond472
          CFI EndBlock cfiCond473
          CFI EndBlock cfiCond474
          CFI EndBlock cfiCond475
          CFI EndBlock cfiCond476
          CFI EndBlock cfiCond477
          CFI EndBlock cfiCond478
          CFI EndBlock cfiCond479
          CFI EndBlock cfiCond480
          CFI EndBlock cfiCond481
          CFI EndBlock cfiCond482
          CFI EndBlock cfiCond483
          CFI EndBlock cfiCond484
          CFI EndBlock cfiBlock485
          CFI EndBlock cfiPicker486

        RSEG CODE:CODE:NOROOT(1)
?Subroutine97:
          CFI Block cfiCond487 Using cfiCommon0
          CFI Function ??getNextTransitionKey
          CFI Conditional ??CrossCallReturnLabel_196
          CFI CFA_SP SP+4
          CFI Block cfiCond488 Using cfiCommon0
          CFI (cfiCond488) Function ??functionMenu
          CFI (cfiCond488) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_344
          CFI (cfiCond488) R26 Frame(CFA_Y, -2)
          CFI (cfiCond488) R27 Frame(CFA_Y, -1)
          CFI (cfiCond488) CFA_SP SP+6
          CFI (cfiCond488) CFA_Y Y+2
          CFI Block cfiCond489 Using cfiCommon0
          CFI (cfiCond489) Function ??functionSetupDateTime
          CFI (cfiCond489) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_345
          CFI (cfiCond489) R26 Frame(CFA_Y, -2)
          CFI (cfiCond489) R27 Frame(CFA_Y, -1)
          CFI (cfiCond489) CFA_SP SP+6
          CFI (cfiCond489) CFA_Y Y+2
          CFI Block cfiCond490 Using cfiCommon0
          CFI (cfiCond490) Function ??functionReportVisitorsTotal
          CFI (cfiCond490) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_346
          CFI (cfiCond490) CFA_SP SP+6
          CFI Block cfiCond491 Using cfiCommon0
          CFI (cfiCond491) Function ??functionReports
          CFI (cfiCond491) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_347
          CFI (cfiCond491) R24 Frame(CFA_Y, -3)
          CFI (cfiCond491) R26 Frame(CFA_Y, -2)
          CFI (cfiCond491) R27 Frame(CFA_Y, -1)
          CFI (cfiCond491) CFA_SP SP+6
          CFI (cfiCond491) CFA_Y Y+13
          CFI Block cfiCond492 Using cfiCommon0
          CFI (cfiCond492) Function ??functionSafeBattRemove
          CFI (cfiCond492) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_348
          CFI (cfiCond492) CFA_SP SP+6
          CFI Block cfiCond493 Using cfiCommon0
          CFI (cfiCond493) Function ??functionSetupWorkDay
          CFI (cfiCond493) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_349
          CFI (cfiCond493) R24 Frame(CFA_Y, -4)
          CFI (cfiCond493) R25 Frame(CFA_Y, -3)
          CFI (cfiCond493) R26 Frame(CFA_Y, -2)
          CFI (cfiCond493) R27 Frame(CFA_Y, -1)
          CFI (cfiCond493) CFA_SP SP+6
          CFI (cfiCond493) CFA_Y Y+4
          CFI Block cfiCond494 Using cfiCommon0
          CFI (cfiCond494) Function ??functionSetupDetectionTime
          CFI (cfiCond494) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_350
          CFI (cfiCond494) CFA_SP SP+6
          CFI Block cfiCond495 Using cfiCommon0
          CFI (cfiCond495) Function ??functionSetupInactivityTime
          CFI (cfiCond495) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_351
          CFI (cfiCond495) CFA_SP SP+6
          CFI Block cfiCond496 Using cfiCommon0
          CFI (cfiCond496) Function ??functionSetupWorkWeek
          CFI (cfiCond496) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_352
          CFI (cfiCond496) R26 Frame(CFA_Y, -2)
          CFI (cfiCond496) R27 Frame(CFA_Y, -1)
          CFI (cfiCond496) CFA_SP SP+6
          CFI (cfiCond496) CFA_Y Y+2
          CFI Block cfiCond497 Using cfiCommon0
          CFI (cfiCond497) Function ??functionSetCheckPassword
          CFI (cfiCond497) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_353
          CFI (cfiCond497) R24 Frame(CFA_Y, -4)
          CFI (cfiCond497) R25 Frame(CFA_Y, -3)
          CFI (cfiCond497) R26 Frame(CFA_Y, -2)
          CFI (cfiCond497) R27 Frame(CFA_Y, -1)
          CFI (cfiCond497) CFA_SP SP+6
          CFI (cfiCond497) CFA_Y Y+4
          CFI Block cfiCond498 Using cfiCommon0
          CFI (cfiCond498) Function ??functionSetCheckPassword
          CFI (cfiCond498) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_354
          CFI (cfiCond498) R24 Frame(CFA_Y, -4)
          CFI (cfiCond498) R25 Frame(CFA_Y, -3)
          CFI (cfiCond498) R26 Frame(CFA_Y, -2)
          CFI (cfiCond498) R27 Frame(CFA_Y, -1)
          CFI (cfiCond498) CFA_SP SP+6
          CFI (cfiCond498) CFA_Y Y+4
          CFI Block cfiCond499 Using cfiCommon0
          CFI (cfiCond499) Function ??functionSensorQuality
          CFI (cfiCond499) Conditional ??CrossCallReturnLabel_197, ??CrossCallReturnLabel_355
          CFI (cfiCond499) CFA_SP SP+6
          CFI Block cfiCond500 Using cfiCommon0
          CFI (cfiCond500) Function ??functionSetCheckPassword
          CFI (cfiCond500) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_29
          CFI (cfiCond500) R24 Frame(CFA_Y, -4)
          CFI (cfiCond500) R25 Frame(CFA_Y, -3)
          CFI (cfiCond500) R26 Frame(CFA_Y, -2)
          CFI (cfiCond500) R27 Frame(CFA_Y, -1)
          CFI (cfiCond500) CFA_SP SP+6
          CFI (cfiCond500) CFA_Y Y+4
          CFI Block cfiCond501 Using cfiCommon0
          CFI (cfiCond501) Function ??run
          CFI (cfiCond501) Conditional ??CrossCallReturnLabel_195, ??CrossCallReturnLabel_28
          CFI (cfiCond501) CFA_SP SP+6
          CFI Block cfiPicker502 Using cfiCommon1
          CFI (cfiPicker502) NoFunction
          CFI (cfiPicker502) Picker
        JMP     ??popBuff
          CFI EndBlock cfiCond487
          CFI EndBlock cfiCond488
          CFI EndBlock cfiCond489
          CFI EndBlock cfiCond490
          CFI EndBlock cfiCond491
          CFI EndBlock cfiCond492
          CFI EndBlock cfiCond493
          CFI EndBlock cfiCond494
          CFI EndBlock cfiCond495
          CFI EndBlock cfiCond496
          CFI EndBlock cfiCond497
          CFI EndBlock cfiCond498
          CFI EndBlock cfiCond499
          CFI EndBlock cfiCond500
          CFI EndBlock cfiCond501
          CFI EndBlock cfiPicker502

        RSEG CODE:CODE:NOROOT(1)
?Subroutine26:
          CFI Block cfiCond503 Using cfiCommon0
          CFI Function ??functionSetupWorkDay
          CFI Conditional ??CrossCallReturnLabel_33
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond504 Using cfiCommon0
          CFI (cfiCond504) Function ??functionSetupWorkDay
          CFI (cfiCond504) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond504) R24 Frame(CFA_Y, -4)
          CFI (cfiCond504) R25 Frame(CFA_Y, -3)
          CFI (cfiCond504) R26 Frame(CFA_Y, -2)
          CFI (cfiCond504) R27 Frame(CFA_Y, -1)
          CFI (cfiCond504) CFA_SP SP+4
          CFI (cfiCond504) CFA_Y Y+4
          CFI Block cfiPicker505 Using cfiCommon1
          CFI (cfiPicker505) NoFunction
          CFI (cfiPicker505) Picker
        RCALL   ?Subroutine91
??CrossCallReturnLabel_192:
        RCALL   ?Subroutine119
??CrossCallReturnLabel_375:
        MOVW    R25:R24, R27:R26
        RET
          CFI EndBlock cfiCond503
          CFI EndBlock cfiCond504
          CFI EndBlock cfiPicker505

        RSEG CODE:CODE:NOROOT(1)
?Subroutine91:
          CFI Block cfiCond506 Using cfiCommon0
          CFI Function ??displayDoneMessage
          CFI Conditional ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_309
          CFI CFA_SP SP+6
          CFI Block cfiCond507 Using cfiCommon0
          CFI (cfiCond507) Function ??displayErrorMessage
          CFI (cfiCond507) Conditional ??CrossCallReturnLabel_191, ??CrossCallReturnLabel_310
          CFI (cfiCond507) CFA_SP SP+6
          CFI Block cfiCond508 Using cfiCommon0
          CFI (cfiCond508) Function ??functionSetupWorkDay
          CFI (cfiCond508) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_33
          CFI (cfiCond508) R24 Frame(CFA_Y, -4)
          CFI (cfiCond508) R25 Frame(CFA_Y, -3)
          CFI (cfiCond508) R26 Frame(CFA_Y, -2)
          CFI (cfiCond508) R27 Frame(CFA_Y, -1)
          CFI (cfiCond508) CFA_SP SP+6
          CFI (cfiCond508) CFA_Y Y+4
          CFI Block cfiCond509 Using cfiCommon0
          CFI (cfiCond509) Function ??functionSetupWorkDay
          CFI (cfiCond509) Conditional ??CrossCallReturnLabel_192, ??CrossCallReturnLabel_34
          CFI (cfiCond509) R24 Frame(CFA_Y, -4)
          CFI (cfiCond509) R25 Frame(CFA_Y, -3)
          CFI (cfiCond509) R26 Frame(CFA_Y, -2)
          CFI (cfiCond509) R27 Frame(CFA_Y, -1)
          CFI (cfiCond509) CFA_SP SP+6
          CFI (cfiCond509) CFA_Y Y+4
          CFI Block cfiPicker510 Using cfiCommon1
          CFI (cfiPicker510) NoFunction
          CFI (cfiPicker510) Picker
        RCALL   ?Subroutine116
??CrossCallReturnLabel_274:
        LDI     R17, 0
        LDI     R16, 0
        RET
          CFI EndBlock cfiCond506
          CFI EndBlock cfiCond507
          CFI EndBlock cfiCond508
          CFI EndBlock cfiCond509
          CFI EndBlock cfiPicker510

        RSEG CODE:CODE:NOROOT(1)
?Subroutine8:
          CFI Block cfiCond511 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_12
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond512 Using cfiCommon0
          CFI (cfiCond512) Function ??functionSetupDateTime
          CFI (cfiCond512) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond512) R26 Frame(CFA_Y, -2)
          CFI (cfiCond512) R27 Frame(CFA_Y, -1)
          CFI (cfiCond512) CFA_SP SP+4
          CFI (cfiCond512) CFA_Y Y+2
          CFI Block cfiCond513 Using cfiCommon0
          CFI (cfiCond513) Function ??functionSetupWorkDay
          CFI (cfiCond513) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond513) R24 Frame(CFA_Y, -4)
          CFI (cfiCond513) R25 Frame(CFA_Y, -3)
          CFI (cfiCond513) R26 Frame(CFA_Y, -2)
          CFI (cfiCond513) R27 Frame(CFA_Y, -1)
          CFI (cfiCond513) CFA_SP SP+4
          CFI (cfiCond513) CFA_Y Y+4
          CFI Block cfiCond514 Using cfiCommon0
          CFI (cfiCond514) Function ??functionSetupWorkDay
          CFI (cfiCond514) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond514) R24 Frame(CFA_Y, -4)
          CFI (cfiCond514) R25 Frame(CFA_Y, -3)
          CFI (cfiCond514) R26 Frame(CFA_Y, -2)
          CFI (cfiCond514) R27 Frame(CFA_Y, -1)
          CFI (cfiCond514) CFA_SP SP+4
          CFI (cfiCond514) CFA_Y Y+4
          CFI Block cfiPicker515 Using cfiCommon1
          CFI (cfiPicker515) NoFunction
          CFI (cfiPicker515) Picker
        RCALL   ?Subroutine115
??CrossCallReturnLabel_397:
        LDI     R16, 58
        RET
          CFI EndBlock cfiCond511
          CFI EndBlock cfiCond512
          CFI EndBlock cfiCond513
          CFI EndBlock cfiCond514
          CFI EndBlock cfiPicker515
// 1004 

        RSEG CODE:CODE:NOROOT(1)
// 1005   void functionSetupDetectionTime()
??functionSetupDetectionTime:
          CFI Block cfiBlock516 Using cfiCommon0
          CFI Function ??functionSetupDetectionTime
// 1006   {
        FUNCALL ??functionSetupDetectionTime, ??popBuff
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDetectionTime, ??saveDeviceCounterConfig
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDetectionTime, ??displayDoneMessage
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDetectionTime, ??clearBuffer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDetectionTime, ??getString
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDetectionTime, ??str2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDetectionTime, ??getString
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDetectionTime, ??str2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDetectionTime, ??num2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupDetectionTime, ??refreshDisplay
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine59
??CrossCallReturnLabel_125:
        BREQ    ??CrossCallReturnLabel_350
// 1007     if (activeFunctionChanged)
// 1008     {
// 1009       menuStack[menuStackPos].funcState = DeviceCounterConfig.bodyDetectionLevel;
        LDS     R17, (??DeviceCounterConfig + 2)
        LDS     R18, (??curStatisticRecord + 25)
        LDI     R16, 5
        MUL     R18, R16
        RCALL   ?Subroutine121
// 1010     }
??CrossCallReturnLabel_286:
        STD     Z+4, R17
        RJMP    ??CrossCallReturnLabel_350
// 1011 
// 1012     while (transitionKey)
// 1013     {
// 1014       switch (transitionKey)
// 1015       {
// 1016         case 1:
// 1017           return;
// 1018 
// 1019         case 4:
// 1020           DeviceCounterConfig.bodyDetectionLevel = menuStack[menuStackPos].funcState;
// 1021           DeviceManager::saveDeviceCounterConfig();
// 1022           displayDoneMessage();
// 1023           return;
// 1024 
// 1025         case 2:
// 1026             if (menuStack[menuStackPos].funcState > 1)
// 1027             {
// 1028               menuStack[menuStackPos].funcState--;
// 1029             }
// 1030           break;
// 1031 
// 1032         case 3:
// 1033           if (menuStack[menuStackPos].funcState < 255)
// 1034           {
// 1035             menuStack[menuStackPos].funcState++;
// 1036           }
// 1037           break;
// 1038       }
// 1039 
// 1040       getNextTransitionKey();
??functionSetupDetectionTime_1:
        RCALL   ?Subroutine34
??CrossCallReturnLabel_350:
        RCALL   ?Subroutine50
??CrossCallReturnLabel_91:
        BREQ    ??CrossCallReturnLabel_339
        DEC     R16
        BREQ    ??CrossCallReturnLabel_377
        DEC     R16
        BREQ    ??functionSetupDetectionTime_2
        DEC     R16
        BREQ    ??functionSetupDetectionTime_3
        DEC     R16
        BRNE    ??functionSetupDetectionTime_4
        RCALL   ?Subroutine114
??CrossCallReturnLabel_263:
        STS     (??DeviceCounterConfig + 2), R16
        RCALL   ?Subroutine76
??CrossCallReturnLabel_161:
        RJMP    ??displayDoneMessage
??functionSetupDetectionTime_2:
        RCALL   ?Subroutine2
??CrossCallReturnLabel_0:
        CPI     R16, 2
        BRCS    ??functionSetupDetectionTime_4
        DEC     R16
        RJMP    ??functionSetupDetectionTime_5
??functionSetupDetectionTime_3:
        RCALL   ?Subroutine2
??CrossCallReturnLabel_1:
        CPI     R16, 255
        BREQ    ??functionSetupDetectionTime_4
        INC     R16
??functionSetupDetectionTime_5:
        STD     Z+4, R16
??functionSetupDetectionTime_4:
        RCALL   ?Subroutine33
// 1041     }
??CrossCallReturnLabel_328:
        BRNE    ??functionSetupDetectionTime_1
        RCALL   ??Subroutine132_0
// 1042 
// 1043     LCDDriver::clearBuffer();
??CrossCallReturnLabel_339:
        RCALL   ?Subroutine42
// 1044 
// 1045     LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_SETUP_COUNTER_DETECTIONTIME), LCDDriver::LCDTextIdentation_Center);
??CrossCallReturnLabel_70:
        LDI     R16, 28
        RCALL   ?Subroutine27
// 1046     LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_TEXT_MILLISECONDS_SHORT), LCDDriver::LCDTextIdentation_Right, 15);
??CrossCallReturnLabel_365:
        LDI     R16, 91
        RCALL   ?Subroutine16
// 1047 
// 1048     unsigned short calcBodyDetLevel = (unsigned short)(menuStack[menuStackPos].funcState) * timerDiscreteness;
??CrossCallReturnLabel_359:
        RCALL   ?Subroutine86
??CrossCallReturnLabel_289:
        LDD     R17, Z+4
        MUL     R17, R16
// 1049     if (GLOBAL::DeviceProfile::DeviceCounterConfig.detectDirection < GLOBAL::DeviceProfile::CounterDetectDirectionType_StrongDetection)
        RCALL   ?Subroutine68
??CrossCallReturnLabel_150:
        CPI     R16, 3
        BRCC    ??functionSetupDetectionTime_6
// 1050     {
// 1051       calcBodyDetLevel += COUNTER_BODY_DETECTION_ADD_MS;
        LDI     R16, 30
        ADD     R0, R16
        LDI     R16, 0
        ADC     R1, R16
// 1052     }
// 1053 
// 1054     LCDDriver::num2Buf(1, 12, calcBodyDetLevel, 4);
??functionSetupDetectionTime_6:
        LDI     R19, 0
        LDI     R18, 4
        MOVW    R21:R20, R1:R0
        RCALL   ?Subroutine0
// 1055 
// 1056     LCDDriver::refreshDisplay();
// 1057 
// 1058     isTransition = false;
// 1059   }
??CrossCallReturnLabel_377:
        RET
          CFI EndBlock cfiBlock516

        RSEG CODE:CODE:NOROOT(1)
?Subroutine42:
          CFI Block cfiCond517 Using cfiCommon0
          CFI Function ??displayDoneMessage
          CFI Conditional ??CrossCallReturnLabel_77
          CFI CFA_SP SP+4
          CFI Block cfiCond518 Using cfiCommon0
          CFI (cfiCond518) Function ??displayErrorMessage
          CFI (cfiCond518) Conditional ??CrossCallReturnLabel_76
          CFI (cfiCond518) CFA_SP SP+4
          CFI Block cfiCond519 Using cfiCommon0
          CFI (cfiCond519) Function ??functionMenu
          CFI (cfiCond519) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond519) R26 Frame(CFA_Y, -2)
          CFI (cfiCond519) R27 Frame(CFA_Y, -1)
          CFI (cfiCond519) CFA_SP SP+4
          CFI (cfiCond519) CFA_Y Y+2
          CFI Block cfiCond520 Using cfiCommon0
          CFI (cfiCond520) Function ??functionIncorrectFunction
          CFI (cfiCond520) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond520) CFA_SP SP+4
          CFI (cfiCond520) CFA_Y Y+20
          CFI Block cfiCond521 Using cfiCommon0
          CFI (cfiCond521) Function ??functionReportVisitorsTotal
          CFI (cfiCond521) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond521) CFA_SP SP+4
          CFI Block cfiCond522 Using cfiCommon0
          CFI (cfiCond522) Function ??functionReports
          CFI (cfiCond522) Conditional ??CrossCallReturnLabel_72
          CFI (cfiCond522) R24 Frame(CFA_Y, -3)
          CFI (cfiCond522) R26 Frame(CFA_Y, -2)
          CFI (cfiCond522) R27 Frame(CFA_Y, -1)
          CFI (cfiCond522) CFA_SP SP+4
          CFI (cfiCond522) CFA_Y Y+13
          CFI Block cfiCond523 Using cfiCommon0
          CFI (cfiCond523) Function ??functionSafeBattRemove
          CFI (cfiCond523) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond523) CFA_SP SP+4
          CFI Block cfiCond524 Using cfiCommon0
          CFI (cfiCond524) Function ??functionSetupDetectionTime
          CFI (cfiCond524) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond524) CFA_SP SP+4
          CFI Block cfiCond525 Using cfiCommon0
          CFI (cfiCond525) Function ??functionSetupInactivityTime
          CFI (cfiCond525) Conditional ??CrossCallReturnLabel_69
          CFI (cfiCond525) CFA_SP SP+4
          CFI Block cfiCond526 Using cfiCommon0
          CFI (cfiCond526) Function ??functionSetupWorkWeek
          CFI (cfiCond526) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond526) R26 Frame(CFA_Y, -2)
          CFI (cfiCond526) R27 Frame(CFA_Y, -1)
          CFI (cfiCond526) CFA_SP SP+4
          CFI (cfiCond526) CFA_Y Y+2
          CFI Block cfiCond527 Using cfiCommon0
          CFI (cfiCond527) Function ??functionSetCheckPassword
          CFI (cfiCond527) Conditional ??CrossCallReturnLabel_67
          CFI (cfiCond527) R24 Frame(CFA_Y, -4)
          CFI (cfiCond527) R25 Frame(CFA_Y, -3)
          CFI (cfiCond527) R26 Frame(CFA_Y, -2)
          CFI (cfiCond527) R27 Frame(CFA_Y, -1)
          CFI (cfiCond527) CFA_SP SP+4
          CFI (cfiCond527) CFA_Y Y+4
          CFI Block cfiCond528 Using cfiCommon0
          CFI (cfiCond528) Function ??functionBatteryVoltage
          CFI (cfiCond528) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond528) R24 Frame(CFA_Y, -2)
          CFI (cfiCond528) R25 Frame(CFA_Y, -1)
          CFI (cfiCond528) CFA_SP SP+4
          CFI (cfiCond528) CFA_Y Y+2
          CFI Block cfiCond529 Using cfiCommon0
          CFI (cfiCond529) Function ??functionSensorQuality
          CFI (cfiCond529) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond529) CFA_SP SP+4
          CFI Block cfiCond530 Using cfiCommon0
          CFI (cfiCond530) Function ??functionSerialNumber
          CFI (cfiCond530) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond530) R26 Frame(CFA_Y, -2)
          CFI (cfiCond530) R27 Frame(CFA_Y, -1)
          CFI (cfiCond530) CFA_SP SP+4
          CFI (cfiCond530) CFA_Y Y+2
          CFI Block cfiCond531 Using cfiCommon0
          CFI (cfiCond531) Function ??functionResetNum
          CFI (cfiCond531) Conditional ??CrossCallReturnLabel_63
          CFI (cfiCond531) R24 Frame(CFA_Y, -5)
          CFI (cfiCond531) R25 Frame(CFA_Y, -4)
          CFI (cfiCond531) R26 Frame(CFA_Y, -3)
          CFI (cfiCond531) R27 Frame(CFA_Y, -2)
          CFI (cfiCond531) R4 Frame(CFA_Y, -1)
          CFI (cfiCond531) CFA_SP SP+4
          CFI (cfiCond531) CFA_Y Y+5
          CFI Block cfiPicker532 Using cfiCommon1
          CFI (cfiPicker532) NoFunction
          CFI (cfiPicker532) Picker
        JMP     ??clearBuffer
          CFI EndBlock cfiCond517
          CFI EndBlock cfiCond518
          CFI EndBlock cfiCond519
          CFI EndBlock cfiCond520
          CFI EndBlock cfiCond521
          CFI EndBlock cfiCond522
          CFI EndBlock cfiCond523
          CFI EndBlock cfiCond524
          CFI EndBlock cfiCond525
          CFI EndBlock cfiCond526
          CFI EndBlock cfiCond527
          CFI EndBlock cfiCond528
          CFI EndBlock cfiCond529
          CFI EndBlock cfiCond530
          CFI EndBlock cfiCond531
          CFI EndBlock cfiPicker532

        RSEG CODE:CODE:NOROOT(1)
?Subroutine16:
          CFI Block cfiCond533 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_358
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond534 Using cfiCommon0
          CFI (cfiCond534) Function ??functionSetupDetectionTime
          CFI (cfiCond534) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond534) CFA_SP SP+4
          CFI Block cfiCond535 Using cfiCommon0
          CFI (cfiCond535) Function ??functionSetupInactivityTime
          CFI (cfiCond535) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond535) CFA_SP SP+4
          CFI Block cfiPicker536 Using cfiCommon1
          CFI (cfiPicker536) NoFunction
          CFI (cfiPicker536) Picker
        LDI     R17, 0
        RCALL   ?Subroutine123
??CrossCallReturnLabel_293:
        LDI     R18, 15
        LDI     R17, 2
          CFI EndBlock cfiCond533
          CFI EndBlock cfiCond534
          CFI EndBlock cfiCond535
          CFI EndBlock cfiPicker536
        REQUIRE ??Subroutine133_0
        ;               // Fall through to label ??Subroutine133_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine133_0:
          CFI Block cfiCond537 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_356
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond538 Using cfiCommon0
          CFI (cfiCond538) Function ??functionReports
          CFI (cfiCond538) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond538) R24 Frame(CFA_Y, -3)
          CFI (cfiCond538) R26 Frame(CFA_Y, -2)
          CFI (cfiCond538) R27 Frame(CFA_Y, -1)
          CFI (cfiCond538) CFA_SP SP+4
          CFI (cfiCond538) CFA_Y Y+13
          CFI Block cfiCond539 Using cfiCommon0
          CFI (cfiCond539) Function ??functionReports
          CFI (cfiCond539) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond539) R24 Frame(CFA_Y, -3)
          CFI (cfiCond539) R26 Frame(CFA_Y, -2)
          CFI (cfiCond539) R27 Frame(CFA_Y, -1)
          CFI (cfiCond539) CFA_SP SP+4
          CFI (cfiCond539) CFA_Y Y+13
          CFI Block cfiCond540 Using cfiCommon0
          CFI (cfiCond540) Function ??functionSetupDetectionTime
          CFI (cfiCond540) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond540) CFA_SP SP+4
          CFI Block cfiCond541 Using cfiCommon0
          CFI (cfiCond541) Function ??functionSetupInactivityTime
          CFI (cfiCond541) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond541) CFA_SP SP+4
          CFI Block cfiPicker542 Using cfiCommon1
          CFI (cfiPicker542) NoFunction
          CFI (cfiPicker542) Picker
        LDI     R16, 1
        RJMP    ?Subroutine119
          CFI EndBlock cfiCond537
          CFI EndBlock cfiCond538
          CFI EndBlock cfiCond539
          CFI EndBlock cfiCond540
          CFI EndBlock cfiCond541
          CFI EndBlock cfiPicker542

        RSEG CODE:CODE:NOROOT(1)
?Subroutine0:
          CFI Block cfiCond543 Using cfiCommon0
          CFI Function ??functionSetupDetectionTime
          CFI Conditional ??CrossCallReturnLabel_377
          CFI CFA_SP SP+4
          CFI Block cfiCond544 Using cfiCommon0
          CFI (cfiCond544) Function ??functionBatteryVoltage
          CFI (cfiCond544) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond544) R24 Frame(CFA_Y, -2)
          CFI (cfiCond544) R25 Frame(CFA_Y, -1)
          CFI (cfiCond544) CFA_SP SP+4
          CFI (cfiCond544) CFA_Y Y+2
          CFI Block cfiPicker545 Using cfiCommon1
          CFI (cfiPicker545) NoFunction
          CFI (cfiPicker545) Picker
        RCALL   ?Subroutine106
??CrossCallReturnLabel_221:
        LDI     R17, 12
          CFI EndBlock cfiCond543
          CFI EndBlock cfiCond544
          CFI EndBlock cfiPicker545
        REQUIRE ??Subroutine134_0
        ;               // Fall through to label ??Subroutine134_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine134_0:
          CFI Block cfiCond546 Using cfiCommon0
          CFI Function ??functionSetupInactivityTime
          CFI Conditional ??CrossCallReturnLabel_379
          CFI CFA_SP SP+4
          CFI Block cfiCond547 Using cfiCommon0
          CFI (cfiCond547) Function ??functionSetupDetectionTime
          CFI (cfiCond547) Conditional ??CrossCallReturnLabel_377
          CFI (cfiCond547) CFA_SP SP+4
          CFI Block cfiCond548 Using cfiCommon0
          CFI (cfiCond548) Function ??functionBatteryVoltage
          CFI (cfiCond548) Conditional ??CrossCallReturnLabel_378
          CFI (cfiCond548) R24 Frame(CFA_Y, -2)
          CFI (cfiCond548) R25 Frame(CFA_Y, -1)
          CFI (cfiCond548) CFA_SP SP+4
          CFI (cfiCond548) CFA_Y Y+2
          CFI Block cfiPicker549 Using cfiCommon1
          CFI (cfiPicker549) NoFunction
          CFI (cfiPicker549) Picker
        RCALL   ?Subroutine85
??CrossCallReturnLabel_380:
        RCALL   ?Subroutine93
??CrossCallReturnLabel_383:
        LDI     R16, 0
        STS     (??curStatisticRecord + 33), R16
        RET
          CFI EndBlock cfiCond546
          CFI EndBlock cfiCond547
          CFI EndBlock cfiCond548
          CFI EndBlock cfiPicker549
// 1060 

        RSEG CODE:CODE:NOROOT(1)
// 1061   void functionSetupInactivityTime()
??functionSetupInactivityTime:
          CFI Block cfiBlock550 Using cfiCommon0
          CFI Function ??functionSetupInactivityTime
// 1062   {
        FUNCALL ??functionSetupInactivityTime, ??popBuff
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupInactivityTime, ??saveDeviceAdvancedSetup
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupInactivityTime, ??displayDoneMessage
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupInactivityTime, ??clearBuffer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupInactivityTime, ??getString
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupInactivityTime, ??str2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupInactivityTime, ??getString
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupInactivityTime, ??str2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupInactivityTime, ??num2Buf
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupInactivityTime, ??refreshDisplay
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine59
??CrossCallReturnLabel_126:
        BREQ    ??CrossCallReturnLabel_351
// 1063     if (activeFunctionChanged)
// 1064     {
// 1065       menuStack[menuStackPos].funcState = DeviceAdvancedSetup.inactivityTime;
        LDS     R16, (??DeviceAdvancedSetup + 2)
        RCALL   ?Subroutine111
??CrossCallReturnLabel_250:
        RCALL   ?Subroutine113
??CrossCallReturnLabel_255:
        STD     Z+4, R16
// 1066       if (menuStack[menuStackPos].funcState < 5)
        CPI     R16, 5
        BRCC    ??CrossCallReturnLabel_351
// 1067       {
// 1068         menuStack[menuStackPos].funcState = 5;
        STD     Z+4, R17
        RJMP    ??CrossCallReturnLabel_351
// 1069       }
// 1070     }
// 1071 
// 1072     while (transitionKey)
// 1073     {
// 1074       switch (transitionKey)
// 1075       {
// 1076         case 1:
// 1077           return;
// 1078 
// 1079         case 4:
// 1080           DeviceAdvancedSetup.inactivityTime = menuStack[menuStackPos].funcState;
// 1081           DeviceManager::saveDeviceAdvancedSetup();
// 1082           displayDoneMessage();
// 1083           return;
// 1084 
// 1085         case 2:
// 1086             if (menuStack[menuStackPos].funcState > 5)
// 1087             {
// 1088               menuStack[menuStackPos].funcState--;
// 1089             }
// 1090           break;
// 1091 
// 1092         case 3:
// 1093           if (menuStack[menuStackPos].funcState < 60)
// 1094           {
// 1095             menuStack[menuStackPos].funcState++;
// 1096           }
// 1097           break;
// 1098       }
// 1099 
// 1100       getNextTransitionKey();
??functionSetupInactivityTime_1:
        RCALL   ?Subroutine34
??CrossCallReturnLabel_351:
        RCALL   ?Subroutine50
??CrossCallReturnLabel_92:
        BREQ    ??CrossCallReturnLabel_340
        DEC     R16
        BREQ    ??CrossCallReturnLabel_379
        DEC     R16
        BREQ    ??functionSetupInactivityTime_2
        DEC     R16
        BREQ    ??functionSetupInactivityTime_3
        DEC     R16
        BRNE    ??functionSetupInactivityTime_4
        RCALL   ?Subroutine114
??CrossCallReturnLabel_264:
        STS     (??DeviceAdvancedSetup + 2), R16
        RCALL   ?Subroutine112
??CrossCallReturnLabel_254:
        RJMP    ??displayDoneMessage
??functionSetupInactivityTime_2:
        RCALL   ?Subroutine2
??CrossCallReturnLabel_2:
        CPI     R16, 6
        BRCS    ??functionSetupInactivityTime_4
        DEC     R16
        RJMP    ??functionSetupInactivityTime_5
??functionSetupInactivityTime_3:
        RCALL   ?Subroutine2
??CrossCallReturnLabel_3:
        CPI     R16, 60
        BRCC    ??functionSetupInactivityTime_4
        INC     R16
??functionSetupInactivityTime_5:
        STD     Z+4, R16
??functionSetupInactivityTime_4:
        RCALL   ?Subroutine33
// 1101     }
??CrossCallReturnLabel_329:
        BRNE    ??functionSetupInactivityTime_1
        RCALL   ??Subroutine132_0
// 1102 
// 1103     LCDDriver::clearBuffer();
??CrossCallReturnLabel_340:
        RCALL   ?Subroutine42
// 1104 
// 1105     LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_TEXT_TIMEOUT), LCDDriver::LCDTextIdentation_Center);
??CrossCallReturnLabel_69:
        LDI     R16, 93
        RCALL   ?Subroutine27
// 1106     LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_TEXT_SECONDS_SHORT), LCDDriver::LCDTextIdentation_Right, 15);
??CrossCallReturnLabel_366:
        LDI     R16, 92
        RCALL   ?Subroutine16
// 1107 
// 1108     LCDDriver::num2Buf(1, 11, menuStack[menuStackPos].funcState, 4);
??CrossCallReturnLabel_360:
        LDI     R19, 0
        LDI     R18, 4
        RCALL   ?Subroutine86
??CrossCallReturnLabel_290:
        LDD     R20, Z+4
        RCALL   ?Subroutine99
??CrossCallReturnLabel_204:
        LDI     R17, 11
        RCALL   ??Subroutine134_0
// 1109 
// 1110     LCDDriver::refreshDisplay();
// 1111 
// 1112     isTransition = false;
// 1113   }
??CrossCallReturnLabel_379:
        RET
          CFI EndBlock cfiBlock550

        RSEG CODE:CODE:NOROOT(1)
?Subroutine111:
          CFI Block cfiCond551 Using cfiCommon0
          CFI Function ??functionSafeBattRemove
          CFI Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_105
          CFI CFA_SP SP+6
          CFI Block cfiCond552 Using cfiCommon0
          CFI (cfiCond552) Function ??functionSafeBattRemove
          CFI (cfiCond552) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_106
          CFI (cfiCond552) CFA_SP SP+6
          CFI Block cfiCond553 Using cfiCommon0
          CFI (cfiCond553) Function ??functionSetupSummerTimeMenu
          CFI (cfiCond553) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_107
          CFI (cfiCond553) CFA_SP SP+6
          CFI Block cfiCond554 Using cfiCommon0
          CFI (cfiCond554) Function ??functionSetupDetectorMenu
          CFI (cfiCond554) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_108
          CFI (cfiCond554) CFA_SP SP+6
          CFI Block cfiCond555 Using cfiCommon0
          CFI (cfiCond555) Function ??functionSetupInventCntMenu
          CFI (cfiCond555) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_109
          CFI (cfiCond555) CFA_SP SP+6
          CFI Block cfiCond556 Using cfiCommon0
          CFI (cfiCond556) Function ??functionSetupSaveModeMenu
          CFI (cfiCond556) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_110
          CFI (cfiCond556) CFA_SP SP+6
          CFI Block cfiCond557 Using cfiCommon0
          CFI (cfiCond557) Function ??functionSetupWorkTodayMenu
          CFI (cfiCond557) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_111
          CFI (cfiCond557) CFA_SP SP+6
          CFI Block cfiCond558 Using cfiCommon0
          CFI (cfiCond558) Function ??functionSetupWorkDayMenu
          CFI (cfiCond558) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_112
          CFI (cfiCond558) CFA_SP SP+6
          CFI Block cfiCond559 Using cfiCommon0
          CFI (cfiCond559) Function ??functionSetupBacklightMenu
          CFI (cfiCond559) Conditional ??CrossCallReturnLabel_251, ??CrossCallReturnLabel_113
          CFI (cfiCond559) CFA_SP SP+6
          CFI Block cfiCond560 Using cfiCommon0
          CFI (cfiCond560) Function ??functionSetupInactivityTime
          CFI (cfiCond560) Conditional ??CrossCallReturnLabel_250
          CFI (cfiCond560) CFA_SP SP+4
          CFI Block cfiPicker561 Using cfiCommon1
          CFI (cfiPicker561) NoFunction
          CFI (cfiPicker561) Picker
        LDS     R18, (??curStatisticRecord + 25)
        LDI     R17, 5
        MUL     R18, R17
        RET
          CFI EndBlock cfiCond551
          CFI EndBlock cfiCond552
          CFI EndBlock cfiCond553
          CFI EndBlock cfiCond554
          CFI EndBlock cfiCond555
          CFI EndBlock cfiCond556
          CFI EndBlock cfiCond557
          CFI EndBlock cfiCond558
          CFI EndBlock cfiCond559
          CFI EndBlock cfiCond560
          CFI EndBlock cfiPicker561

        RSEG CODE:CODE:NOROOT(1)
?Subroutine99:
          CFI Block cfiCond562 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_279
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+6
          CFI CFA_Y Y+2
          CFI Block cfiCond563 Using cfiCommon0
          CFI (cfiCond563) Function ??functionReports
          CFI (cfiCond563) Conditional ??CrossCallReturnLabel_207, ??CrossCallReturnLabel_278
          CFI (cfiCond563) R24 Frame(CFA_Y, -3)
          CFI (cfiCond563) R26 Frame(CFA_Y, -2)
          CFI (cfiCond563) R27 Frame(CFA_Y, -1)
          CFI (cfiCond563) CFA_SP SP+6
          CFI (cfiCond563) CFA_Y Y+13
          CFI Block cfiCond564 Using cfiCommon0
          CFI (cfiCond564) Function ??functionSetupDateTime
          CFI (cfiCond564) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_26
          CFI (cfiCond564) R26 Frame(CFA_Y, -2)
          CFI (cfiCond564) R27 Frame(CFA_Y, -1)
          CFI (cfiCond564) CFA_SP SP+6
          CFI (cfiCond564) CFA_Y Y+2
          CFI Block cfiCond565 Using cfiCommon0
          CFI (cfiCond565) Function ??functionReports
          CFI (cfiCond565) Conditional ??CrossCallReturnLabel_206, ??CrossCallReturnLabel_27
          CFI (cfiCond565) R24 Frame(CFA_Y, -3)
          CFI (cfiCond565) R26 Frame(CFA_Y, -2)
          CFI (cfiCond565) R27 Frame(CFA_Y, -1)
          CFI (cfiCond565) CFA_SP SP+6
          CFI (cfiCond565) CFA_Y Y+13
          CFI Block cfiCond566 Using cfiCommon0
          CFI (cfiCond566) Function ??functionSetupDateTime
          CFI (cfiCond566) Conditional ??CrossCallReturnLabel_198
          CFI (cfiCond566) R26 Frame(CFA_Y, -2)
          CFI (cfiCond566) R27 Frame(CFA_Y, -1)
          CFI (cfiCond566) CFA_SP SP+4
          CFI (cfiCond566) CFA_Y Y+2
          CFI Block cfiCond567 Using cfiCommon0
          CFI (cfiCond567) Function ??functionSetupDateTime
          CFI (cfiCond567) Conditional ??CrossCallReturnLabel_199
          CFI (cfiCond567) R26 Frame(CFA_Y, -2)
          CFI (cfiCond567) R27 Frame(CFA_Y, -1)
          CFI (cfiCond567) CFA_SP SP+4
          CFI (cfiCond567) CFA_Y Y+2
          CFI Block cfiCond568 Using cfiCommon0
          CFI (cfiCond568) Function ??functionSetupDateTime
          CFI (cfiCond568) Conditional ??CrossCallReturnLabel_200
          CFI (cfiCond568) R26 Frame(CFA_Y, -2)
          CFI (cfiCond568) R27 Frame(CFA_Y, -1)
          CFI (cfiCond568) CFA_SP SP+4
          CFI (cfiCond568) CFA_Y Y+2
          CFI Block cfiCond569 Using cfiCommon0
          CFI (cfiCond569) Function ??functionReports
          CFI (cfiCond569) Conditional ??CrossCallReturnLabel_201
          CFI (cfiCond569) R24 Frame(CFA_Y, -3)
          CFI (cfiCond569) R26 Frame(CFA_Y, -2)
          CFI (cfiCond569) R27 Frame(CFA_Y, -1)
          CFI (cfiCond569) CFA_SP SP+4
          CFI (cfiCond569) CFA_Y Y+13
          CFI Block cfiCond570 Using cfiCommon0
          CFI (cfiCond570) Function ??functionReports
          CFI (cfiCond570) Conditional ??CrossCallReturnLabel_202
          CFI (cfiCond570) R24 Frame(CFA_Y, -3)
          CFI (cfiCond570) R26 Frame(CFA_Y, -2)
          CFI (cfiCond570) R27 Frame(CFA_Y, -1)
          CFI (cfiCond570) CFA_SP SP+4
          CFI (cfiCond570) CFA_Y Y+13
          CFI Block cfiCond571 Using cfiCommon0
          CFI (cfiCond571) Function ??functionReports
          CFI (cfiCond571) Conditional ??CrossCallReturnLabel_203
          CFI (cfiCond571) R24 Frame(CFA_Y, -3)
          CFI (cfiCond571) R26 Frame(CFA_Y, -2)
          CFI (cfiCond571) R27 Frame(CFA_Y, -1)
          CFI (cfiCond571) CFA_SP SP+4
          CFI (cfiCond571) CFA_Y Y+13
          CFI Block cfiCond572 Using cfiCommon0
          CFI (cfiCond572) Function ??functionSetupInactivityTime
          CFI (cfiCond572) Conditional ??CrossCallReturnLabel_204
          CFI (cfiCond572) CFA_SP SP+4
          CFI Block cfiCond573 Using cfiCommon0
          CFI (cfiCond573) Function ??displaySensorQuality
          CFI (cfiCond573) Conditional ??CrossCallReturnLabel_205
          CFI (cfiCond573) R24 Frame(CFA_Y, -4)
          CFI (cfiCond573) R26 Frame(CFA_Y, -3)
          CFI (cfiCond573) R4 Frame(CFA_Y, -2)
          CFI (cfiCond573) R5 Frame(CFA_Y, -1)
          CFI (cfiCond573) CFA_SP SP+4
          CFI (cfiCond573) CFA_Y Y+4
          CFI Block cfiPicker574 Using cfiCommon1
          CFI (cfiPicker574) NoFunction
          CFI (cfiPicker574) Picker
        LDI     R21, 0
        LDI     R22, 0
        LDI     R23, 0
        RET
          CFI EndBlock cfiCond562
          CFI EndBlock cfiCond563
          CFI EndBlock cfiCond564
          CFI EndBlock cfiCond565
          CFI EndBlock cfiCond566
          CFI EndBlock cfiCond567
          CFI EndBlock cfiCond568
          CFI EndBlock cfiCond569
          CFI EndBlock cfiCond570
          CFI EndBlock cfiCond571
          CFI EndBlock cfiCond572
          CFI EndBlock cfiCond573
          CFI EndBlock cfiPicker574

        RSEG CODE:CODE:NOROOT(1)
?Subroutine27:
          CFI Block cfiCond575 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_362
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond576 Using cfiCommon0
          CFI (cfiCond576) Function ??functionSafeBattRemove
          CFI (cfiCond576) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond576) CFA_SP SP+4
          CFI Block cfiCond577 Using cfiCommon0
          CFI (cfiCond577) Function ??functionSafeBattRemove
          CFI (cfiCond577) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond577) CFA_SP SP+4
          CFI Block cfiCond578 Using cfiCommon0
          CFI (cfiCond578) Function ??functionSetupDetectionTime
          CFI (cfiCond578) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond578) CFA_SP SP+4
          CFI Block cfiCond579 Using cfiCommon0
          CFI (cfiCond579) Function ??functionSetupInactivityTime
          CFI (cfiCond579) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond579) CFA_SP SP+4
          CFI Block cfiCond580 Using cfiCommon0
          CFI (cfiCond580) Function ??functionSetupWorkWeek
          CFI (cfiCond580) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond580) R26 Frame(CFA_Y, -2)
          CFI (cfiCond580) R27 Frame(CFA_Y, -1)
          CFI (cfiCond580) CFA_SP SP+4
          CFI (cfiCond580) CFA_Y Y+2
          CFI Block cfiCond581 Using cfiCommon0
          CFI (cfiCond581) Function ??functionSetCheckPassword
          CFI (cfiCond581) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond581) R24 Frame(CFA_Y, -4)
          CFI (cfiCond581) R25 Frame(CFA_Y, -3)
          CFI (cfiCond581) R26 Frame(CFA_Y, -2)
          CFI (cfiCond581) R27 Frame(CFA_Y, -1)
          CFI (cfiCond581) CFA_SP SP+4
          CFI (cfiCond581) CFA_Y Y+4
          CFI Block cfiCond582 Using cfiCommon0
          CFI (cfiCond582) Function ??functionBatteryVoltage
          CFI (cfiCond582) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond582) R24 Frame(CFA_Y, -2)
          CFI (cfiCond582) R25 Frame(CFA_Y, -1)
          CFI (cfiCond582) CFA_SP SP+4
          CFI (cfiCond582) CFA_Y Y+2
          CFI Block cfiCond583 Using cfiCommon0
          CFI (cfiCond583) Function ??functionSerialNumber
          CFI (cfiCond583) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond583) R26 Frame(CFA_Y, -2)
          CFI (cfiCond583) R27 Frame(CFA_Y, -1)
          CFI (cfiCond583) CFA_SP SP+4
          CFI (cfiCond583) CFA_Y Y+2
          CFI Block cfiCond584 Using cfiCommon0
          CFI (cfiCond584) Function ??functionResetNum
          CFI (cfiCond584) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond584) R24 Frame(CFA_Y, -5)
          CFI (cfiCond584) R25 Frame(CFA_Y, -4)
          CFI (cfiCond584) R26 Frame(CFA_Y, -3)
          CFI (cfiCond584) R27 Frame(CFA_Y, -2)
          CFI (cfiCond584) R4 Frame(CFA_Y, -1)
          CFI (cfiCond584) CFA_SP SP+4
          CFI (cfiCond584) CFA_Y Y+5
          CFI Block cfiPicker585 Using cfiCommon1
          CFI (cfiPicker585) NoFunction
          CFI (cfiPicker585) Picker
        RCALL   ?Subroutine116
??CrossCallReturnLabel_268:
        LDI     R17, 0
          CFI EndBlock cfiCond575
          CFI EndBlock cfiCond576
          CFI EndBlock cfiCond577
          CFI EndBlock cfiCond578
          CFI EndBlock cfiCond579
          CFI EndBlock cfiCond580
          CFI EndBlock cfiCond581
          CFI EndBlock cfiCond582
          CFI EndBlock cfiCond583
          CFI EndBlock cfiCond584
          CFI EndBlock cfiPicker585
        REQUIRE ?Subroutine96
        ;               // Fall through to label ?Subroutine96

        RSEG CODE:CODE:NOROOT(1)
?Subroutine96:
          CFI Block cfiCond586 Using cfiCommon0
          CFI Function ??functionReportVisitorsTotal
          CFI Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_22
          CFI CFA_SP SP+6
          CFI Block cfiCond587 Using cfiCommon0
          CFI (cfiCond587) Function ??functionReportVisitorsTotal
          CFI (cfiCond587) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_23
          CFI (cfiCond587) CFA_SP SP+6
          CFI Block cfiCond588 Using cfiCommon0
          CFI (cfiCond588) Function ??functionMenu
          CFI (cfiCond588) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond588) R26 Frame(CFA_Y, -2)
          CFI (cfiCond588) R27 Frame(CFA_Y, -1)
          CFI (cfiCond588) CFA_SP SP+4
          CFI (cfiCond588) CFA_Y Y+2
          CFI Block cfiCond589 Using cfiCommon0
          CFI (cfiCond589) Function ??functionSafeBattRemove
          CFI (cfiCond589) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond589) CFA_SP SP+4
          CFI Block cfiCond590 Using cfiCommon0
          CFI (cfiCond590) Function ??functionSafeBattRemove
          CFI (cfiCond590) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond590) CFA_SP SP+4
          CFI Block cfiCond591 Using cfiCommon0
          CFI (cfiCond591) Function ??functionSetupDetectionTime
          CFI (cfiCond591) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond591) CFA_SP SP+4
          CFI Block cfiCond592 Using cfiCommon0
          CFI (cfiCond592) Function ??functionSetupInactivityTime
          CFI (cfiCond592) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond592) CFA_SP SP+4
          CFI Block cfiCond593 Using cfiCommon0
          CFI (cfiCond593) Function ??functionSetupWorkWeek
          CFI (cfiCond593) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond593) R26 Frame(CFA_Y, -2)
          CFI (cfiCond593) R27 Frame(CFA_Y, -1)
          CFI (cfiCond593) CFA_SP SP+4
          CFI (cfiCond593) CFA_Y Y+2
          CFI Block cfiCond594 Using cfiCommon0
          CFI (cfiCond594) Function ??functionSetCheckPassword
          CFI (cfiCond594) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond594) R24 Frame(CFA_Y, -4)
          CFI (cfiCond594) R25 Frame(CFA_Y, -3)
          CFI (cfiCond594) R26 Frame(CFA_Y, -2)
          CFI (cfiCond594) R27 Frame(CFA_Y, -1)
          CFI (cfiCond594) CFA_SP SP+4
          CFI (cfiCond594) CFA_Y Y+4
          CFI Block cfiCond595 Using cfiCommon0
          CFI (cfiCond595) Function ??functionBatteryVoltage
          CFI (cfiCond595) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond595) R24 Frame(CFA_Y, -2)
          CFI (cfiCond595) R25 Frame(CFA_Y, -1)
          CFI (cfiCond595) CFA_SP SP+4
          CFI (cfiCond595) CFA_Y Y+2
          CFI Block cfiCond596 Using cfiCommon0
          CFI (cfiCond596) Function ??functionSerialNumber
          CFI (cfiCond596) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond596) R26 Frame(CFA_Y, -2)
          CFI (cfiCond596) R27 Frame(CFA_Y, -1)
          CFI (cfiCond596) CFA_SP SP+4
          CFI (cfiCond596) CFA_Y Y+2
          CFI Block cfiCond597 Using cfiCommon0
          CFI (cfiCond597) Function ??functionResetNum
          CFI (cfiCond597) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond597) R24 Frame(CFA_Y, -5)
          CFI (cfiCond597) R25 Frame(CFA_Y, -4)
          CFI (cfiCond597) R26 Frame(CFA_Y, -3)
          CFI (cfiCond597) R27 Frame(CFA_Y, -2)
          CFI (cfiCond597) R4 Frame(CFA_Y, -1)
          CFI (cfiCond597) CFA_SP SP+4
          CFI (cfiCond597) CFA_Y Y+5
          CFI Block cfiCond598 Using cfiCommon0
          CFI (cfiCond598) Function ??functionIncorrectFunction
          CFI (cfiCond598) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond598) CFA_SP SP+4
          CFI (cfiCond598) CFA_Y Y+20
          CFI Block cfiCond599 Using cfiCommon0
          CFI (cfiCond599) Function ??functionReports
          CFI (cfiCond599) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond599) R24 Frame(CFA_Y, -3)
          CFI (cfiCond599) R26 Frame(CFA_Y, -2)
          CFI (cfiCond599) R27 Frame(CFA_Y, -1)
          CFI (cfiCond599) CFA_SP SP+4
          CFI (cfiCond599) CFA_Y Y+13
          CFI Block cfiPicker600 Using cfiCommon1
          CFI (cfiPicker600) NoFunction
          CFI (cfiPicker600) Picker
        LDI     R16, 0
          CFI EndBlock cfiCond586
          CFI EndBlock cfiCond587
          CFI EndBlock cfiCond588
          CFI EndBlock cfiCond589
          CFI EndBlock cfiCond590
          CFI EndBlock cfiCond591
          CFI EndBlock cfiCond592
          CFI EndBlock cfiCond593
          CFI EndBlock cfiCond594
          CFI EndBlock cfiCond595
          CFI EndBlock cfiCond596
          CFI EndBlock cfiCond597
          CFI EndBlock cfiCond598
          CFI EndBlock cfiCond599
          CFI EndBlock cfiPicker600
        REQUIRE ?Subroutine119
        ;               // Fall through to label ?Subroutine119

        RSEG CODE:CODE:NOROOT(1)
?Subroutine119:
          CFI Block cfiCond601 Using cfiCommon0
          CFI Function ??functionReportVisitorsTotal
          CFI Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_20
          CFI CFA_SP SP+8
          CFI Block cfiCond602 Using cfiCommon0
          CFI (cfiCond602) Function ??functionReports
          CFI (cfiCond602) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_183, ??CrossCallReturnLabel_21
          CFI (cfiCond602) R24 Frame(CFA_Y, -3)
          CFI (cfiCond602) R26 Frame(CFA_Y, -2)
          CFI (cfiCond602) R27 Frame(CFA_Y, -1)
          CFI (cfiCond602) CFA_SP SP+8
          CFI (cfiCond602) CFA_Y Y+13
          CFI Block cfiCond603 Using cfiCommon0
          CFI (cfiCond603) Function ??functionReports
          CFI (cfiCond603) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_18
          CFI (cfiCond603) R24 Frame(CFA_Y, -3)
          CFI (cfiCond603) R26 Frame(CFA_Y, -2)
          CFI (cfiCond603) R27 Frame(CFA_Y, -1)
          CFI (cfiCond603) CFA_SP SP+8
          CFI (cfiCond603) CFA_Y Y+13
          CFI Block cfiCond604 Using cfiCommon0
          CFI (cfiCond604) Function ??functionReports
          CFI (cfiCond604) Conditional ??CrossCallReturnLabel_376, ??CrossCallReturnLabel_184, ??CrossCallReturnLabel_19
          CFI (cfiCond604) R24 Frame(CFA_Y, -3)
          CFI (cfiCond604) R26 Frame(CFA_Y, -2)
          CFI (cfiCond604) R27 Frame(CFA_Y, -1)
          CFI (cfiCond604) CFA_SP SP+8
          CFI (cfiCond604) CFA_Y Y+13
          CFI Block cfiCond605 Using cfiCommon0
          CFI (cfiCond605) Function ??displayDoneMessage
          CFI (cfiCond605) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_309
          CFI (cfiCond605) CFA_SP SP+6
          CFI Block cfiCond606 Using cfiCommon0
          CFI (cfiCond606) Function ??displayErrorMessage
          CFI (cfiCond606) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_310
          CFI (cfiCond606) CFA_SP SP+6
          CFI Block cfiCond607 Using cfiCommon0
          CFI (cfiCond607) Function ??functionIncorrectFunction
          CFI (cfiCond607) Conditional ??CrossCallReturnLabel_374, ??CrossCallReturnLabel_311
          CFI (cfiCond607) CFA_SP SP+6
          CFI (cfiCond607) CFA_Y Y+20
          CFI Block cfiCond608 Using cfiCommon0
          CFI (cfiCond608) Function ??functionSetupWorkDay
          CFI (cfiCond608) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_33
          CFI (cfiCond608) R24 Frame(CFA_Y, -4)
          CFI (cfiCond608) R25 Frame(CFA_Y, -3)
          CFI (cfiCond608) R26 Frame(CFA_Y, -2)
          CFI (cfiCond608) R27 Frame(CFA_Y, -1)
          CFI (cfiCond608) CFA_SP SP+6
          CFI (cfiCond608) CFA_Y Y+4
          CFI Block cfiCond609 Using cfiCommon0
          CFI (cfiCond609) Function ??functionSetupWorkDay
          CFI (cfiCond609) Conditional ??CrossCallReturnLabel_375, ??CrossCallReturnLabel_34
          CFI (cfiCond609) R24 Frame(CFA_Y, -4)
          CFI (cfiCond609) R25 Frame(CFA_Y, -3)
          CFI (cfiCond609) R26 Frame(CFA_Y, -2)
          CFI (cfiCond609) R27 Frame(CFA_Y, -1)
          CFI (cfiCond609) CFA_SP SP+6
          CFI (cfiCond609) CFA_Y Y+4
          CFI Block cfiCond610 Using cfiCommon0
          CFI (cfiCond610) Function ??functionReports
          CFI (cfiCond610) Conditional ??CrossCallReturnLabel_358
          CFI (cfiCond610) R24 Frame(CFA_Y, -3)
          CFI (cfiCond610) R26 Frame(CFA_Y, -2)
          CFI (cfiCond610) R27 Frame(CFA_Y, -1)
          CFI (cfiCond610) CFA_SP SP+4
          CFI (cfiCond610) CFA_Y Y+13
          CFI Block cfiCond611 Using cfiCommon0
          CFI (cfiCond611) Function ??functionSetupDetectionTime
          CFI (cfiCond611) Conditional ??CrossCallReturnLabel_359
          CFI (cfiCond611) CFA_SP SP+4
          CFI Block cfiCond612 Using cfiCommon0
          CFI (cfiCond612) Function ??functionSetupInactivityTime
          CFI (cfiCond612) Conditional ??CrossCallReturnLabel_360
          CFI (cfiCond612) CFA_SP SP+4
          CFI Block cfiCond613 Using cfiCommon0
          CFI (cfiCond613) Function ??functionMenu
          CFI (cfiCond613) Conditional ??CrossCallReturnLabel_356
          CFI (cfiCond613) R26 Frame(CFA_Y, -2)
          CFI (cfiCond613) R27 Frame(CFA_Y, -1)
          CFI (cfiCond613) CFA_SP SP+4
          CFI (cfiCond613) CFA_Y Y+2
          CFI Block cfiCond614 Using cfiCommon0
          CFI (cfiCond614) Function ??functionReports
          CFI (cfiCond614) Conditional ??CrossCallReturnLabel_357
          CFI (cfiCond614) R24 Frame(CFA_Y, -3)
          CFI (cfiCond614) R26 Frame(CFA_Y, -2)
          CFI (cfiCond614) R27 Frame(CFA_Y, -1)
          CFI (cfiCond614) CFA_SP SP+4
          CFI (cfiCond614) CFA_Y Y+13
          CFI Block cfiCond615 Using cfiCommon0
          CFI (cfiCond615) Function ??functionReportVisitorsTotal
          CFI (cfiCond615) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_22
          CFI (cfiCond615) CFA_SP SP+6
          CFI Block cfiCond616 Using cfiCommon0
          CFI (cfiCond616) Function ??functionReportVisitorsTotal
          CFI (cfiCond616) Conditional ??CrossCallReturnLabel_361, ??CrossCallReturnLabel_23
          CFI (cfiCond616) CFA_SP SP+6
          CFI Block cfiCond617 Using cfiCommon0
          CFI (cfiCond617) Function ??functionMenu
          CFI (cfiCond617) Conditional ??CrossCallReturnLabel_362
          CFI (cfiCond617) R26 Frame(CFA_Y, -2)
          CFI (cfiCond617) R27 Frame(CFA_Y, -1)
          CFI (cfiCond617) CFA_SP SP+4
          CFI (cfiCond617) CFA_Y Y+2
          CFI Block cfiCond618 Using cfiCommon0
          CFI (cfiCond618) Function ??functionSafeBattRemove
          CFI (cfiCond618) Conditional ??CrossCallReturnLabel_363
          CFI (cfiCond618) CFA_SP SP+4
          CFI Block cfiCond619 Using cfiCommon0
          CFI (cfiCond619) Function ??functionSafeBattRemove
          CFI (cfiCond619) Conditional ??CrossCallReturnLabel_364
          CFI (cfiCond619) CFA_SP SP+4
          CFI Block cfiCond620 Using cfiCommon0
          CFI (cfiCond620) Function ??functionSetupDetectionTime
          CFI (cfiCond620) Conditional ??CrossCallReturnLabel_365
          CFI (cfiCond620) CFA_SP SP+4
          CFI Block cfiCond621 Using cfiCommon0
          CFI (cfiCond621) Function ??functionSetupInactivityTime
          CFI (cfiCond621) Conditional ??CrossCallReturnLabel_366
          CFI (cfiCond621) CFA_SP SP+4
          CFI Block cfiCond622 Using cfiCommon0
          CFI (cfiCond622) Function ??functionSetupWorkWeek
          CFI (cfiCond622) Conditional ??CrossCallReturnLabel_367
          CFI (cfiCond622) R26 Frame(CFA_Y, -2)
          CFI (cfiCond622) R27 Frame(CFA_Y, -1)
          CFI (cfiCond622) CFA_SP SP+4
          CFI (cfiCond622) CFA_Y Y+2
          CFI Block cfiCond623 Using cfiCommon0
          CFI (cfiCond623) Function ??functionSetCheckPassword
          CFI (cfiCond623) Conditional ??CrossCallReturnLabel_368
          CFI (cfiCond623) R24 Frame(CFA_Y, -4)
          CFI (cfiCond623) R25 Frame(CFA_Y, -3)
          CFI (cfiCond623) R26 Frame(CFA_Y, -2)
          CFI (cfiCond623) R27 Frame(CFA_Y, -1)
          CFI (cfiCond623) CFA_SP SP+4
          CFI (cfiCond623) CFA_Y Y+4
          CFI Block cfiCond624 Using cfiCommon0
          CFI (cfiCond624) Function ??functionBatteryVoltage
          CFI (cfiCond624) Conditional ??CrossCallReturnLabel_369
          CFI (cfiCond624) R24 Frame(CFA_Y, -2)
          CFI (cfiCond624) R25 Frame(CFA_Y, -1)
          CFI (cfiCond624) CFA_SP SP+4
          CFI (cfiCond624) CFA_Y Y+2
          CFI Block cfiCond625 Using cfiCommon0
          CFI (cfiCond625) Function ??functionSerialNumber
          CFI (cfiCond625) Conditional ??CrossCallReturnLabel_370
          CFI (cfiCond625) R26 Frame(CFA_Y, -2)
          CFI (cfiCond625) R27 Frame(CFA_Y, -1)
          CFI (cfiCond625) CFA_SP SP+4
          CFI (cfiCond625) CFA_Y Y+2
          CFI Block cfiCond626 Using cfiCommon0
          CFI (cfiCond626) Function ??functionResetNum
          CFI (cfiCond626) Conditional ??CrossCallReturnLabel_371
          CFI (cfiCond626) R24 Frame(CFA_Y, -5)
          CFI (cfiCond626) R25 Frame(CFA_Y, -4)
          CFI (cfiCond626) R26 Frame(CFA_Y, -3)
          CFI (cfiCond626) R27 Frame(CFA_Y, -2)
          CFI (cfiCond626) R4 Frame(CFA_Y, -1)
          CFI (cfiCond626) CFA_SP SP+4
          CFI (cfiCond626) CFA_Y Y+5
          CFI Block cfiCond627 Using cfiCommon0
          CFI (cfiCond627) Function ??functionIncorrectFunction
          CFI (cfiCond627) Conditional ??CrossCallReturnLabel_372
          CFI (cfiCond627) CFA_SP SP+4
          CFI (cfiCond627) CFA_Y Y+20
          CFI Block cfiCond628 Using cfiCommon0
          CFI (cfiCond628) Function ??functionReports
          CFI (cfiCond628) Conditional ??CrossCallReturnLabel_373
          CFI (cfiCond628) R24 Frame(CFA_Y, -3)
          CFI (cfiCond628) R26 Frame(CFA_Y, -2)
          CFI (cfiCond628) R27 Frame(CFA_Y, -1)
          CFI (cfiCond628) CFA_SP SP+4
          CFI (cfiCond628) CFA_Y Y+13
          CFI Block cfiPicker629 Using cfiCommon1
          CFI (cfiPicker629) NoFunction
          CFI (cfiPicker629) Picker
        JMP     ??str2Buf
          CFI EndBlock cfiCond601
          CFI EndBlock cfiCond602
          CFI EndBlock cfiCond603
          CFI EndBlock cfiCond604
          CFI EndBlock cfiCond605
          CFI EndBlock cfiCond606
          CFI EndBlock cfiCond607
          CFI EndBlock cfiCond608
          CFI EndBlock cfiCond609
          CFI EndBlock cfiCond610
          CFI EndBlock cfiCond611
          CFI EndBlock cfiCond612
          CFI EndBlock cfiCond613
          CFI EndBlock cfiCond614
          CFI EndBlock cfiCond615
          CFI EndBlock cfiCond616
          CFI EndBlock cfiCond617
          CFI EndBlock cfiCond618
          CFI EndBlock cfiCond619
          CFI EndBlock cfiCond620
          CFI EndBlock cfiCond621
          CFI EndBlock cfiCond622
          CFI EndBlock cfiCond623
          CFI EndBlock cfiCond624
          CFI EndBlock cfiCond625
          CFI EndBlock cfiCond626
          CFI EndBlock cfiCond627
          CFI EndBlock cfiCond628
          CFI EndBlock cfiPicker629

        RSEG CODE:CODE:NOROOT(1)
?Subroutine86:
          CFI Block cfiCond630 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_4
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+6
          CFI CFA_Y Y+2
          CFI Block cfiCond631 Using cfiCommon0
          CFI (cfiCond631) Function ??functionMenu
          CFI (cfiCond631) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_5
          CFI (cfiCond631) R26 Frame(CFA_Y, -2)
          CFI (cfiCond631) R27 Frame(CFA_Y, -1)
          CFI (cfiCond631) CFA_SP SP+6
          CFI (cfiCond631) CFA_Y Y+2
          CFI Block cfiCond632 Using cfiCommon0
          CFI (cfiCond632) Function ??functionMenu
          CFI (cfiCond632) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_6
          CFI (cfiCond632) R26 Frame(CFA_Y, -2)
          CFI (cfiCond632) R27 Frame(CFA_Y, -1)
          CFI (cfiCond632) CFA_SP SP+6
          CFI (cfiCond632) CFA_Y Y+2
          CFI Block cfiCond633 Using cfiCommon0
          CFI (cfiCond633) Function ??functionSetupDetectionTime
          CFI (cfiCond633) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond633) CFA_SP SP+4
          CFI Block cfiCond634 Using cfiCommon0
          CFI (cfiCond634) Function ??functionSetupInactivityTime
          CFI (cfiCond634) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond634) CFA_SP SP+4
          CFI Block cfiPicker635 Using cfiCommon1
          CFI (cfiPicker635) NoFunction
          CFI (cfiPicker635) Picker
        RCALL   ?Subroutine120
          CFI EndBlock cfiCond630
          CFI EndBlock cfiCond631
          CFI EndBlock cfiCond632
          CFI EndBlock cfiCond633
          CFI EndBlock cfiCond634
          CFI EndBlock cfiPicker635
??CrossCallReturnLabel_284:
        REQUIRE ?Subroutine121
        ;               // Fall through to label ?Subroutine121

        RSEG CODE:CODE:NOROOT(1)
?Subroutine121:
          CFI Block cfiCond636 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_35
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+6
          CFI CFA_Y Y+13
          CFI Block cfiCond637 Using cfiCommon0
          CFI (cfiCond637) Function ??functionReports
          CFI (cfiCond637) Conditional ??CrossCallReturnLabel_287, ??CrossCallReturnLabel_36
          CFI (cfiCond637) R24 Frame(CFA_Y, -3)
          CFI (cfiCond637) R26 Frame(CFA_Y, -2)
          CFI (cfiCond637) R27 Frame(CFA_Y, -1)
          CFI (cfiCond637) CFA_SP SP+6
          CFI (cfiCond637) CFA_Y Y+13
          CFI Block cfiCond638 Using cfiCommon0
          CFI (cfiCond638) Function ??functionSafeBattRemove
          CFI (cfiCond638) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_105
          CFI (cfiCond638) CFA_SP SP+6
          CFI Block cfiCond639 Using cfiCommon0
          CFI (cfiCond639) Function ??functionSafeBattRemove
          CFI (cfiCond639) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_106
          CFI (cfiCond639) CFA_SP SP+6
          CFI Block cfiCond640 Using cfiCommon0
          CFI (cfiCond640) Function ??functionSetupSummerTimeMenu
          CFI (cfiCond640) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_107
          CFI (cfiCond640) CFA_SP SP+6
          CFI Block cfiCond641 Using cfiCommon0
          CFI (cfiCond641) Function ??functionSetupDetectorMenu
          CFI (cfiCond641) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_108
          CFI (cfiCond641) CFA_SP SP+6
          CFI Block cfiCond642 Using cfiCommon0
          CFI (cfiCond642) Function ??functionSetupInventCntMenu
          CFI (cfiCond642) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_109
          CFI (cfiCond642) CFA_SP SP+6
          CFI Block cfiCond643 Using cfiCommon0
          CFI (cfiCond643) Function ??functionSetupSaveModeMenu
          CFI (cfiCond643) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_110
          CFI (cfiCond643) CFA_SP SP+6
          CFI Block cfiCond644 Using cfiCommon0
          CFI (cfiCond644) Function ??functionSetupWorkTodayMenu
          CFI (cfiCond644) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_111
          CFI (cfiCond644) CFA_SP SP+6
          CFI Block cfiCond645 Using cfiCommon0
          CFI (cfiCond645) Function ??functionSetupWorkDayMenu
          CFI (cfiCond645) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_112
          CFI (cfiCond645) CFA_SP SP+6
          CFI Block cfiCond646 Using cfiCommon0
          CFI (cfiCond646) Function ??functionSetupBacklightMenu
          CFI (cfiCond646) Conditional ??CrossCallReturnLabel_288, ??CrossCallReturnLabel_113
          CFI (cfiCond646) CFA_SP SP+6
          CFI Block cfiCond647 Using cfiCommon0
          CFI (cfiCond647) Function ??functionSetupDetectionTime
          CFI (cfiCond647) Conditional ??CrossCallReturnLabel_286
          CFI (cfiCond647) CFA_SP SP+4
          CFI Block cfiCond648 Using cfiCommon0
          CFI (cfiCond648) Function ??functionReports
          CFI (cfiCond648) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_16
          CFI (cfiCond648) R24 Frame(CFA_Y, -3)
          CFI (cfiCond648) R26 Frame(CFA_Y, -2)
          CFI (cfiCond648) R27 Frame(CFA_Y, -1)
          CFI (cfiCond648) CFA_SP SP+8
          CFI (cfiCond648) CFA_Y Y+13
          CFI Block cfiCond649 Using cfiCommon0
          CFI (cfiCond649) Function ??functionReports
          CFI (cfiCond649) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_17
          CFI (cfiCond649) R24 Frame(CFA_Y, -3)
          CFI (cfiCond649) R26 Frame(CFA_Y, -2)
          CFI (cfiCond649) R27 Frame(CFA_Y, -1)
          CFI (cfiCond649) CFA_SP SP+8
          CFI (cfiCond649) CFA_Y Y+13
          CFI Block cfiCond650 Using cfiCommon0
          CFI (cfiCond650) Function ??functionReports
          CFI (cfiCond650) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_258
          CFI (cfiCond650) R24 Frame(CFA_Y, -3)
          CFI (cfiCond650) R26 Frame(CFA_Y, -2)
          CFI (cfiCond650) R27 Frame(CFA_Y, -1)
          CFI (cfiCond650) CFA_SP SP+6
          CFI (cfiCond650) CFA_Y Y+13
          CFI Block cfiCond651 Using cfiCommon0
          CFI (cfiCond651) Function ??functionSetupSummerTime
          CFI (cfiCond651) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_259
          CFI (cfiCond651) CFA_SP SP+6
          CFI Block cfiCond652 Using cfiCommon0
          CFI (cfiCond652) Function ??functionSetupDetector
          CFI (cfiCond652) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_260
          CFI (cfiCond652) CFA_SP SP+6
          CFI Block cfiCond653 Using cfiCommon0
          CFI (cfiCond653) Function ??functionSetupSaveMode
          CFI (cfiCond653) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_261
          CFI (cfiCond653) CFA_SP SP+6
          CFI Block cfiCond654 Using cfiCommon0
          CFI (cfiCond654) Function ??functionSetupWorkDay
          CFI (cfiCond654) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_262
          CFI (cfiCond654) R24 Frame(CFA_Y, -4)
          CFI (cfiCond654) R25 Frame(CFA_Y, -3)
          CFI (cfiCond654) R26 Frame(CFA_Y, -2)
          CFI (cfiCond654) R27 Frame(CFA_Y, -1)
          CFI (cfiCond654) CFA_SP SP+6
          CFI (cfiCond654) CFA_Y Y+4
          CFI Block cfiCond655 Using cfiCommon0
          CFI (cfiCond655) Function ??functionSetupDetectionTime
          CFI (cfiCond655) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_263
          CFI (cfiCond655) CFA_SP SP+6
          CFI Block cfiCond656 Using cfiCommon0
          CFI (cfiCond656) Function ??functionSetupInactivityTime
          CFI (cfiCond656) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_264
          CFI (cfiCond656) CFA_SP SP+6
          CFI Block cfiCond657 Using cfiCommon0
          CFI (cfiCond657) Function ??functionReports
          CFI (cfiCond657) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_7
          CFI (cfiCond657) R24 Frame(CFA_Y, -3)
          CFI (cfiCond657) R26 Frame(CFA_Y, -2)
          CFI (cfiCond657) R27 Frame(CFA_Y, -1)
          CFI (cfiCond657) CFA_SP SP+8
          CFI (cfiCond657) CFA_Y Y+13
          CFI Block cfiCond658 Using cfiCommon0
          CFI (cfiCond658) Function ??functionReports
          CFI (cfiCond658) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_8
          CFI (cfiCond658) R24 Frame(CFA_Y, -3)
          CFI (cfiCond658) R26 Frame(CFA_Y, -2)
          CFI (cfiCond658) R27 Frame(CFA_Y, -1)
          CFI (cfiCond658) CFA_SP SP+8
          CFI (cfiCond658) CFA_Y Y+13
          CFI Block cfiCond659 Using cfiCommon0
          CFI (cfiCond659) Function ??functionReset
          CFI (cfiCond659) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_9
          CFI (cfiCond659) CFA_SP SP+8
          CFI Block cfiCond660 Using cfiCommon0
          CFI (cfiCond660) Function ??functionSafeBattRemove
          CFI (cfiCond660) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_177
          CFI (cfiCond660) CFA_SP SP+8
          CFI Block cfiCond661 Using cfiCommon0
          CFI (cfiCond661) Function ??functionSetupWorkToday
          CFI (cfiCond661) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_178
          CFI (cfiCond661) CFA_SP SP+8
          CFI Block cfiCond662 Using cfiCommon0
          CFI (cfiCond662) Function ??functionSetCheckPassword
          CFI (cfiCond662) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_179
          CFI (cfiCond662) R24 Frame(CFA_Y, -4)
          CFI (cfiCond662) R25 Frame(CFA_Y, -3)
          CFI (cfiCond662) R26 Frame(CFA_Y, -2)
          CFI (cfiCond662) R27 Frame(CFA_Y, -1)
          CFI (cfiCond662) CFA_SP SP+8
          CFI (cfiCond662) CFA_Y Y+4
          CFI Block cfiCond663 Using cfiCommon0
          CFI (cfiCond663) Function ??functionSetCheckPassword
          CFI (cfiCond663) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_180
          CFI (cfiCond663) R24 Frame(CFA_Y, -4)
          CFI (cfiCond663) R25 Frame(CFA_Y, -3)
          CFI (cfiCond663) R26 Frame(CFA_Y, -2)
          CFI (cfiCond663) R27 Frame(CFA_Y, -1)
          CFI (cfiCond663) CFA_SP SP+8
          CFI (cfiCond663) CFA_Y Y+4
          CFI Block cfiCond664 Using cfiCommon0
          CFI (cfiCond664) Function ??functionResetNum
          CFI (cfiCond664) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_181
          CFI (cfiCond664) R24 Frame(CFA_Y, -5)
          CFI (cfiCond664) R25 Frame(CFA_Y, -4)
          CFI (cfiCond664) R26 Frame(CFA_Y, -3)
          CFI (cfiCond664) R27 Frame(CFA_Y, -2)
          CFI (cfiCond664) R4 Frame(CFA_Y, -1)
          CFI (cfiCond664) CFA_SP SP+8
          CFI (cfiCond664) CFA_Y Y+5
          CFI Block cfiCond665 Using cfiCommon0
          CFI (cfiCond665) Function ??functionSetupInventCnt
          CFI (cfiCond665) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_10
          CFI (cfiCond665) CFA_SP SP+10
          CFI Block cfiCond666 Using cfiCommon0
          CFI (cfiCond666) Function ??functionSetupBacklight
          CFI (cfiCond666) Conditional ??CrossCallReturnLabel_292, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_11
          CFI (cfiCond666) CFA_SP SP+10
          CFI Block cfiCond667 Using cfiCommon0
          CFI (cfiCond667) Function ??functionMenu
          CFI (cfiCond667) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_4
          CFI (cfiCond667) R26 Frame(CFA_Y, -2)
          CFI (cfiCond667) R27 Frame(CFA_Y, -1)
          CFI (cfiCond667) CFA_SP SP+6
          CFI (cfiCond667) CFA_Y Y+2
          CFI Block cfiCond668 Using cfiCommon0
          CFI (cfiCond668) Function ??functionMenu
          CFI (cfiCond668) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_5
          CFI (cfiCond668) R26 Frame(CFA_Y, -2)
          CFI (cfiCond668) R27 Frame(CFA_Y, -1)
          CFI (cfiCond668) CFA_SP SP+6
          CFI (cfiCond668) CFA_Y Y+2
          CFI Block cfiCond669 Using cfiCommon0
          CFI (cfiCond669) Function ??functionMenu
          CFI (cfiCond669) Conditional ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_6
          CFI (cfiCond669) R26 Frame(CFA_Y, -2)
          CFI (cfiCond669) R27 Frame(CFA_Y, -1)
          CFI (cfiCond669) CFA_SP SP+6
          CFI (cfiCond669) CFA_Y Y+2
          CFI Block cfiCond670 Using cfiCommon0
          CFI (cfiCond670) Function ??functionSetupDetectionTime
          CFI (cfiCond670) Conditional ??CrossCallReturnLabel_289
          CFI (cfiCond670) CFA_SP SP+4
          CFI Block cfiCond671 Using cfiCommon0
          CFI (cfiCond671) Function ??functionSetupInactivityTime
          CFI (cfiCond671) Conditional ??CrossCallReturnLabel_290
          CFI (cfiCond671) CFA_SP SP+4
          CFI Block cfiPicker672 Using cfiCommon1
          CFI (cfiPicker672) NoFunction
          CFI (cfiPicker672) Picker
        MOVW    R31:R30, R1:R0
        SUBI    R30, LOW((-(??menuStack) & 0xFFFF))
        SBCI    R31, (-(??menuStack) & 0xFFFF) >> 8
        RET
          CFI EndBlock cfiCond636
          CFI EndBlock cfiCond637
          CFI EndBlock cfiCond638
          CFI EndBlock cfiCond639
          CFI EndBlock cfiCond640
          CFI EndBlock cfiCond641
          CFI EndBlock cfiCond642
          CFI EndBlock cfiCond643
          CFI EndBlock cfiCond644
          CFI EndBlock cfiCond645
          CFI EndBlock cfiCond646
          CFI EndBlock cfiCond647
          CFI EndBlock cfiCond648
          CFI EndBlock cfiCond649
          CFI EndBlock cfiCond650
          CFI EndBlock cfiCond651
          CFI EndBlock cfiCond652
          CFI EndBlock cfiCond653
          CFI EndBlock cfiCond654
          CFI EndBlock cfiCond655
          CFI EndBlock cfiCond656
          CFI EndBlock cfiCond657
          CFI EndBlock cfiCond658
          CFI EndBlock cfiCond659
          CFI EndBlock cfiCond660
          CFI EndBlock cfiCond661
          CFI EndBlock cfiCond662
          CFI EndBlock cfiCond663
          CFI EndBlock cfiCond664
          CFI EndBlock cfiCond665
          CFI EndBlock cfiCond666
          CFI EndBlock cfiCond667
          CFI EndBlock cfiCond668
          CFI EndBlock cfiCond669
          CFI EndBlock cfiCond670
          CFI EndBlock cfiCond671
          CFI EndBlock cfiPicker672

        RSEG CODE:CODE:NOROOT(1)
?Subroutine2:
          CFI Block cfiCond673 Using cfiCommon0
          CFI Function ??functionSetupDetectionTime
          CFI Conditional ??CrossCallReturnLabel_0
          CFI CFA_SP SP+4
          CFI Block cfiCond674 Using cfiCommon0
          CFI (cfiCond674) Function ??functionSetupDetectionTime
          CFI (cfiCond674) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond674) CFA_SP SP+4
          CFI Block cfiCond675 Using cfiCommon0
          CFI (cfiCond675) Function ??functionSetupInactivityTime
          CFI (cfiCond675) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond675) CFA_SP SP+4
          CFI Block cfiCond676 Using cfiCommon0
          CFI (cfiCond676) Function ??functionSetupInactivityTime
          CFI (cfiCond676) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond676) CFA_SP SP+4
          CFI Block cfiPicker677 Using cfiCommon1
          CFI (cfiPicker677) NoFunction
          CFI (cfiPicker677) Picker
        RCALL   ?Subroutine120
??CrossCallReturnLabel_282:
        RCALL   ?Subroutine113
??CrossCallReturnLabel_257:
        LDD     R16, Z+4
        RET
          CFI EndBlock cfiCond673
          CFI EndBlock cfiCond674
          CFI EndBlock cfiCond675
          CFI EndBlock cfiCond676
          CFI EndBlock cfiPicker677

        RSEG CODE:CODE:NOROOT(1)
?Subroutine120:
          CFI Block cfiCond678 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_16
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+8
          CFI CFA_Y Y+13
          CFI Block cfiCond679 Using cfiCommon0
          CFI (cfiCond679) Function ??functionReports
          CFI (cfiCond679) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_266, ??CrossCallReturnLabel_17
          CFI (cfiCond679) R24 Frame(CFA_Y, -3)
          CFI (cfiCond679) R26 Frame(CFA_Y, -2)
          CFI (cfiCond679) R27 Frame(CFA_Y, -1)
          CFI (cfiCond679) CFA_SP SP+8
          CFI (cfiCond679) CFA_Y Y+13
          CFI Block cfiCond680 Using cfiCommon0
          CFI (cfiCond680) Function ??functionReports
          CFI (cfiCond680) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_258
          CFI (cfiCond680) R24 Frame(CFA_Y, -3)
          CFI (cfiCond680) R26 Frame(CFA_Y, -2)
          CFI (cfiCond680) R27 Frame(CFA_Y, -1)
          CFI (cfiCond680) CFA_SP SP+6
          CFI (cfiCond680) CFA_Y Y+13
          CFI Block cfiCond681 Using cfiCommon0
          CFI (cfiCond681) Function ??functionSetupSummerTime
          CFI (cfiCond681) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_259
          CFI (cfiCond681) CFA_SP SP+6
          CFI Block cfiCond682 Using cfiCommon0
          CFI (cfiCond682) Function ??functionSetupDetector
          CFI (cfiCond682) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_260
          CFI (cfiCond682) CFA_SP SP+6
          CFI Block cfiCond683 Using cfiCommon0
          CFI (cfiCond683) Function ??functionSetupSaveMode
          CFI (cfiCond683) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_261
          CFI (cfiCond683) CFA_SP SP+6
          CFI Block cfiCond684 Using cfiCommon0
          CFI (cfiCond684) Function ??functionSetupWorkDay
          CFI (cfiCond684) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_262
          CFI (cfiCond684) R24 Frame(CFA_Y, -4)
          CFI (cfiCond684) R25 Frame(CFA_Y, -3)
          CFI (cfiCond684) R26 Frame(CFA_Y, -2)
          CFI (cfiCond684) R27 Frame(CFA_Y, -1)
          CFI (cfiCond684) CFA_SP SP+6
          CFI (cfiCond684) CFA_Y Y+4
          CFI Block cfiCond685 Using cfiCommon0
          CFI (cfiCond685) Function ??functionSetupDetectionTime
          CFI (cfiCond685) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_263
          CFI (cfiCond685) CFA_SP SP+6
          CFI Block cfiCond686 Using cfiCommon0
          CFI (cfiCond686) Function ??functionSetupInactivityTime
          CFI (cfiCond686) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_264
          CFI (cfiCond686) CFA_SP SP+6
          CFI Block cfiCond687 Using cfiCommon0
          CFI (cfiCond687) Function ??functionReports
          CFI (cfiCond687) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_7
          CFI (cfiCond687) R24 Frame(CFA_Y, -3)
          CFI (cfiCond687) R26 Frame(CFA_Y, -2)
          CFI (cfiCond687) R27 Frame(CFA_Y, -1)
          CFI (cfiCond687) CFA_SP SP+8
          CFI (cfiCond687) CFA_Y Y+13
          CFI Block cfiCond688 Using cfiCommon0
          CFI (cfiCond688) Function ??functionReports
          CFI (cfiCond688) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_8
          CFI (cfiCond688) R24 Frame(CFA_Y, -3)
          CFI (cfiCond688) R26 Frame(CFA_Y, -2)
          CFI (cfiCond688) R27 Frame(CFA_Y, -1)
          CFI (cfiCond688) CFA_SP SP+8
          CFI (cfiCond688) CFA_Y Y+13
          CFI Block cfiCond689 Using cfiCommon0
          CFI (cfiCond689) Function ??functionReset
          CFI (cfiCond689) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_265, ??CrossCallReturnLabel_9
          CFI (cfiCond689) CFA_SP SP+8
          CFI Block cfiCond690 Using cfiCommon0
          CFI (cfiCond690) Function ??functionSafeBattRemove
          CFI (cfiCond690) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_177
          CFI (cfiCond690) CFA_SP SP+8
          CFI Block cfiCond691 Using cfiCommon0
          CFI (cfiCond691) Function ??functionSetupWorkToday
          CFI (cfiCond691) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_178
          CFI (cfiCond691) CFA_SP SP+8
          CFI Block cfiCond692 Using cfiCommon0
          CFI (cfiCond692) Function ??functionSetCheckPassword
          CFI (cfiCond692) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_179
          CFI (cfiCond692) R24 Frame(CFA_Y, -4)
          CFI (cfiCond692) R25 Frame(CFA_Y, -3)
          CFI (cfiCond692) R26 Frame(CFA_Y, -2)
          CFI (cfiCond692) R27 Frame(CFA_Y, -1)
          CFI (cfiCond692) CFA_SP SP+8
          CFI (cfiCond692) CFA_Y Y+4
          CFI Block cfiCond693 Using cfiCommon0
          CFI (cfiCond693) Function ??functionSetCheckPassword
          CFI (cfiCond693) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_180
          CFI (cfiCond693) R24 Frame(CFA_Y, -4)
          CFI (cfiCond693) R25 Frame(CFA_Y, -3)
          CFI (cfiCond693) R26 Frame(CFA_Y, -2)
          CFI (cfiCond693) R27 Frame(CFA_Y, -1)
          CFI (cfiCond693) CFA_SP SP+8
          CFI (cfiCond693) CFA_Y Y+4
          CFI Block cfiCond694 Using cfiCommon0
          CFI (cfiCond694) Function ??functionResetNum
          CFI (cfiCond694) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_181
          CFI (cfiCond694) R24 Frame(CFA_Y, -5)
          CFI (cfiCond694) R25 Frame(CFA_Y, -4)
          CFI (cfiCond694) R26 Frame(CFA_Y, -3)
          CFI (cfiCond694) R27 Frame(CFA_Y, -2)
          CFI (cfiCond694) R4 Frame(CFA_Y, -1)
          CFI (cfiCond694) CFA_SP SP+8
          CFI (cfiCond694) CFA_Y Y+5
          CFI Block cfiCond695 Using cfiCommon0
          CFI (cfiCond695) Function ??functionSetupInventCnt
          CFI (cfiCond695) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_10
          CFI (cfiCond695) CFA_SP SP+10
          CFI Block cfiCond696 Using cfiCommon0
          CFI (cfiCond696) Function ??functionSetupBacklight
          CFI (cfiCond696) Conditional ??CrossCallReturnLabel_285, ??CrossCallReturnLabel_267, ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_11
          CFI (cfiCond696) CFA_SP SP+10
          CFI Block cfiCond697 Using cfiCommon0
          CFI (cfiCond697) Function ??functionMenu
          CFI (cfiCond697) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_4
          CFI (cfiCond697) R26 Frame(CFA_Y, -2)
          CFI (cfiCond697) R27 Frame(CFA_Y, -1)
          CFI (cfiCond697) CFA_SP SP+8
          CFI (cfiCond697) CFA_Y Y+2
          CFI Block cfiCond698 Using cfiCommon0
          CFI (cfiCond698) Function ??functionMenu
          CFI (cfiCond698) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_5
          CFI (cfiCond698) R26 Frame(CFA_Y, -2)
          CFI (cfiCond698) R27 Frame(CFA_Y, -1)
          CFI (cfiCond698) CFA_SP SP+8
          CFI (cfiCond698) CFA_Y Y+2
          CFI Block cfiCond699 Using cfiCommon0
          CFI (cfiCond699) Function ??functionMenu
          CFI (cfiCond699) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_291, ??CrossCallReturnLabel_6
          CFI (cfiCond699) R26 Frame(CFA_Y, -2)
          CFI (cfiCond699) R27 Frame(CFA_Y, -1)
          CFI (cfiCond699) CFA_SP SP+8
          CFI (cfiCond699) CFA_Y Y+2
          CFI Block cfiCond700 Using cfiCommon0
          CFI (cfiCond700) Function ??functionSetupDetectionTime
          CFI (cfiCond700) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_289
          CFI (cfiCond700) CFA_SP SP+6
          CFI Block cfiCond701 Using cfiCommon0
          CFI (cfiCond701) Function ??functionSetupInactivityTime
          CFI (cfiCond701) Conditional ??CrossCallReturnLabel_284, ??CrossCallReturnLabel_290
          CFI (cfiCond701) CFA_SP SP+6
          CFI Block cfiCond702 Using cfiCommon0
          CFI (cfiCond702) Function ??functionMenu
          CFI (cfiCond702) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_189
          CFI (cfiCond702) R26 Frame(CFA_Y, -2)
          CFI (cfiCond702) R27 Frame(CFA_Y, -1)
          CFI (cfiCond702) CFA_SP SP+6
          CFI (cfiCond702) CFA_Y Y+2
          CFI Block cfiCond703 Using cfiCommon0
          CFI (cfiCond703) Function ??functionMenu
          CFI (cfiCond703) Conditional ??CrossCallReturnLabel_283, ??CrossCallReturnLabel_190
          CFI (cfiCond703) R26 Frame(CFA_Y, -2)
          CFI (cfiCond703) R27 Frame(CFA_Y, -1)
          CFI (cfiCond703) CFA_SP SP+6
          CFI (cfiCond703) CFA_Y Y+2
          CFI Block cfiCond704 Using cfiCommon0
          CFI (cfiCond704) Function ??functionSetupDetectionTime
          CFI (cfiCond704) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_0
          CFI (cfiCond704) CFA_SP SP+6
          CFI Block cfiCond705 Using cfiCommon0
          CFI (cfiCond705) Function ??functionSetupDetectionTime
          CFI (cfiCond705) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_1
          CFI (cfiCond705) CFA_SP SP+6
          CFI Block cfiCond706 Using cfiCommon0
          CFI (cfiCond706) Function ??functionSetupInactivityTime
          CFI (cfiCond706) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_2
          CFI (cfiCond706) CFA_SP SP+6
          CFI Block cfiCond707 Using cfiCommon0
          CFI (cfiCond707) Function ??functionSetupInactivityTime
          CFI (cfiCond707) Conditional ??CrossCallReturnLabel_282, ??CrossCallReturnLabel_3
          CFI (cfiCond707) CFA_SP SP+6
          CFI Block cfiCond708 Using cfiCommon0
          CFI (cfiCond708) Function ??run
          CFI (cfiCond708) Conditional ??CrossCallReturnLabel_281
          CFI (cfiCond708) CFA_SP SP+4
          CFI Block cfiPicker709 Using cfiCommon1
          CFI (cfiPicker709) NoFunction
          CFI (cfiPicker709) Picker
        LDS     R17, (??curStatisticRecord + 25)
        LDI     R16, 5
        MUL     R17, R16
        RET
          CFI EndBlock cfiCond678
          CFI EndBlock cfiCond679
          CFI EndBlock cfiCond680
          CFI EndBlock cfiCond681
          CFI EndBlock cfiCond682
          CFI EndBlock cfiCond683
          CFI EndBlock cfiCond684
          CFI EndBlock cfiCond685
          CFI EndBlock cfiCond686
          CFI EndBlock cfiCond687
          CFI EndBlock cfiCond688
          CFI EndBlock cfiCond689
          CFI EndBlock cfiCond690
          CFI EndBlock cfiCond691
          CFI EndBlock cfiCond692
          CFI EndBlock cfiCond693
          CFI EndBlock cfiCond694
          CFI EndBlock cfiCond695
          CFI EndBlock cfiCond696
          CFI EndBlock cfiCond697
          CFI EndBlock cfiCond698
          CFI EndBlock cfiCond699
          CFI EndBlock cfiCond700
          CFI EndBlock cfiCond701
          CFI EndBlock cfiCond702
          CFI EndBlock cfiCond703
          CFI EndBlock cfiCond704
          CFI EndBlock cfiCond705
          CFI EndBlock cfiCond706
          CFI EndBlock cfiCond707
          CFI EndBlock cfiCond708
          CFI EndBlock cfiPicker709
// 1114 

        RSEG CODE:CODE:NOROOT(1)
// 1115   void functionSetupWorkWeek()
??functionSetupWorkWeek:
          CFI Block cfiBlock710 Using cfiCommon0
          CFI Function ??functionSetupWorkWeek
// 1116   {
        FUNCALL ??functionSetupWorkWeek, ??popBuff
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkWeek, ??saveDeviceAdvancedSetup
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkWeek, ??displayDoneMessage
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkWeek, ??clearBuffer
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkWeek, ??getString
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkWeek, ??str2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWorkWeek, ??refreshDisplay
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine53
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+2
??CrossCallReturnLabel_100:
        BREQ    ??CrossCallReturnLabel_352
// 1117     unsigned char* curWorkDayPos = (unsigned char*)activeParmSpace;
// 1118     unsigned char* curWorkDayMask = (unsigned char*)(activeParmSpace + sizeof(unsigned char));
// 1119     unsigned char* curWorkWeekMask = (unsigned char*)(activeParmSpace + sizeof(unsigned char) + sizeof(unsigned char));
// 1120 
// 1121     if (activeFunctionChanged)
// 1122     {
// 1123       *curWorkDayPos = 0;
        LDI     R16, 0
        STS     ??activeParmSpace, R16
// 1124       *curWorkDayMask = 0x01;
        LDI     R16, 1
        STS     (??activeParmSpace + 1), R16
// 1125       *curWorkWeekMask = DeviceAdvancedSetup.workWeekMask;
        LDS     R16, (??DeviceAdvancedSetup + 3)
        STS     (??activeParmSpace + 2), R16
        RJMP    ??CrossCallReturnLabel_352
// 1126     }
// 1127 
// 1128     while (transitionKey)
// 1129     {
// 1130       switch (transitionKey)
// 1131       {
// 1132         case 1:
// 1133           if (*curWorkDayPos > 0)
// 1134           {
// 1135             (*curWorkDayPos)--;
// 1136             (*curWorkDayMask) >>= 1;
// 1137           }
// 1138           else
// 1139           {
// 1140             return;
// 1141           }
// 1142           break;
// 1143 
// 1144         case 4:
// 1145           (*curWorkDayPos)++;
// 1146           (*curWorkDayMask) <<= 1;
// 1147           if (*curWorkDayPos >= 7)
// 1148           {
// 1149             DeviceAdvancedSetup.workWeekMask = *curWorkWeekMask;
// 1150 
// 1151             DeviceManager::saveDeviceAdvancedSetup();
// 1152             displayDoneMessage();
// 1153             return;
// 1154           }
// 1155           break;
// 1156 
// 1157         case 2:
// 1158         case 3:
// 1159           *curWorkWeekMask ^= *curWorkDayMask;
// 1160           break;
// 1161       }
// 1162 
// 1163       getNextTransitionKey();
??functionSetupWorkWeek_1:
        RCALL   ?Subroutine34
??CrossCallReturnLabel_352:
        RCALL   ?Subroutine50
??CrossCallReturnLabel_93:
        BREQ    ??CrossCallReturnLabel_341
        DEC     R16
        BREQ    ??functionSetupWorkWeek_2
        DEC     R16
        BREQ    ??functionSetupWorkWeek_3
        DEC     R16
        BREQ    ??functionSetupWorkWeek_3
        DEC     R16
        BREQ    ??functionSetupWorkWeek_4
        RJMP    ??functionSetupWorkWeek_5
??functionSetupWorkWeek_2:
        RCALL   ?Subroutine109
??CrossCallReturnLabel_237:
        LD      R16, Z
        TST     R16
        BREQ    ??CrossCallReturnLabel_404
        DEC     R16
        ST      Z, R16
        LDD     R16, Z+1
        LSR     R16
        STD     Z+1, R16
        RJMP    ??functionSetupWorkWeek_5
??functionSetupWorkWeek_4:
        RCALL   ?Subroutine109
??CrossCallReturnLabel_238:
        LD      R16, Z
        INC     R16
        ST      Z, R16
        LDD     R16, Z+1
        LSL     R16
        STD     Z+1, R16
        LDS     R16, ??activeParmSpace
        CPI     R16, 7
        BRCS    ??functionSetupWorkWeek_5
        LDS     R16, (??activeParmSpace + 2)
        STS     (??DeviceAdvancedSetup + 3), R16
        RCALL   ?Subroutine112
??CrossCallReturnLabel_253:
        RCALL   ?Subroutine60
??CrossCallReturnLabel_129:
        RJMP    ??CrossCallReturnLabel_404
??functionSetupWorkWeek_3:
        RCALL   ?Subroutine109
??CrossCallReturnLabel_239:
        LDD     R16, Z+1
        LDD     R17, Z+2
        EOR     R17, R16
        STD     Z+2, R17
??functionSetupWorkWeek_5:
        RCALL   ?Subroutine33
// 1164     }
??CrossCallReturnLabel_330:
        BRNE    ??functionSetupWorkWeek_1
        RCALL   ??Subroutine132_0
// 1165 
// 1166     LCDDriver::clearBuffer();
??CrossCallReturnLabel_341:
        RCALL   ?Subroutine42
// 1167 
// 1168     LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_SETUP_ENERGYSAVING_WORKWEEK_MASK), LCDDriver::LCDTextIdentation_Center);
??CrossCallReturnLabel_68:
        LDI     R16, 43
        RCALL   ?Subroutine27
// 1169 
// 1170     unsigned char curMask = 0x01;
??CrossCallReturnLabel_367:
        LDI     R18, 1
// 1171     unsigned char curPos = 1;
// 1172     for (unsigned char i = 0; i < 7; i++)
        LDI     R26, LOW((??displayState + 1))
        LDI     R27, HIGH((??displayState + 1))
        LDI     R16, 7
// 1173     {
// 1174       LCDDriver::displayState.line[1][curPos] = ((*curWorkWeekMask) & curMask) ? '^' : LCD_DISPLAY_SYMBOL_SPACE;
??functionSetupWorkWeek_6:
        LDS     R17, (??activeParmSpace + 2)
        AND     R17, R18
        BREQ    ??functionSetupWorkWeek_7
        LDI     R17, 94
        RJMP    ??functionSetupWorkWeek_8
??functionSetupWorkWeek_7:
        LDI     R17, 32
??functionSetupWorkWeek_8:
        ADIW    R27:R26, 20
        ST      X, R17
        SBIW    R27:R26, 18
// 1175       curMask <<= 1;
        LSL     R18
// 1176       curPos += 2;
// 1177     }
        DEC     R16
        BRNE    ??functionSetupWorkWeek_6
// 1178 
// 1179     LCDDriver::refreshDisplay(
// 1180       LCDDriver::LCDDisplayMode_BlinkCursor,
// 1181       1,
// 1182       (*curWorkDayPos * 2) + 1);
        RCALL   ?Subroutine98
??CrossCallReturnLabel_304:
        LDS     R18, ??activeParmSpace
        LSL     R18
        INC     R18
        LDI     R17, 1
        LDI     R16, 13
        RCALL   ??Subroutine135_0
// 1183 
// 1184     isTransition = false;
// 1185   }
??CrossCallReturnLabel_404:
        RJMP    ?Subroutine58
          CFI EndBlock cfiBlock710

        RSEG CODE:CODE:NOROOT(1)
?Subroutine112:
          CFI Block cfiCond711 Using cfiCommon0
          CFI Function ??functionSetupInactivityTime
          CFI Conditional ??CrossCallReturnLabel_254
          CFI CFA_SP SP+4
          CFI Block cfiCond712 Using cfiCommon0
          CFI (cfiCond712) Function ??functionSetupWorkWeek
          CFI (cfiCond712) Conditional ??CrossCallReturnLabel_253
          CFI (cfiCond712) R26 Frame(CFA_Y, -2)
          CFI (cfiCond712) R27 Frame(CFA_Y, -1)
          CFI (cfiCond712) CFA_SP SP+4
          CFI (cfiCond712) CFA_Y Y+2
          CFI Block cfiCond713 Using cfiCommon0
          CFI (cfiCond713) Function ??functionSetupSaveMode
          CFI (cfiCond713) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_418
          CFI (cfiCond713) CFA_SP SP+6
          CFI Block cfiCond714 Using cfiCommon0
          CFI (cfiCond714) Function ??functionSetupWorkToday
          CFI (cfiCond714) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_417
          CFI (cfiCond714) CFA_SP SP+6
          CFI Block cfiCond715 Using cfiCommon0
          CFI (cfiCond715) Function ??setWorkDaySetup
          CFI (cfiCond715) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_416
          CFI (cfiCond715) R26 Frame(CFA_Y, -2)
          CFI (cfiCond715) R27 Frame(CFA_Y, -1)
          CFI (cfiCond715) CFA_SP SP+6
          CFI (cfiCond715) CFA_Y Y+2
          CFI Block cfiCond716 Using cfiCommon0
          CFI (cfiCond716) Function ??functionSetupBacklight
          CFI (cfiCond716) Conditional ??CrossCallReturnLabel_252, ??CrossCallReturnLabel_415
          CFI (cfiCond716) CFA_SP SP+6
          CFI Block cfiPicker717 Using cfiCommon1
          CFI (cfiPicker717) NoFunction
          CFI (cfiPicker717) Picker
        JMP     ??saveDeviceAdvancedSetup
          CFI EndBlock cfiCond711
          CFI EndBlock cfiCond712
          CFI EndBlock cfiCond713
          CFI EndBlock cfiCond714
          CFI EndBlock cfiCond715
          CFI EndBlock cfiCond716
          CFI EndBlock cfiPicker717

        RSEG CODE:CODE:NOROOT(1)
?Subroutine109:
          CFI Block cfiCond718 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_154
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+6
          CFI CFA_Y Y+13
          CFI Block cfiCond719 Using cfiCommon0
          CFI (cfiCond719) Function ??functionReports
          CFI (cfiCond719) Conditional ??CrossCallReturnLabel_244, ??CrossCallReturnLabel_155
          CFI (cfiCond719) R24 Frame(CFA_Y, -3)
          CFI (cfiCond719) R26 Frame(CFA_Y, -2)
          CFI (cfiCond719) R27 Frame(CFA_Y, -1)
          CFI (cfiCond719) CFA_SP SP+6
          CFI (cfiCond719) CFA_Y Y+13
          CFI Block cfiCond720 Using cfiCommon0
          CFI (cfiCond720) Function ??functionReports
          CFI (cfiCond720) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_230
          CFI (cfiCond720) R24 Frame(CFA_Y, -3)
          CFI (cfiCond720) R26 Frame(CFA_Y, -2)
          CFI (cfiCond720) R27 Frame(CFA_Y, -1)
          CFI (cfiCond720) CFA_SP SP+6
          CFI (cfiCond720) CFA_Y Y+13
          CFI Block cfiCond721 Using cfiCommon0
          CFI (cfiCond721) Function ??functionReports
          CFI (cfiCond721) Conditional ??CrossCallReturnLabel_243, ??CrossCallReturnLabel_231
          CFI (cfiCond721) R24 Frame(CFA_Y, -3)
          CFI (cfiCond721) R26 Frame(CFA_Y, -2)
          CFI (cfiCond721) R27 Frame(CFA_Y, -1)
          CFI (cfiCond721) CFA_SP SP+6
          CFI (cfiCond721) CFA_Y Y+13
          CFI Block cfiCond722 Using cfiCommon0
          CFI (cfiCond722) Function ??functionReports
          CFI (cfiCond722) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_152
          CFI (cfiCond722) R24 Frame(CFA_Y, -3)
          CFI (cfiCond722) R26 Frame(CFA_Y, -2)
          CFI (cfiCond722) R27 Frame(CFA_Y, -1)
          CFI (cfiCond722) CFA_SP SP+6
          CFI (cfiCond722) CFA_Y Y+13
          CFI Block cfiCond723 Using cfiCommon0
          CFI (cfiCond723) Function ??functionReports
          CFI (cfiCond723) Conditional ??CrossCallReturnLabel_242, ??CrossCallReturnLabel_153
          CFI (cfiCond723) R24 Frame(CFA_Y, -3)
          CFI (cfiCond723) R26 Frame(CFA_Y, -2)
          CFI (cfiCond723) R27 Frame(CFA_Y, -1)
          CFI (cfiCond723) CFA_SP SP+6
          CFI (cfiCond723) CFA_Y Y+13
          CFI Block cfiCond724 Using cfiCommon0
          CFI (cfiCond724) Function ??functionReports
          CFI (cfiCond724) Conditional ??CrossCallReturnLabel_232
          CFI (cfiCond724) R24 Frame(CFA_Y, -3)
          CFI (cfiCond724) R26 Frame(CFA_Y, -2)
          CFI (cfiCond724) R27 Frame(CFA_Y, -1)
          CFI (cfiCond724) CFA_SP SP+4
          CFI (cfiCond724) CFA_Y Y+13
          CFI Block cfiCond725 Using cfiCommon0
          CFI (cfiCond725) Function ??functionReports
          CFI (cfiCond725) Conditional ??CrossCallReturnLabel_233
          CFI (cfiCond725) R24 Frame(CFA_Y, -3)
          CFI (cfiCond725) R26 Frame(CFA_Y, -2)
          CFI (cfiCond725) R27 Frame(CFA_Y, -1)
          CFI (cfiCond725) CFA_SP SP+4
          CFI (cfiCond725) CFA_Y Y+13
          CFI Block cfiCond726 Using cfiCommon0
          CFI (cfiCond726) Function ??functionReports
          CFI (cfiCond726) Conditional ??CrossCallReturnLabel_234
          CFI (cfiCond726) R24 Frame(CFA_Y, -3)
          CFI (cfiCond726) R26 Frame(CFA_Y, -2)
          CFI (cfiCond726) R27 Frame(CFA_Y, -1)
          CFI (cfiCond726) CFA_SP SP+4
          CFI (cfiCond726) CFA_Y Y+13
          CFI Block cfiCond727 Using cfiCommon0
          CFI (cfiCond727) Function ??functionSetupWorkDay
          CFI (cfiCond727) Conditional ??CrossCallReturnLabel_235
          CFI (cfiCond727) R24 Frame(CFA_Y, -4)
          CFI (cfiCond727) R25 Frame(CFA_Y, -3)
          CFI (cfiCond727) R26 Frame(CFA_Y, -2)
          CFI (cfiCond727) R27 Frame(CFA_Y, -1)
          CFI (cfiCond727) CFA_SP SP+4
          CFI (cfiCond727) CFA_Y Y+4
          CFI Block cfiCond728 Using cfiCommon0
          CFI (cfiCond728) Function ??functionSetupWorkDay
          CFI (cfiCond728) Conditional ??CrossCallReturnLabel_236
          CFI (cfiCond728) R24 Frame(CFA_Y, -4)
          CFI (cfiCond728) R25 Frame(CFA_Y, -3)
          CFI (cfiCond728) R26 Frame(CFA_Y, -2)
          CFI (cfiCond728) R27 Frame(CFA_Y, -1)
          CFI (cfiCond728) CFA_SP SP+4
          CFI (cfiCond728) CFA_Y Y+4
          CFI Block cfiCond729 Using cfiCommon0
          CFI (cfiCond729) Function ??functionSetupWorkWeek
          CFI (cfiCond729) Conditional ??CrossCallReturnLabel_237
          CFI (cfiCond729) R26 Frame(CFA_Y, -2)
          CFI (cfiCond729) R27 Frame(CFA_Y, -1)
          CFI (cfiCond729) CFA_SP SP+4
          CFI (cfiCond729) CFA_Y Y+2
          CFI Block cfiCond730 Using cfiCommon0
          CFI (cfiCond730) Function ??functionSetupWorkWeek
          CFI (cfiCond730) Conditional ??CrossCallReturnLabel_238
          CFI (cfiCond730) R26 Frame(CFA_Y, -2)
          CFI (cfiCond730) R27 Frame(CFA_Y, -1)
          CFI (cfiCond730) CFA_SP SP+4
          CFI (cfiCond730) CFA_Y Y+2
          CFI Block cfiCond731 Using cfiCommon0
          CFI (cfiCond731) Function ??functionSetupWorkWeek
          CFI (cfiCond731) Conditional ??CrossCallReturnLabel_239
          CFI (cfiCond731) R26 Frame(CFA_Y, -2)
          CFI (cfiCond731) R27 Frame(CFA_Y, -1)
          CFI (cfiCond731) CFA_SP SP+4
          CFI (cfiCond731) CFA_Y Y+2
          CFI Block cfiCond732 Using cfiCommon0
          CFI (cfiCond732) Function ??functionSetCheckPassword
          CFI (cfiCond732) Conditional ??CrossCallReturnLabel_240
          CFI (cfiCond732) R24 Frame(CFA_Y, -4)
          CFI (cfiCond732) R25 Frame(CFA_Y, -3)
          CFI (cfiCond732) R26 Frame(CFA_Y, -2)
          CFI (cfiCond732) R27 Frame(CFA_Y, -1)
          CFI (cfiCond732) CFA_SP SP+4
          CFI (cfiCond732) CFA_Y Y+4
          CFI Block cfiCond733 Using cfiCommon0
          CFI (cfiCond733) Function ??functionSetCheckPassword
          CFI (cfiCond733) Conditional ??CrossCallReturnLabel_241
          CFI (cfiCond733) R24 Frame(CFA_Y, -4)
          CFI (cfiCond733) R25 Frame(CFA_Y, -3)
          CFI (cfiCond733) R26 Frame(CFA_Y, -2)
          CFI (cfiCond733) R27 Frame(CFA_Y, -1)
          CFI (cfiCond733) CFA_SP SP+4
          CFI (cfiCond733) CFA_Y Y+4
          CFI Block cfiPicker734 Using cfiCommon1
          CFI (cfiPicker734) NoFunction
          CFI (cfiPicker734) Picker
        LDI     R30, LOW(??activeParmSpace)
        LDI     R31, (??activeParmSpace) >> 8
        RET
          CFI EndBlock cfiCond718
          CFI EndBlock cfiCond719
          CFI EndBlock cfiCond720
          CFI EndBlock cfiCond721
          CFI EndBlock cfiCond722
          CFI EndBlock cfiCond723
          CFI EndBlock cfiCond724
          CFI EndBlock cfiCond725
          CFI EndBlock cfiCond726
          CFI EndBlock cfiCond727
          CFI EndBlock cfiCond728
          CFI EndBlock cfiCond729
          CFI EndBlock cfiCond730
          CFI EndBlock cfiCond731
          CFI EndBlock cfiCond732
          CFI EndBlock cfiCond733
          CFI EndBlock cfiPicker734

        RSEG CODE:CODE:NOROOT(1)
?Subroutine60:
          CFI Block cfiCond735 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_131
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond736 Using cfiCommon0
          CFI (cfiCond736) Function ??setWorkDaySetup
          CFI (cfiCond736) Conditional ??CrossCallReturnLabel_130
          CFI (cfiCond736) R26 Frame(CFA_Y, -2)
          CFI (cfiCond736) R27 Frame(CFA_Y, -1)
          CFI (cfiCond736) CFA_SP SP+4
          CFI (cfiCond736) CFA_Y Y+2
          CFI Block cfiCond737 Using cfiCommon0
          CFI (cfiCond737) Function ??functionSetupWorkWeek
          CFI (cfiCond737) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond737) R26 Frame(CFA_Y, -2)
          CFI (cfiCond737) R27 Frame(CFA_Y, -1)
          CFI (cfiCond737) CFA_SP SP+4
          CFI (cfiCond737) CFA_Y Y+2
          CFI Block cfiCond738 Using cfiCommon0
          CFI (cfiCond738) Function ??functionSetCheckPassword
          CFI (cfiCond738) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond738) R24 Frame(CFA_Y, -4)
          CFI (cfiCond738) R25 Frame(CFA_Y, -3)
          CFI (cfiCond738) R26 Frame(CFA_Y, -2)
          CFI (cfiCond738) R27 Frame(CFA_Y, -1)
          CFI (cfiCond738) CFA_SP SP+4
          CFI (cfiCond738) CFA_Y Y+4
          CFI Block cfiPicker739 Using cfiCommon1
          CFI (cfiPicker739) NoFunction
          CFI (cfiPicker739) Picker
        RJMP    ??displayDoneMessage
          CFI EndBlock cfiCond735
          CFI EndBlock cfiCond736
          CFI EndBlock cfiCond737
          CFI EndBlock cfiCond738
          CFI EndBlock cfiPicker739

        RSEG CODE:CODE:NOROOT(1)
?Subroutine53:
          CFI Block cfiCond740 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_99
          CFI CFA_SP SP+4
          CFI Block cfiCond741 Using cfiCommon0
          CFI (cfiCond741) Function ??functionSetupWorkWeek
          CFI (cfiCond741) Conditional ??CrossCallReturnLabel_100
          CFI (cfiCond741) CFA_SP SP+4
          CFI Block cfiPicker742 Using cfiCommon1
          CFI (cfiPicker742) NoFunction
          CFI (cfiPicker742) Picker
        ST      -Y, R27
          CFI (cfiCond740) R27 Frame(CFA_Y, -1)
          CFI (cfiCond740) CFA_Y Y+1
          CFI (cfiCond741) R27 Frame(CFA_Y, -1)
          CFI (cfiCond741) CFA_Y Y+1
          CFI (cfiPicker742) R27 Frame(CFA_Y, -1)
        ST      -Y, R26
          CFI (cfiCond740) R26 Frame(CFA_Y, -2)
          CFI (cfiCond740) CFA_Y Y+2
          CFI (cfiCond741) R26 Frame(CFA_Y, -2)
          CFI (cfiCond741) CFA_Y Y+2
          CFI (cfiPicker742) R26 Frame(CFA_Y, -2)
        LDS     R16, (??curStatisticRecord + 27)
        TST     R16
        RET
          CFI EndBlock cfiCond740
          CFI EndBlock cfiCond741
          CFI EndBlock cfiPicker742

        RSEG CODE:CODE:NOROOT(1)
?Subroutine98:
          CFI Block cfiCond743 Using cfiCommon0
          CFI Function ??displayDoneMessage
          CFI Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_309
          CFI CFA_SP SP+6
          CFI Block cfiCond744 Using cfiCommon0
          CFI (cfiCond744) Function ??displayErrorMessage
          CFI (cfiCond744) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_310
          CFI (cfiCond744) CFA_SP SP+6
          CFI Block cfiCond745 Using cfiCommon0
          CFI (cfiCond745) Function ??functionIncorrectFunction
          CFI (cfiCond745) Conditional ??CrossCallReturnLabel_308, ??CrossCallReturnLabel_311
          CFI (cfiCond745) CFA_SP SP+6
          CFI (cfiCond745) CFA_Y Y+20
          CFI Block cfiCond746 Using cfiCommon0
          CFI (cfiCond746) Function ??functionReports
          CFI (cfiCond746) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_384
          CFI (cfiCond746) R24 Frame(CFA_Y, -3)
          CFI (cfiCond746) R26 Frame(CFA_Y, -2)
          CFI (cfiCond746) R27 Frame(CFA_Y, -1)
          CFI (cfiCond746) CFA_SP SP+6
          CFI (cfiCond746) CFA_Y Y+13
          CFI Block cfiCond747 Using cfiCommon0
          CFI (cfiCond747) Function ??functionSensorQuality
          CFI (cfiCond747) Conditional ??CrossCallReturnLabel_307, ??CrossCallReturnLabel_385
          CFI (cfiCond747) CFA_SP SP+6
          CFI Block cfiCond748 Using cfiCommon0
          CFI (cfiCond748) Function ??functionSetupDateTime
          CFI (cfiCond748) Conditional ??CrossCallReturnLabel_302
          CFI (cfiCond748) R26 Frame(CFA_Y, -2)
          CFI (cfiCond748) R27 Frame(CFA_Y, -1)
          CFI (cfiCond748) CFA_SP SP+4
          CFI (cfiCond748) CFA_Y Y+2
          CFI Block cfiCond749 Using cfiCommon0
          CFI (cfiCond749) Function ??functionSafeBattRemove
          CFI (cfiCond749) Conditional ??CrossCallReturnLabel_303
          CFI (cfiCond749) CFA_SP SP+4
          CFI Block cfiCond750 Using cfiCommon0
          CFI (cfiCond750) Function ??functionSetupWorkWeek
          CFI (cfiCond750) Conditional ??CrossCallReturnLabel_304
          CFI (cfiCond750) R26 Frame(CFA_Y, -2)
          CFI (cfiCond750) R27 Frame(CFA_Y, -1)
          CFI (cfiCond750) CFA_SP SP+4
          CFI (cfiCond750) CFA_Y Y+2
          CFI Block cfiCond751 Using cfiCommon0
          CFI (cfiCond751) Function ??functionSetCheckPassword
          CFI (cfiCond751) Conditional ??CrossCallReturnLabel_305
          CFI (cfiCond751) R24 Frame(CFA_Y, -4)
          CFI (cfiCond751) R25 Frame(CFA_Y, -3)
          CFI (cfiCond751) R26 Frame(CFA_Y, -2)
          CFI (cfiCond751) R27 Frame(CFA_Y, -1)
          CFI (cfiCond751) CFA_SP SP+4
          CFI (cfiCond751) CFA_Y Y+4
          CFI Block cfiCond752 Using cfiCommon0
          CFI (cfiCond752) Function ??functionMenu
          CFI (cfiCond752) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_399
          CFI (cfiCond752) R26 Frame(CFA_Y, -2)
          CFI (cfiCond752) R27 Frame(CFA_Y, -1)
          CFI (cfiCond752) CFA_SP SP+6
          CFI (cfiCond752) CFA_Y Y+2
          CFI Block cfiCond753 Using cfiCommon0
          CFI (cfiCond753) Function ??functionReportVisitorsTotal
          CFI (cfiCond753) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_400
          CFI (cfiCond753) CFA_SP SP+6
          CFI Block cfiCond754 Using cfiCommon0
          CFI (cfiCond754) Function ??functionSerialNumber
          CFI (cfiCond754) Conditional ??CrossCallReturnLabel_306, ??CrossCallReturnLabel_401
          CFI (cfiCond754) R26 Frame(CFA_Y, -2)
          CFI (cfiCond754) R27 Frame(CFA_Y, -1)
          CFI (cfiCond754) CFA_SP SP+6
          CFI (cfiCond754) CFA_Y Y+2
          CFI Block cfiPicker755 Using cfiCommon1
          CFI (cfiPicker755) NoFunction
          CFI (cfiPicker755) Picker
        LDI     R21, 0
        LDI     R20, 0
        LDI     R19, 1
        RET
          CFI EndBlock cfiCond743
          CFI EndBlock cfiCond744
          CFI EndBlock cfiCond745
          CFI EndBlock cfiCond746
          CFI EndBlock cfiCond747
          CFI EndBlock cfiCond748
          CFI EndBlock cfiCond749
          CFI EndBlock cfiCond750
          CFI EndBlock cfiCond751
          CFI EndBlock cfiCond752
          CFI EndBlock cfiCond753
          CFI EndBlock cfiCond754
          CFI EndBlock cfiPicker755
// 1186 

        RSEG CODE:CODE:NOROOT(1)
// 1187   void functionSetCheckPassword(bool _authScreen)
??functionSetCheckPassword:
          CFI Block cfiBlock756 Using cfiCommon0
          CFI Function ??functionSetCheckPassword
// 1188   {
        FUNCALL ??functionSetCheckPassword, ??checkPasswordMaster
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??popBuff
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??clearBuffer
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??getString
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??str2Buf
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??popBuff
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??checkPasswordMaster
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??checkPasswordReports
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??displayErrorMessage
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??setPasswordMaster
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??setPasswordReports
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??displayDoneMessage
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??popBuff
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??checkPasswordMaster
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??checkPasswordReports
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??incPwdFails
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??displayErrorMessage
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??getString
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??str2Buf
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??getString
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??str2Buf
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??getString
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??str2Buf
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetCheckPassword, ??refreshDisplay
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine52
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+4
??CrossCallReturnLabel_97:
        LDS     R17, (??curStatisticRecord + 27)
        TST     R17
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_353
// 1189     unsigned char* curPwd = (unsigned char*)activeParmSpace;
// 1190     unsigned char* curPwdCopy = (unsigned char*)(activeParmSpace + DEVICE_PASSWORD_LENGTH);
// 1191     unsigned char* curStatus = (unsigned char*)(activeParmSpace + (2 * DEVICE_PASSWORD_LENGTH));
// 1192     unsigned char* curPwdPos = (unsigned char*)(activeParmSpace + (2 * DEVICE_PASSWORD_LENGTH) + sizeof(unsigned char));
// 1193 
// 1194     if (activeFunctionChanged)
// 1195     {
// 1196       for (unsigned char i = 0; i < DEVICE_PASSWORD_LENGTH; i++)
        RCALL   ?Subroutine109
??CrossCallReturnLabel_240:
        LDI     R17, 8
        LDI     R18, 0
// 1197       {
// 1198         curPwd[i] = 0;
??functionSetCheckPassword_1:
        ST      Z, R18
// 1199         curPwdCopy[i] = 0;
        STD     Z+8, R18
// 1200       }
        ADIW    R31:R30, 1
        DEC     R17
        BRNE    ??functionSetCheckPassword_1
// 1201 
// 1202       *curPwdPos = 0;
        STS     (??activeParmSpace + 17), R18
// 1203 
// 1204       if (_authScreen)
        TST     R16
        BREQ    ??functionSetCheckPassword_2
// 1205       {
// 1206         *curStatus = 3;
        LDI     R16, 3
        STS     (??activeParmSpace + 16), R16
// 1207 
// 1208         if (DeviceManager::checkPasswordMaster(curPwd))
        RCALL   ?Subroutine61
??CrossCallReturnLabel_135:
        CALL    ??checkPasswordMaster
        TST     R16
        BREQ    $+2+2
        RJMP    ??functionSetCheckPassword_3
// 1209         {
// 1210           menuAuthLevel = MenuAuthLevel_Master;
// 1211           return;
// 1212         }
// 1213 
// 1214         while (transitionKey)
        RCALL   ?Subroutine50
??CrossCallReturnLabel_94:
        BREQ    ??functionSetCheckPassword_4
// 1215         {
// 1216           getNextTransitionKey();
??functionSetCheckPassword_5:
        LDS     R16, (??curStatisticRecord + 36)
        TST     R16
        BREQ    ??functionSetCheckPassword_6
        RCALL   ?Subroutine24
// 1217         }
// 1218       }
??CrossCallReturnLabel_29:
        BRNE    ??functionSetCheckPassword_5
// 1219       else
// 1220       {
// 1221         *curStatus = 0;
// 1222       }
// 1223     }
// 1224 
// 1225     while (transitionKey)
// 1226     {
// 1227       unsigned char curChar;
// 1228       unsigned char curDif;
// 1229 
// 1230       switch (transitionKey)
// 1231       {
// 1232         case 1:
// 1233           if (*curPwdPos > 0)
// 1234           {
// 1235             curPwd[*curPwdPos] = 0;
// 1236             (*curPwdPos)--;
// 1237           }
// 1238           else
// 1239           {
// 1240             return;
// 1241           }
// 1242           break;
// 1243 
// 1244         case 4:
// 1245           if ((*curPwdPos >= (DEVICE_PASSWORD_LENGTH - 1)) ||
// 1246               (curPwd[*curPwdPos] == 0))
// 1247           {
// 1248             switch (*curStatus)
// 1249             {
// 1250               case 0:
// 1251                 switch (menuStack[menuStackPos].funcState)
// 1252                 {
// 1253                   case 0:
// 1254                     if (!DeviceManager::checkPasswordMaster(curPwd))
// 1255                     {
// 1256                       displayErrorMessage();
// 1257                       return;
// 1258                     }
// 1259                     break;
// 1260 
// 1261                   case 1:
// 1262                     if (!DeviceManager::checkPasswordReports(curPwd))
// 1263                     {
// 1264                       displayErrorMessage();
// 1265                       return;
// 1266                     }
// 1267                     break;
// 1268                 }
// 1269 
// 1270                 (*curStatus)++;
// 1271                 break;
// 1272 
// 1273               case 1:
// 1274                 (*curStatus)++;
// 1275                 break;
// 1276 
// 1277               case 2:
// 1278                 for (unsigned char i = 0; i < DEVICE_PASSWORD_LENGTH; i++)
// 1279                 {
// 1280                   if (curPwd[i] != curPwdCopy[i])
// 1281                   {
// 1282                     displayErrorMessage();
// 1283                     return;
// 1284                   }
// 1285                 }
// 1286 
// 1287                 switch (menuStack[menuStackPos].funcState)
// 1288                 {
// 1289                   case 0:
// 1290                     DeviceManager::setPasswordMaster(curPwd);
// 1291                     break;
// 1292 
// 1293                   case 1:
// 1294                     DeviceManager::setPasswordReports(curPwd);
// 1295                     break;
// 1296                 }
// 1297 
// 1298                 displayDoneMessage();
// 1299                 return;
// 1300 
// 1301               case 3:
// 1302                 while (transitionKey)
// 1303                 {
// 1304                   getNextTransitionKey();
// 1305                 }
// 1306 
// 1307                 if (DeviceManager::checkPasswordMaster(curPwd))
// 1308                 {
// 1309                   menuAuthLevel = MenuAuthLevel_Master;
// 1310                   return;
// 1311                 }
// 1312 
// 1313                 if (DeviceManager::checkPasswordReports(curPwd))
// 1314                 {
// 1315                   menuAuthLevel = MenuAuthLevel_Reports;
// 1316                   return;
// 1317                 }
// 1318 
// 1319                 DeviceManager::incPwdFails();
// 1320 
// 1321                 displayErrorMessage();
// 1322                 return;
// 1323             }
// 1324 
// 1325             for (unsigned char i = 0; i < DEVICE_PASSWORD_LENGTH; i++)
// 1326             {
// 1327               curPwdCopy[i] = curPwd[i];
// 1328               curPwd[i] = 0;
// 1329             }
// 1330 
// 1331             *curPwdPos = 0;
// 1332           }
// 1333           else
// 1334           {
// 1335             (*curPwdPos)++;
// 1336           }
// 1337           break;
// 1338 
// 1339         case 2:
// 1340         case 3:
// 1341           curChar = curPwd[*curPwdPos];
// 1342           curDif = (transitionKey == 2) ? 9 : 1;
// 1343           if (curChar >= 0x30)
// 1344           {
// 1345             curChar = curChar - 0x30;
// 1346           }
// 1347           else
// 1348           {
// 1349             curChar = 0;
// 1350             curDif = 0;
// 1351           }
// 1352 
// 1353           curChar = (curChar + curDif) % 10;
// 1354           curPwd[*curPwdPos] = curChar + 0x30;
// 1355           break;
// 1356       }
// 1357 
// 1358       getNextTransitionKey();
// 1359     }
// 1360 
// 1361     LCDDriver::clearBuffer();
??functionSetCheckPassword_4:
        RCALL   ?Subroutine42
// 1362 
// 1363     switch (*curStatus)
??CrossCallReturnLabel_67:
        LDS     R16, (??activeParmSpace + 16)
        TST     R16
        BREQ    ??functionSetCheckPassword_7
        DEC     R16
        BRNE    $+2+2
        RJMP    ??functionSetCheckPassword_8
        DEC     R16
        BRNE    $+2+2
        RJMP    ??functionSetCheckPassword_9
        DEC     R16
        BRNE    $+2+2
        RJMP    ??functionSetCheckPassword_10
        RJMP    ??CrossCallReturnLabel_368
// 1364     {
// 1365       case 0:
// 1366         LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_SETUP_PASSWORD_CURRENT), LCDDriver::LCDTextIdentation_Center);
??functionSetCheckPassword_7:
        LDI     R16, 55
        RJMP    ??functionSetCheckPassword_11
??functionSetCheckPassword_6:
        RCALL   ?Subroutine25
??CrossCallReturnLabel_30:
        RJMP    ??functionSetCheckPassword_4
??functionSetCheckPassword_2:
        STS     (??activeParmSpace + 16), R18
        RJMP    ??CrossCallReturnLabel_353
??functionSetCheckPassword_12:
        LDI     R16, 0
        LDI     R18, 0
??functionSetCheckPassword_13:
        ADD     R16, R18
        ADC     R17, R17
        LDI     R20, 10
        LDI     R21, 0
        CALL    ?SS_DIVMOD_L02
        SUBI    R20, 208
        MOVW    R31:R30, R25:R24
        ST      Z, R20
??functionSetCheckPassword_14:
        LDS     R16, (??curStatisticRecord + 36)
        TST     R16
        BREQ    ??functionSetCheckPassword_6
        LDI     R16, 0
        RCALL   ?Subroutine34
??CrossCallReturnLabel_353:
        LDS     R18, (??curStatisticRecord + 34)
        TST     R18
        BREQ    ??functionSetCheckPassword_4
        MOV     R16, R18
        DEC     R16
        BREQ    ??functionSetCheckPassword_15
        DEC     R16
        BRNE    $+2+2
        RJMP    ??functionSetCheckPassword_16
        DEC     R16
        BRNE    $+2+2
        RJMP    ??functionSetCheckPassword_16
        DEC     R16
        BREQ    ??functionSetCheckPassword_17
        RJMP    ??functionSetCheckPassword_14
??functionSetCheckPassword_15:
        RCALL   ?Subroutine81
??CrossCallReturnLabel_173:
        TST     R16
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_405
        LDI     R18, 0
        RCALL   ?Subroutine78
??CrossCallReturnLabel_168:
        ST      Z, R18
        RCALL   ?Subroutine109
??CrossCallReturnLabel_241:
        LDD     R16, Z+17
        DEC     R16
??functionSetCheckPassword_18:
        STD     Z+17, R16
        RJMP    ??functionSetCheckPassword_14
??functionSetCheckPassword_17:
        RCALL   ?Subroutine104
??CrossCallReturnLabel_214:
        RCALL   ?Subroutine81
??CrossCallReturnLabel_174:
        CPI     R16, 7
        BRCC    ??functionSetCheckPassword_19
        RCALL   ?Subroutine78
??CrossCallReturnLabel_169:
        LD      R16, Z
        TST     R16
        BREQ    $+2+2
        RJMP    ??functionSetCheckPassword_20
??functionSetCheckPassword_19:
        LDS     R16, (??activeParmSpace + 16)
        TST     R16
        BREQ    ??functionSetCheckPassword_21
        DEC     R16
        BREQ    ??functionSetCheckPassword_22
        DEC     R16
        BREQ    ??functionSetCheckPassword_23
        DEC     R16
        BREQ    ??functionSetCheckPassword_24
        RJMP    ??functionSetCheckPassword_25
??functionSetCheckPassword_21:
        RCALL   ?Subroutine82
??CrossCallReturnLabel_179:
        BREQ    ??functionSetCheckPassword_26
        DEC     R16
        BREQ    ??functionSetCheckPassword_27
        RJMP    ??functionSetCheckPassword_22
??functionSetCheckPassword_26:
        RCALL   ?Subroutine62
??CrossCallReturnLabel_136:
        BRNE    ??functionSetCheckPassword_22
        RJMP    ??functionSetCheckPassword_28
??functionSetCheckPassword_27:
        RCALL   ?Subroutine63
??CrossCallReturnLabel_138:
        BREQ    ??functionSetCheckPassword_28
??functionSetCheckPassword_22:
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+16
        INC     R16
        STD     Z+16, R16
??functionSetCheckPassword_25:
        MOVW    R31:R30, R27:R26
        LDI     R16, 8
??functionSetCheckPassword_29:
        LD      R17, Z
        STD     Z+8, R17
        LDI     R17, 0
        ST      Z+, R17
        DEC     R16
        BRNE    ??functionSetCheckPassword_29
        STS     (??activeParmSpace + 17), R17
        RJMP    ??functionSetCheckPassword_14
??functionSetCheckPassword_23:
        MOVW    R31:R30, R27:R26
        LDI     R16, 8
??functionSetCheckPassword_30:
        LD      R17, Z
        LDD     R18, Z+8
        CP      R17, R18
        BRNE    ??functionSetCheckPassword_28
??functionSetCheckPassword_31:
        ADIW    R31:R30, 1
        DEC     R16
        BRNE    ??functionSetCheckPassword_30
        RCALL   ?Subroutine82
??CrossCallReturnLabel_180:
        BREQ    ??functionSetCheckPassword_32
        DEC     R16
        BREQ    ??functionSetCheckPassword_33
        RJMP    ??functionSetCheckPassword_34
??functionSetCheckPassword_32:
        MOVW    R17:R16, R27:R26
        CALL    ??setPasswordMaster
        RJMP    ??functionSetCheckPassword_34
??functionSetCheckPassword_33:
        MOVW    R17:R16, R27:R26
        CALL    ??setPasswordReports
??functionSetCheckPassword_34:
        RCALL   ?Subroutine60
??CrossCallReturnLabel_128:
        RJMP    ??CrossCallReturnLabel_405
??functionSetCheckPassword_35:
        RCALL   ?Subroutine34
??CrossCallReturnLabel_354:
        TST     R16
        BREQ    ??CrossCallReturnLabel_342
??functionSetCheckPassword_24:
        RCALL   ?Subroutine33
??CrossCallReturnLabel_331:
        BRNE    ??functionSetCheckPassword_35
        RCALL   ??Subroutine132_0
??CrossCallReturnLabel_342:
        RCALL   ?Subroutine62
??CrossCallReturnLabel_137:
        BREQ    ??functionSetCheckPassword_36
??functionSetCheckPassword_3:
        LDI     R16, 2
        RJMP    ??functionSetCheckPassword_37
??functionSetCheckPassword_36:
        RCALL   ?Subroutine63
??CrossCallReturnLabel_139:
        BREQ    ??functionSetCheckPassword_38
        LDI     R16, 1
??functionSetCheckPassword_37:
        STS     (??curStatisticRecord + 32), R16
        RJMP    ??CrossCallReturnLabel_405
??functionSetCheckPassword_38:
        CALL    ??incPwdFails
??functionSetCheckPassword_28:
        RCALL   ??displayErrorMessage
        RJMP    ??CrossCallReturnLabel_405
??functionSetCheckPassword_20:
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+17
        INC     R16
        RJMP    ??functionSetCheckPassword_18
??functionSetCheckPassword_16:
        RCALL   ?Subroutine81
??CrossCallReturnLabel_175:
        LDI     R17, 0
        LDI     R24, LOW(??activeParmSpace)
        LDI     R25, (??activeParmSpace) >> 8
        ADD     R24, R16
        ADC     R25, R17
        MOVW    R31:R30, R25:R24
        LD      R16, Z
        CPI     R18, 2
        BRNE    ??functionSetCheckPassword_39
        LDI     R18, 9
        RJMP    ??functionSetCheckPassword_40
??functionSetCheckPassword_39:
        LDI     R18, 1
??functionSetCheckPassword_40:
        CPI     R16, 48
        BRCC    $+2+2
        RJMP    ??functionSetCheckPassword_12
        SUBI    R16, 48
        RJMP    ??functionSetCheckPassword_13
// 1367         break;
// 1368 
// 1369       case 1:
// 1370         LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_SETUP_PASSWORD_NEW), LCDDriver::LCDTextIdentation_Center);
??functionSetCheckPassword_8:
        LDI     R16, 56
        RJMP    ??functionSetCheckPassword_11
// 1371         break;
// 1372 
// 1373       case 2:
// 1374         LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_SETUP_PASSWORD_REPEAT), LCDDriver::LCDTextIdentation_Center);
??functionSetCheckPassword_9:
        LDI     R16, 57
        RJMP    ??functionSetCheckPassword_11
// 1375         break;
// 1376 
// 1377       case 3:
// 1378         LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_MESSAGE_TYPE_PASSWORD), LCDDriver::LCDTextIdentation_Center);
??functionSetCheckPassword_10:
        LDI     R16, 97
??functionSetCheckPassword_11:
        RCALL   ?Subroutine27
// 1379         break;
// 1380     }
// 1381 
// 1382     unsigned char curPos = (LCD_DISPLAY_WIDTH - DEVICE_PASSWORD_LENGTH) / 2;
??CrossCallReturnLabel_368:
        LDI     R18, 4
// 1383     for (unsigned char i = 0; i < (*curPwdPos); i++)
        RCALL   ?Subroutine81
??CrossCallReturnLabel_176:
        TST     R16
        BREQ    ??functionSetCheckPassword_41
        MOV     R20, R16
        LDI     R17, 42
// 1384     {
// 1385       LCDDriver::displayState.line[1][curPos] = '*';
??functionSetCheckPassword_42:
        RCALL   ?Subroutine79
??CrossCallReturnLabel_171:
        STD     Z+20, R17
// 1386       curPos++;
        INC     R18
// 1387     }
        DEC     R20
        BRNE    ??functionSetCheckPassword_42
// 1388 
// 1389     LCDDriver::displayState.line[1][curPos] = curPwd[*curPwdPos] ? curPwd[*curPwdPos] : LCD_DISPLAY_SYMBOL_SPACE;
??functionSetCheckPassword_41:
        RCALL   ?Subroutine78
??CrossCallReturnLabel_170:
        LD      R17, Z
        TST     R17
        BREQ    ??functionSetCheckPassword_43
        MOV     R16, R17
        RJMP    ??functionSetCheckPassword_44
??functionSetCheckPassword_43:
        LDI     R16, 32
??functionSetCheckPassword_44:
        RCALL   ?Subroutine79
??CrossCallReturnLabel_172:
        STD     Z+20, R16
// 1390 
// 1391     LCDDriver::refreshDisplay(
// 1392       LCDDriver::LCDDisplayMode_BlinkCursor,
// 1393       1,
// 1394       curPos);
        RCALL   ?Subroutine98
??CrossCallReturnLabel_305:
        LDI     R17, 1
        LDI     R16, 13
        RCALL   ??Subroutine135_0
// 1395 
// 1396     isTransition = false;
// 1397   }
??CrossCallReturnLabel_405:
        RJMP    ?Subroutine39
          CFI EndBlock cfiBlock756

        RSEG CODE:CODE:NOROOT(1)
?Subroutine81:
          CFI Block cfiCond757 Using cfiCommon0
          CFI Function ??functionSetCheckPassword
          CFI Conditional ??CrossCallReturnLabel_173
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond758 Using cfiCommon0
          CFI (cfiCond758) Function ??functionSetCheckPassword
          CFI (cfiCond758) Conditional ??CrossCallReturnLabel_174
          CFI (cfiCond758) R24 Frame(CFA_Y, -4)
          CFI (cfiCond758) R25 Frame(CFA_Y, -3)
          CFI (cfiCond758) R26 Frame(CFA_Y, -2)
          CFI (cfiCond758) R27 Frame(CFA_Y, -1)
          CFI (cfiCond758) CFA_SP SP+4
          CFI (cfiCond758) CFA_Y Y+4
          CFI Block cfiCond759 Using cfiCommon0
          CFI (cfiCond759) Function ??functionSetCheckPassword
          CFI (cfiCond759) Conditional ??CrossCallReturnLabel_175
          CFI (cfiCond759) R24 Frame(CFA_Y, -4)
          CFI (cfiCond759) R25 Frame(CFA_Y, -3)
          CFI (cfiCond759) R26 Frame(CFA_Y, -2)
          CFI (cfiCond759) R27 Frame(CFA_Y, -1)
          CFI (cfiCond759) CFA_SP SP+4
          CFI (cfiCond759) CFA_Y Y+4
          CFI Block cfiCond760 Using cfiCommon0
          CFI (cfiCond760) Function ??functionSetCheckPassword
          CFI (cfiCond760) Conditional ??CrossCallReturnLabel_176
          CFI (cfiCond760) R24 Frame(CFA_Y, -4)
          CFI (cfiCond760) R25 Frame(CFA_Y, -3)
          CFI (cfiCond760) R26 Frame(CFA_Y, -2)
          CFI (cfiCond760) R27 Frame(CFA_Y, -1)
          CFI (cfiCond760) CFA_SP SP+4
          CFI (cfiCond760) CFA_Y Y+4
          CFI Block cfiPicker761 Using cfiCommon1
          CFI (cfiPicker761) NoFunction
          CFI (cfiPicker761) Picker
        LDS     R16, (??activeParmSpace + 17)
        RET
          CFI EndBlock cfiCond757
          CFI EndBlock cfiCond758
          CFI EndBlock cfiCond759
          CFI EndBlock cfiCond760
          CFI EndBlock cfiPicker761

        RSEG CODE:CODE:NOROOT(1)
?Subroutine79:
          CFI Block cfiCond762 Using cfiCommon0
          CFI Function ??functionSetCheckPassword
          CFI Conditional ??CrossCallReturnLabel_171
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond763 Using cfiCommon0
          CFI (cfiCond763) Function ??functionSetCheckPassword
          CFI (cfiCond763) Conditional ??CrossCallReturnLabel_172
          CFI (cfiCond763) R24 Frame(CFA_Y, -4)
          CFI (cfiCond763) R25 Frame(CFA_Y, -3)
          CFI (cfiCond763) R26 Frame(CFA_Y, -2)
          CFI (cfiCond763) R27 Frame(CFA_Y, -1)
          CFI (cfiCond763) CFA_SP SP+4
          CFI (cfiCond763) CFA_Y Y+4
          CFI Block cfiPicker764 Using cfiCommon1
          CFI (cfiPicker764) NoFunction
          CFI (cfiPicker764) Picker
        LDI     R31, 0
        MOV     R30, R18
        SUBI    R30, LOW((-(??displayState) & 0xFFFF))
        SBCI    R31, (-(??displayState) & 0xFFFF) >> 8
        RET
          CFI EndBlock cfiCond762
          CFI EndBlock cfiCond763
          CFI EndBlock cfiPicker764

        RSEG CODE:CODE:NOROOT(1)
?Subroutine78:
          CFI Block cfiCond765 Using cfiCommon0
          CFI Function ??functionSetCheckPassword
          CFI Conditional ??CrossCallReturnLabel_168
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond766 Using cfiCommon0
          CFI (cfiCond766) Function ??functionSetCheckPassword
          CFI (cfiCond766) Conditional ??CrossCallReturnLabel_169
          CFI (cfiCond766) R24 Frame(CFA_Y, -4)
          CFI (cfiCond766) R25 Frame(CFA_Y, -3)
          CFI (cfiCond766) R26 Frame(CFA_Y, -2)
          CFI (cfiCond766) R27 Frame(CFA_Y, -1)
          CFI (cfiCond766) CFA_SP SP+4
          CFI (cfiCond766) CFA_Y Y+4
          CFI Block cfiCond767 Using cfiCommon0
          CFI (cfiCond767) Function ??functionSetCheckPassword
          CFI (cfiCond767) Conditional ??CrossCallReturnLabel_170
          CFI (cfiCond767) R24 Frame(CFA_Y, -4)
          CFI (cfiCond767) R25 Frame(CFA_Y, -3)
          CFI (cfiCond767) R26 Frame(CFA_Y, -2)
          CFI (cfiCond767) R27 Frame(CFA_Y, -1)
          CFI (cfiCond767) CFA_SP SP+4
          CFI (cfiCond767) CFA_Y Y+4
          CFI Block cfiPicker768 Using cfiCommon1
          CFI (cfiPicker768) NoFunction
          CFI (cfiPicker768) Picker
        LDI     R31, 0
        MOV     R30, R16
        SUBI    R30, LOW((-(??activeParmSpace) & 0xFFFF))
        SBCI    R31, (-(??activeParmSpace) & 0xFFFF) >> 8
        RET
          CFI EndBlock cfiCond765
          CFI EndBlock cfiCond766
          CFI EndBlock cfiCond767
          CFI EndBlock cfiPicker768

        RSEG CODE:CODE:NOROOT(1)
?Subroutine63:
          CFI Block cfiCond769 Using cfiCommon0
          CFI Function ??functionSetCheckPassword
          CFI Conditional ??CrossCallReturnLabel_138
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond770 Using cfiCommon0
          CFI (cfiCond770) Function ??functionSetCheckPassword
          CFI (cfiCond770) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond770) R24 Frame(CFA_Y, -4)
          CFI (cfiCond770) R25 Frame(CFA_Y, -3)
          CFI (cfiCond770) R26 Frame(CFA_Y, -2)
          CFI (cfiCond770) R27 Frame(CFA_Y, -1)
          CFI (cfiCond770) CFA_SP SP+4
          CFI (cfiCond770) CFA_Y Y+4
          CFI Block cfiPicker771 Using cfiCommon1
          CFI (cfiPicker771) NoFunction
          CFI (cfiPicker771) Picker
        MOVW    R17:R16, R27:R26
        CALL    ??checkPasswordReports
        TST     R16
        RET
          CFI EndBlock cfiCond769
          CFI EndBlock cfiCond770
          CFI EndBlock cfiPicker771

        RSEG CODE:CODE:NOROOT(1)
?Subroutine62:
          CFI Block cfiCond772 Using cfiCommon0
          CFI Function ??functionSetCheckPassword
          CFI Conditional ??CrossCallReturnLabel_136
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond773 Using cfiCommon0
          CFI (cfiCond773) Function ??functionSetCheckPassword
          CFI (cfiCond773) Conditional ??CrossCallReturnLabel_137
          CFI (cfiCond773) R24 Frame(CFA_Y, -4)
          CFI (cfiCond773) R25 Frame(CFA_Y, -3)
          CFI (cfiCond773) R26 Frame(CFA_Y, -2)
          CFI (cfiCond773) R27 Frame(CFA_Y, -1)
          CFI (cfiCond773) CFA_SP SP+4
          CFI (cfiCond773) CFA_Y Y+4
          CFI Block cfiPicker774 Using cfiCommon1
          CFI (cfiPicker774) NoFunction
          CFI (cfiPicker774) Picker
        MOVW    R17:R16, R27:R26
        CALL    ??checkPasswordMaster
        TST     R16
        RET
          CFI EndBlock cfiCond772
          CFI EndBlock cfiCond773
          CFI EndBlock cfiPicker774

        RSEG CODE:CODE:NOROOT(1)
?Subroutine52:
          CFI Block cfiCond775 Using cfiCommon0
          CFI Function ??functionSetupWorkDay
          CFI Conditional ??CrossCallReturnLabel_96
          CFI CFA_SP SP+4
          CFI Block cfiCond776 Using cfiCommon0
          CFI (cfiCond776) Function ??functionSetCheckPassword
          CFI (cfiCond776) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond776) CFA_SP SP+4
          CFI Block cfiCond777 Using cfiCommon0
          CFI (cfiCond777) Function ??functionResetNum
          CFI (cfiCond777) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond777) R4 Frame(CFA_Y, -1)
          CFI (cfiCond777) CFA_SP SP+4
          CFI (cfiCond777) CFA_Y Y+1
          CFI Block cfiPicker778 Using cfiCommon1
          CFI (cfiPicker778) NoFunction
          CFI (cfiPicker778) Picker
        ST      -Y, R27
          CFI (cfiCond775) R27 Frame(CFA_Y, -1)
          CFI (cfiCond775) CFA_Y Y+1
          CFI (cfiCond776) R27 Frame(CFA_Y, -1)
          CFI (cfiCond776) CFA_Y Y+1
          CFI (cfiCond777) R27 Frame(CFA_Y, -2)
          CFI (cfiCond777) CFA_Y Y+2
          CFI (cfiPicker778) R27 Frame(CFA_Y, -1)
        ST      -Y, R26
          CFI (cfiCond775) R26 Frame(CFA_Y, -2)
          CFI (cfiCond775) CFA_Y Y+2
          CFI (cfiCond776) R26 Frame(CFA_Y, -2)
          CFI (cfiCond776) CFA_Y Y+2
          CFI (cfiCond777) R26 Frame(CFA_Y, -3)
          CFI (cfiCond777) CFA_Y Y+3
          CFI (cfiPicker778) R26 Frame(CFA_Y, -2)
        ST      -Y, R25
          CFI (cfiCond775) R25 Frame(CFA_Y, -3)
          CFI (cfiCond775) CFA_Y Y+3
          CFI (cfiCond776) R25 Frame(CFA_Y, -3)
          CFI (cfiCond776) CFA_Y Y+3
          CFI (cfiCond777) R25 Frame(CFA_Y, -4)
          CFI (cfiCond777) CFA_Y Y+4
          CFI (cfiPicker778) R25 Frame(CFA_Y, -3)
        ST      -Y, R24
          CFI (cfiCond775) R24 Frame(CFA_Y, -4)
          CFI (cfiCond775) CFA_Y Y+4
          CFI (cfiCond776) R24 Frame(CFA_Y, -4)
          CFI (cfiCond776) CFA_Y Y+4
          CFI (cfiCond777) R24 Frame(CFA_Y, -5)
          CFI (cfiCond777) CFA_Y Y+5
          CFI (cfiPicker778) R24 Frame(CFA_Y, -4)
        RET
          CFI EndBlock cfiCond775
          CFI EndBlock cfiCond776
          CFI EndBlock cfiCond777
          CFI EndBlock cfiPicker778

        RSEG CODE:CODE:NOROOT(1)
?Subroutine39:
          CFI Block cfiCond779 Using cfiCommon0
          CFI Function ??functionResetNum
          CFI Conditional ??CrossCallReturnLabel_57
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+5
          CFI Block cfiBlock780 Using cfiCommon0
          CFI (cfiBlock780) NoFunction
          CFI (cfiBlock780) CFA_Y Y+4
          CFI (cfiBlock780) R24 Frame(CFA_Y, -4)
          CFI (cfiBlock780) R25 Frame(CFA_Y, -3)
          CFI (cfiBlock780) R26 Frame(CFA_Y, -2)
          CFI (cfiBlock780) R27 Frame(CFA_Y, -1)
          CFI Block cfiPicker781 Using cfiCommon1
          CFI (cfiPicker781) NoFunction
          CFI (cfiPicker781) Picker
        LD      R24, Y+
          CFI (cfiCond779) R24 SameValue
          CFI (cfiCond779) CFA_Y Y+4
          CFI (cfiBlock780) CFA_Y Y+3
          CFI (cfiBlock780) R24 SameValue
        LD      R25, Y+
          CFI (cfiCond779) R25 SameValue
          CFI (cfiCond779) CFA_Y Y+3
          CFI (cfiBlock780) CFA_Y Y+2
          CFI (cfiBlock780) R25 SameValue
        LD      R26, Y+
          CFI (cfiCond779) R26 SameValue
          CFI (cfiCond779) CFA_Y Y+2
          CFI (cfiBlock780) CFA_Y Y+1
          CFI (cfiBlock780) R26 SameValue
        LD      R27, Y+
          CFI (cfiCond779) R27 SameValue
          CFI (cfiCond779) CFA_Y Y+1
          CFI (cfiBlock780) CFA_Y Y+0
          CFI (cfiBlock780) R27 SameValue
        RET
          CFI EndBlock cfiCond779
          CFI EndBlock cfiBlock780
          CFI EndBlock cfiPicker781

        RSEG CODE:CODE:NOROOT(1)
?Subroutine19:
          CFI Block cfiCond782 Using cfiCommon0
          CFI Function ??functionMenu
          CFI Conditional ??CrossCallReturnLabel_399
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond783 Using cfiCommon0
          CFI (cfiCond783) Function ??functionReportVisitorsTotal
          CFI (cfiCond783) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond783) CFA_SP SP+4
          CFI Block cfiCond784 Using cfiCommon0
          CFI (cfiCond784) Function ??functionSerialNumber
          CFI (cfiCond784) Conditional ??CrossCallReturnLabel_401
          CFI (cfiCond784) R26 Frame(CFA_Y, -2)
          CFI (cfiCond784) R27 Frame(CFA_Y, -1)
          CFI (cfiCond784) CFA_SP SP+4
          CFI (cfiCond784) CFA_Y Y+2
          CFI Block cfiPicker785 Using cfiCommon1
          CFI (cfiPicker785) NoFunction
          CFI (cfiPicker785) Picker
        RCALL   ?Subroutine98
??CrossCallReturnLabel_306:
        RCALL   ?Subroutine100
??CrossCallReturnLabel_211:
        LDI     R16, 12
          CFI EndBlock cfiCond782
          CFI EndBlock cfiCond783
          CFI EndBlock cfiCond784
          CFI EndBlock cfiPicker785
        REQUIRE ??Subroutine135_0
        ;               // Fall through to label ??Subroutine135_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine135_0:
          CFI Block cfiCond786 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_402
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond787 Using cfiCommon0
          CFI (cfiCond787) Function ??functionSetupWorkDay
          CFI (cfiCond787) Conditional ??CrossCallReturnLabel_403
          CFI (cfiCond787) R24 Frame(CFA_Y, -4)
          CFI (cfiCond787) R25 Frame(CFA_Y, -3)
          CFI (cfiCond787) R26 Frame(CFA_Y, -2)
          CFI (cfiCond787) R27 Frame(CFA_Y, -1)
          CFI (cfiCond787) CFA_SP SP+4
          CFI (cfiCond787) CFA_Y Y+4
          CFI Block cfiCond788 Using cfiCommon0
          CFI (cfiCond788) Function ??functionSetupWorkWeek
          CFI (cfiCond788) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond788) R26 Frame(CFA_Y, -2)
          CFI (cfiCond788) R27 Frame(CFA_Y, -1)
          CFI (cfiCond788) CFA_SP SP+4
          CFI (cfiCond788) CFA_Y Y+2
          CFI Block cfiCond789 Using cfiCommon0
          CFI (cfiCond789) Function ??functionSetCheckPassword
          CFI (cfiCond789) Conditional ??CrossCallReturnLabel_405
          CFI (cfiCond789) R24 Frame(CFA_Y, -4)
          CFI (cfiCond789) R25 Frame(CFA_Y, -3)
          CFI (cfiCond789) R26 Frame(CFA_Y, -2)
          CFI (cfiCond789) R27 Frame(CFA_Y, -1)
          CFI (cfiCond789) CFA_SP SP+4
          CFI (cfiCond789) CFA_Y Y+4
          CFI Block cfiCond790 Using cfiCommon0
          CFI (cfiCond790) Function ??functionMenu
          CFI (cfiCond790) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond790) R26 Frame(CFA_Y, -2)
          CFI (cfiCond790) R27 Frame(CFA_Y, -1)
          CFI (cfiCond790) CFA_SP SP+4
          CFI (cfiCond790) CFA_Y Y+2
          CFI Block cfiCond791 Using cfiCommon0
          CFI (cfiCond791) Function ??functionReportVisitorsTotal
          CFI (cfiCond791) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond791) CFA_SP SP+4
          CFI Block cfiCond792 Using cfiCommon0
          CFI (cfiCond792) Function ??functionSerialNumber
          CFI (cfiCond792) Conditional ??CrossCallReturnLabel_401
          CFI (cfiCond792) R26 Frame(CFA_Y, -2)
          CFI (cfiCond792) R27 Frame(CFA_Y, -1)
          CFI (cfiCond792) CFA_SP SP+4
          CFI (cfiCond792) CFA_Y Y+2
          CFI Block cfiPicker793 Using cfiCommon1
          CFI (cfiPicker793) NoFunction
          CFI (cfiPicker793) Picker
        CALL    ??refreshDisplay
          CFI EndBlock cfiCond786
          CFI EndBlock cfiCond787
          CFI EndBlock cfiCond788
          CFI EndBlock cfiCond789
          CFI EndBlock cfiCond790
          CFI EndBlock cfiCond791
          CFI EndBlock cfiCond792
          CFI EndBlock cfiPicker793
        REQUIRE ??Subroutine136_0
        ;               // Fall through to label ??Subroutine136_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine136_0:
          CFI Block cfiCond794 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_406
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond795 Using cfiCommon0
          CFI (cfiCond795) Function ??functionSetupDateTime
          CFI (cfiCond795) Conditional ??CrossCallReturnLabel_402
          CFI (cfiCond795) R26 Frame(CFA_Y, -2)
          CFI (cfiCond795) R27 Frame(CFA_Y, -1)
          CFI (cfiCond795) CFA_SP SP+4
          CFI (cfiCond795) CFA_Y Y+2
          CFI Block cfiCond796 Using cfiCommon0
          CFI (cfiCond796) Function ??functionSetupWorkDay
          CFI (cfiCond796) Conditional ??CrossCallReturnLabel_403
          CFI (cfiCond796) R24 Frame(CFA_Y, -4)
          CFI (cfiCond796) R25 Frame(CFA_Y, -3)
          CFI (cfiCond796) R26 Frame(CFA_Y, -2)
          CFI (cfiCond796) R27 Frame(CFA_Y, -1)
          CFI (cfiCond796) CFA_SP SP+4
          CFI (cfiCond796) CFA_Y Y+4
          CFI Block cfiCond797 Using cfiCommon0
          CFI (cfiCond797) Function ??functionSetupWorkWeek
          CFI (cfiCond797) Conditional ??CrossCallReturnLabel_404
          CFI (cfiCond797) R26 Frame(CFA_Y, -2)
          CFI (cfiCond797) R27 Frame(CFA_Y, -1)
          CFI (cfiCond797) CFA_SP SP+4
          CFI (cfiCond797) CFA_Y Y+2
          CFI Block cfiCond798 Using cfiCommon0
          CFI (cfiCond798) Function ??functionSetCheckPassword
          CFI (cfiCond798) Conditional ??CrossCallReturnLabel_405
          CFI (cfiCond798) R24 Frame(CFA_Y, -4)
          CFI (cfiCond798) R25 Frame(CFA_Y, -3)
          CFI (cfiCond798) R26 Frame(CFA_Y, -2)
          CFI (cfiCond798) R27 Frame(CFA_Y, -1)
          CFI (cfiCond798) CFA_SP SP+4
          CFI (cfiCond798) CFA_Y Y+4
          CFI Block cfiCond799 Using cfiCommon0
          CFI (cfiCond799) Function ??functionMenu
          CFI (cfiCond799) Conditional ??CrossCallReturnLabel_399
          CFI (cfiCond799) R26 Frame(CFA_Y, -2)
          CFI (cfiCond799) R27 Frame(CFA_Y, -1)
          CFI (cfiCond799) CFA_SP SP+4
          CFI (cfiCond799) CFA_Y Y+2
          CFI Block cfiCond800 Using cfiCommon0
          CFI (cfiCond800) Function ??functionReportVisitorsTotal
          CFI (cfiCond800) Conditional ??CrossCallReturnLabel_400
          CFI (cfiCond800) CFA_SP SP+4
          CFI Block cfiCond801 Using cfiCommon0
          CFI (cfiCond801) Function ??functionSerialNumber
          CFI (cfiCond801) Conditional ??CrossCallReturnLabel_401
          CFI (cfiCond801) R26 Frame(CFA_Y, -2)
          CFI (cfiCond801) R27 Frame(CFA_Y, -1)
          CFI (cfiCond801) CFA_SP SP+4
          CFI (cfiCond801) CFA_Y Y+2
          CFI Block cfiPicker802 Using cfiCommon1
          CFI (cfiPicker802) NoFunction
          CFI (cfiPicker802) Picker
        LDI     R16, 0
        STS     (??curStatisticRecord + 33), R16
        RET
          CFI EndBlock cfiCond794
          CFI EndBlock cfiCond795
          CFI EndBlock cfiCond796
          CFI EndBlock cfiCond797
          CFI EndBlock cfiCond798
          CFI EndBlock cfiCond799
          CFI EndBlock cfiCond800
          CFI EndBlock cfiCond801
          CFI EndBlock cfiPicker802

        RSEG CODE:CODE:NOROOT(1)
?Subroutine82:
          CFI Block cfiCond803 Using cfiCommon0
          CFI Function ??functionSafeBattRemove
          CFI Conditional ??CrossCallReturnLabel_177
          CFI CFA_SP SP+4
          CFI Block cfiCond804 Using cfiCommon0
          CFI (cfiCond804) Function ??functionSetupWorkToday
          CFI (cfiCond804) Conditional ??CrossCallReturnLabel_178
          CFI (cfiCond804) CFA_SP SP+4
          CFI Block cfiCond805 Using cfiCommon0
          CFI (cfiCond805) Function ??functionSetCheckPassword
          CFI (cfiCond805) Conditional ??CrossCallReturnLabel_179
          CFI (cfiCond805) R24 Frame(CFA_Y, -4)
          CFI (cfiCond805) R25 Frame(CFA_Y, -3)
          CFI (cfiCond805) R26 Frame(CFA_Y, -2)
          CFI (cfiCond805) R27 Frame(CFA_Y, -1)
          CFI (cfiCond805) CFA_SP SP+4
          CFI (cfiCond805) CFA_Y Y+4
          CFI Block cfiCond806 Using cfiCommon0
          CFI (cfiCond806) Function ??functionSetCheckPassword
          CFI (cfiCond806) Conditional ??CrossCallReturnLabel_180
          CFI (cfiCond806) R24 Frame(CFA_Y, -4)
          CFI (cfiCond806) R25 Frame(CFA_Y, -3)
          CFI (cfiCond806) R26 Frame(CFA_Y, -2)
          CFI (cfiCond806) R27 Frame(CFA_Y, -1)
          CFI (cfiCond806) CFA_SP SP+4
          CFI (cfiCond806) CFA_Y Y+4
          CFI Block cfiCond807 Using cfiCommon0
          CFI (cfiCond807) Function ??functionResetNum
          CFI (cfiCond807) Conditional ??CrossCallReturnLabel_181
          CFI (cfiCond807) R24 Frame(CFA_Y, -5)
          CFI (cfiCond807) R25 Frame(CFA_Y, -4)
          CFI (cfiCond807) R26 Frame(CFA_Y, -3)
          CFI (cfiCond807) R27 Frame(CFA_Y, -2)
          CFI (cfiCond807) R4 Frame(CFA_Y, -1)
          CFI (cfiCond807) CFA_SP SP+4
          CFI (cfiCond807) CFA_Y Y+5
          CFI Block cfiCond808 Using cfiCommon0
          CFI (cfiCond808) Function ??functionSetupInventCnt
          CFI (cfiCond808) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_10
          CFI (cfiCond808) CFA_SP SP+6
          CFI Block cfiCond809 Using cfiCommon0
          CFI (cfiCond809) Function ??functionSetupBacklight
          CFI (cfiCond809) Conditional ??CrossCallReturnLabel_182, ??CrossCallReturnLabel_11
          CFI (cfiCond809) CFA_SP SP+6
          CFI Block cfiPicker810 Using cfiCommon1
          CFI (cfiPicker810) NoFunction
          CFI (cfiPicker810) Picker
        RCALL   ?Subroutine114
??CrossCallReturnLabel_267:
        TST     R16
        RET
          CFI EndBlock cfiCond803
          CFI EndBlock cfiCond804
          CFI EndBlock cfiCond805
          CFI EndBlock cfiCond806
          CFI EndBlock cfiCond807
          CFI EndBlock cfiCond808
          CFI EndBlock cfiCond809
          CFI EndBlock cfiPicker810
// 1398 

        RSEG CODE:CODE:NOROOT(1)
// 1399   void functionSetupPassword()
??functionSetupPassword:
          CFI Block cfiBlock811 Using cfiCommon0
          CFI Function ??functionSetupPassword
// 1400   {
// 1401     functionSetCheckPassword(false);
        FUNCALL ??functionSetupPassword, ??functionSetCheckPassword
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        LDI     R16, 0
        RJMP    ??functionSetCheckPassword
          CFI EndBlock cfiBlock811
// 1402   }
// 1403 

        RSEG CODE:CODE:NOROOT(1)
// 1404   void functionAuthenticationScreen()
??functionAuthenticationScreen:
          CFI Block cfiBlock812 Using cfiCommon0
          CFI Function ??functionAuthenticationScreen
// 1405   {
// 1406     functionSetCheckPassword(true);
        FUNCALL ??functionAuthenticationScreen, ??functionSetCheckPassword
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        LDI     R16, 1
        RJMP    ??functionSetCheckPassword
          CFI EndBlock cfiBlock812
// 1407   }
// 1408 

        RSEG CODE:CODE:NOROOT(1)
// 1409   void functionReset()
??functionReset:
          CFI Block cfiBlock813 Using cfiCommon0
          CFI Function ??functionReset
// 1410   {
// 1411     switch(menuStack[menuStackPos].funcState)
        FUNCALL ??functionReset, ??resetCounters
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReset, ??resetToFactoryDefaults
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReset, ??resetData
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReset, ??resetFull
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReset, ??transitionDown
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionReset, ??displayDoneMessage
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine4
??CrossCallReturnLabel_9:
        BREQ    ??functionReset_1
        DEC     R16
        BREQ    ??functionReset_2
        DEC     R16
        BREQ    ??functionReset_3
        DEC     R16
        BREQ    ??functionReset_4
        RJMP    ??functionReset_5
// 1412     {
// 1413       case 1:
// 1414         DeviceManager::resetCounters();
??functionReset_1:
        CALL    ??resetCounters
// 1415         break;
        RJMP    ??functionReset_5
// 1416 
// 1417       case 2:
// 1418         DeviceManager::resetToFactoryDefaults();
??functionReset_2:
        CALL    ??resetToFactoryDefaults
// 1419         break;
        RJMP    ??functionReset_5
// 1420 
// 1421       case 3:
// 1422         DeviceManager::resetData();
??functionReset_3:
        CALL    ??resetData
// 1423         break;
        RJMP    ??functionReset_5
// 1424 
// 1425       case 4:
// 1426         DeviceManager::resetFull();
??functionReset_4:
        CALL    ??resetFull
// 1427         break;
// 1428     }
// 1429 
// 1430     processMenuOptionChanged();
??functionReset_5:
        RCALL   ??Subroutine137_0
??CrossCallReturnLabel_409:
        RJMP    ??displayDoneMessage
          CFI EndBlock cfiBlock813
// 1431   }

        RSEG CODE:CODE:NOROOT(1)
?Subroutine51:
          CFI Block cfiCond814 Using cfiCommon0
          CFI Function ??functionSetupSaveMode
          CFI Conditional ??CrossCallReturnLabel_418
          CFI CFA_SP SP+4
          CFI Block cfiCond815 Using cfiCommon0
          CFI (cfiCond815) Function ??functionSetupWorkToday
          CFI (cfiCond815) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond815) CFA_SP SP+4
          CFI Block cfiCond816 Using cfiCommon0
          CFI (cfiCond816) Function ??setWorkDaySetup
          CFI (cfiCond816) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond816) R26 Frame(CFA_Y, -2)
          CFI (cfiCond816) R27 Frame(CFA_Y, -1)
          CFI (cfiCond816) CFA_SP SP+4
          CFI (cfiCond816) CFA_Y Y+2
          CFI Block cfiCond817 Using cfiCommon0
          CFI (cfiCond817) Function ??functionSetupBacklight
          CFI (cfiCond817) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond817) CFA_SP SP+4
          CFI Block cfiPicker818 Using cfiCommon1
          CFI (cfiPicker818) NoFunction
          CFI (cfiPicker818) Picker
        RCALL   ?Subroutine112
          CFI EndBlock cfiCond814
          CFI EndBlock cfiCond815
          CFI EndBlock cfiCond816
          CFI EndBlock cfiCond817
          CFI EndBlock cfiPicker818
??CrossCallReturnLabel_252:
        REQUIRE ??Subroutine137_0
        ;               // Fall through to label ??Subroutine137_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine137_0:
          CFI Block cfiCond819 Using cfiCommon0
          CFI Function ??processMenuOptionChanged
          CFI Conditional ??CrossCallReturnLabel_414
          CFI CFA_SP SP+4
          CFI Block cfiCond820 Using cfiCommon0
          CFI (cfiCond820) Function ??functionCancel
          CFI (cfiCond820) Conditional ??CrossCallReturnLabel_413
          CFI (cfiCond820) CFA_SP SP+4
          CFI Block cfiCond821 Using cfiCommon0
          CFI (cfiCond821) Function ??functionSetupSummerTime
          CFI (cfiCond821) Conditional ??CrossCallReturnLabel_412
          CFI (cfiCond821) CFA_SP SP+4
          CFI Block cfiCond822 Using cfiCommon0
          CFI (cfiCond822) Function ??functionSetupDetector
          CFI (cfiCond822) Conditional ??CrossCallReturnLabel_411
          CFI (cfiCond822) CFA_SP SP+4
          CFI Block cfiCond823 Using cfiCommon0
          CFI (cfiCond823) Function ??functionSetupInventCnt
          CFI (cfiCond823) Conditional ??CrossCallReturnLabel_410
          CFI (cfiCond823) CFA_SP SP+4
          CFI Block cfiCond824 Using cfiCommon0
          CFI (cfiCond824) Function ??functionReset
          CFI (cfiCond824) Conditional ??CrossCallReturnLabel_409
          CFI (cfiCond824) CFA_SP SP+4
          CFI Block cfiCond825 Using cfiCommon0
          CFI (cfiCond825) Function ??run
          CFI (cfiCond825) Conditional ??CrossCallReturnLabel_408
          CFI (cfiCond825) CFA_SP SP+4
          CFI Block cfiCond826 Using cfiCommon0
          CFI (cfiCond826) Function ??run
          CFI (cfiCond826) Conditional ??CrossCallReturnLabel_407
          CFI (cfiCond826) CFA_SP SP+4
          CFI Block cfiCond827 Using cfiCommon0
          CFI (cfiCond827) Function ??functionSetupSaveMode
          CFI (cfiCond827) Conditional ??CrossCallReturnLabel_418
          CFI (cfiCond827) CFA_SP SP+4
          CFI Block cfiCond828 Using cfiCommon0
          CFI (cfiCond828) Function ??functionSetupWorkToday
          CFI (cfiCond828) Conditional ??CrossCallReturnLabel_417
          CFI (cfiCond828) CFA_SP SP+4
          CFI Block cfiCond829 Using cfiCommon0
          CFI (cfiCond829) Function ??setWorkDaySetup
          CFI (cfiCond829) Conditional ??CrossCallReturnLabel_416
          CFI (cfiCond829) R26 Frame(CFA_Y, -2)
          CFI (cfiCond829) R27 Frame(CFA_Y, -1)
          CFI (cfiCond829) CFA_SP SP+4
          CFI (cfiCond829) CFA_Y Y+2
          CFI Block cfiCond830 Using cfiCommon0
          CFI (cfiCond830) Function ??functionSetupBacklight
          CFI (cfiCond830) Conditional ??CrossCallReturnLabel_415
          CFI (cfiCond830) CFA_SP SP+4
          CFI Block cfiPicker831 Using cfiCommon1
          CFI (cfiPicker831) NoFunction
          CFI (cfiPicker831) Picker
        RJMP    ??transitionDown
          CFI EndBlock cfiCond819
          CFI EndBlock cfiCond820
          CFI EndBlock cfiCond821
          CFI EndBlock cfiCond822
          CFI EndBlock cfiCond823
          CFI EndBlock cfiCond824
          CFI EndBlock cfiCond825
          CFI EndBlock cfiCond826
          CFI EndBlock cfiCond827
          CFI EndBlock cfiCond828
          CFI EndBlock cfiCond829
          CFI EndBlock cfiCond830
          CFI EndBlock cfiPicker831

        RSEG CODE:CODE:NOROOT(1)
?Subroutine4:
          CFI Block cfiCond832 Using cfiCommon0
          CFI Function ??functionReports
          CFI Conditional ??CrossCallReturnLabel_7
          CFI R24 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+13
          CFI Block cfiCond833 Using cfiCommon0
          CFI (cfiCond833) Function ??functionReports
          CFI (cfiCond833) Conditional ??CrossCallReturnLabel_8
          CFI (cfiCond833) R24 Frame(CFA_Y, -3)
          CFI (cfiCond833) R26 Frame(CFA_Y, -2)
          CFI (cfiCond833) R27 Frame(CFA_Y, -1)
          CFI (cfiCond833) CFA_SP SP+4
          CFI (cfiCond833) CFA_Y Y+13
          CFI Block cfiCond834 Using cfiCommon0
          CFI (cfiCond834) Function ??functionReset
          CFI (cfiCond834) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond834) CFA_SP SP+4
          CFI Block cfiPicker835 Using cfiCommon1
          CFI (cfiPicker835) NoFunction
          CFI (cfiPicker835) Picker
        RCALL   ?Subroutine114
??CrossCallReturnLabel_265:
        DEC     R16
        RET
          CFI EndBlock cfiCond832
          CFI EndBlock cfiCond833
          CFI EndBlock cfiCond834
          CFI EndBlock cfiPicker835
// 1432 

        RSEG CODE:CODE:NOROOT(1)
// 1433   void functionBatteryVoltage()
??functionBatteryVoltage:
          CFI Block cfiBlock836 Using cfiCommon0
          CFI Function ??functionBatteryVoltage
// 1434   {
        FUNCALL ??functionBatteryVoltage, ??clearBuffer
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionBatteryVoltage, ??getString
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionBatteryVoltage, ??str2Buf
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionBatteryVoltage, ??getBatteryCurrentVoltage
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionBatteryVoltage, ??num2Buf
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionBatteryVoltage, ??num2Buf
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionBatteryVoltage, ??refreshDisplay
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        ST      -Y, R25
          CFI R25 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R24
          CFI R24 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
// 1435     LCDDriver::clearBuffer();
        RCALL   ?Subroutine42
// 1436 
// 1437     LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_INFO_BATTERY_VOLTAGE), LCDDriver::LCDTextIdentation_Center);
??CrossCallReturnLabel_66:
        LDI     R16, 117
        RCALL   ?Subroutine27
// 1438 
// 1439     unsigned short curBatteryVoltage = GLOBAL::ADC::getBatteryCurrentVoltage();
??CrossCallReturnLabel_369:
        CALL    ??getBatteryCurrentVoltage
        MOVW    R25:R24, R17:R16
// 1440 
// 1441     LCDDriver::num2Buf(1, 15, curBatteryVoltage % 100, 2, '0');
        RCALL   ?Subroutine66
??CrossCallReturnLabel_146:
        RCALL   ?Subroutine49
??CrossCallReturnLabel_247:
        RCALL   ?Subroutine106
??CrossCallReturnLabel_220:
        LDI     R17, 15
        RCALL   ?Subroutine115
// 1442     LCDDriver::displayState.line[1][13] = '.';
??CrossCallReturnLabel_396:
        LDI     R16, 46
        STS     (??displayState + 33), R16
// 1443     LCDDriver::num2Buf(1, 12, curBatteryVoltage / 100, 2);
        LDI     R19, 0
        LDI     R18, 2
        LDI     R20, 100
        LDI     R21, 0
        MOVW    R17:R16, R25:R24
        RCALL   ?Subroutine110
??CrossCallReturnLabel_245:
        MOVW    R21:R20, R17:R16
        RCALL   ?Subroutine0
// 1444 
// 1445     LCDDriver::refreshDisplay();
// 1446 
// 1447     isTransition = false;
// 1448   }
??CrossCallReturnLabel_378:
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+1
        LD      R25, Y+
          CFI R25 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock836

        RSEG CODE:CODE:NOROOT(1)
?Subroutine65:
          CFI Block cfiCond837 Using cfiCommon0
          CFI Function ??functionSetupWorkDay
          CFI Conditional ??CrossCallReturnLabel_223
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond838 Using cfiCommon0
          CFI (cfiCond838) Function ??functionSetupWorkDay
          CFI (cfiCond838) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond838) R24 Frame(CFA_Y, -4)
          CFI (cfiCond838) R25 Frame(CFA_Y, -3)
          CFI (cfiCond838) R26 Frame(CFA_Y, -2)
          CFI (cfiCond838) R27 Frame(CFA_Y, -1)
          CFI (cfiCond838) CFA_SP SP+4
          CFI (cfiCond838) CFA_Y Y+4
          CFI Block cfiPicker839 Using cfiCommon1
          CFI (cfiPicker839) NoFunction
          CFI (cfiPicker839) Picker
        RCALL   ?Subroutine110
          CFI EndBlock cfiCond837
          CFI EndBlock cfiCond838
          CFI EndBlock cfiPicker839
??CrossCallReturnLabel_249:
        REQUIRE ?Subroutine106
        ;               // Fall through to label ?Subroutine106

        RSEG CODE:CODE:NOROOT(1)
?Subroutine106:
          CFI Block cfiCond840 Using cfiCommon0
          CFI Function ??functionSetupDateTime
          CFI Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_24
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+6
          CFI CFA_Y Y+2
          CFI Block cfiCond841 Using cfiCommon0
          CFI (cfiCond841) Function ??functionReports
          CFI (cfiCond841) Conditional ??CrossCallReturnLabel_222, ??CrossCallReturnLabel_25
          CFI (cfiCond841) R24 Frame(CFA_Y, -3)
          CFI (cfiCond841) R26 Frame(CFA_Y, -2)
          CFI (cfiCond841) R27 Frame(CFA_Y, -1)
          CFI (cfiCond841) CFA_SP SP+6
          CFI (cfiCond841) CFA_Y Y+13
          CFI Block cfiCond842 Using cfiCommon0
          CFI (cfiCond842) Function ??functionSafeBattRemove
          CFI (cfiCond842) Conditional ??CrossCallReturnLabel_78
          CFI (cfiCond842) CFA_SP SP+4
          CFI Block cfiCond843 Using cfiCommon0
          CFI (cfiCond843) Function ??functionSetupWorkDay
          CFI (cfiCond843) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond843) R24 Frame(CFA_Y, -4)
          CFI (cfiCond843) R25 Frame(CFA_Y, -3)
          CFI (cfiCond843) R26 Frame(CFA_Y, -2)
          CFI (cfiCond843) R27 Frame(CFA_Y, -1)
          CFI (cfiCond843) CFA_SP SP+4
          CFI (cfiCond843) CFA_Y Y+4
          CFI Block cfiCond844 Using cfiCommon0
          CFI (cfiCond844) Function ??functionSetupWorkDay
          CFI (cfiCond844) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond844) R24 Frame(CFA_Y, -4)
          CFI (cfiCond844) R25 Frame(CFA_Y, -3)
          CFI (cfiCond844) R26 Frame(CFA_Y, -2)
          CFI (cfiCond844) R27 Frame(CFA_Y, -1)
          CFI (cfiCond844) CFA_SP SP+4
          CFI (cfiCond844) CFA_Y Y+4
          CFI Block cfiCond845 Using cfiCommon0
          CFI (cfiCond845) Function ??functionSetupDetectionTime
          CFI (cfiCond845) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_377
          CFI (cfiCond845) CFA_SP SP+6
          CFI Block cfiCond846 Using cfiCommon0
          CFI (cfiCond846) Function ??functionBatteryVoltage
          CFI (cfiCond846) Conditional ??CrossCallReturnLabel_221, ??CrossCallReturnLabel_378
          CFI (cfiCond846) R24 Frame(CFA_Y, -2)
          CFI (cfiCond846) R25 Frame(CFA_Y, -1)
          CFI (cfiCond846) CFA_SP SP+6
          CFI (cfiCond846) CFA_Y Y+2
          CFI Block cfiCond847 Using cfiCommon0
          CFI (cfiCond847) Function ??functionSetupWorkDay
          CFI (cfiCond847) Conditional ??CrossCallReturnLabel_223
          CFI (cfiCond847) R24 Frame(CFA_Y, -4)
          CFI (cfiCond847) R25 Frame(CFA_Y, -3)
          CFI (cfiCond847) R26 Frame(CFA_Y, -2)
          CFI (cfiCond847) R27 Frame(CFA_Y, -1)
          CFI (cfiCond847) CFA_SP SP+4
          CFI (cfiCond847) CFA_Y Y+4
          CFI Block cfiCond848 Using cfiCommon0
          CFI (cfiCond848) Function ??functionSetupWorkDay
          CFI (cfiCond848) Conditional ??CrossCallReturnLabel_224
          CFI (cfiCond848) R24 Frame(CFA_Y, -4)
          CFI (cfiCond848) R25 Frame(CFA_Y, -3)
          CFI (cfiCond848) R26 Frame(CFA_Y, -2)
          CFI (cfiCond848) R27 Frame(CFA_Y, -1)
          CFI (cfiCond848) CFA_SP SP+4
          CFI (cfiCond848) CFA_Y Y+4
          CFI Block cfiCond849 Using cfiCommon0
          CFI (cfiCond849) Function ??functionReports
          CFI (cfiCond849) Conditional ??CrossCallReturnLabel_219
          CFI (cfiCond849) R24 Frame(CFA_Y, -3)
          CFI (cfiCond849) R26 Frame(CFA_Y, -2)
          CFI (cfiCond849) R27 Frame(CFA_Y, -1)
          CFI (cfiCond849) CFA_SP SP+4
          CFI (cfiCond849) CFA_Y Y+13
          CFI Block cfiCond850 Using cfiCommon0
          CFI (cfiCond850) Function ??functionBatteryVoltage
          CFI (cfiCond850) Conditional ??CrossCallReturnLabel_220
          CFI (cfiCond850) R24 Frame(CFA_Y, -2)
          CFI (cfiCond850) R25 Frame(CFA_Y, -1)
          CFI (cfiCond850) CFA_SP SP+4
          CFI (cfiCond850) CFA_Y Y+2
          CFI Block cfiPicker851 Using cfiCommon1
          CFI (cfiPicker851) NoFunction
          CFI (cfiPicker851) Picker
        LDI     R22, 0
        LDI     R23, 0
        RET
          CFI EndBlock cfiCond840
          CFI EndBlock cfiCond841
          CFI EndBlock cfiCond842
          CFI EndBlock cfiCond843
          CFI EndBlock cfiCond844
          CFI EndBlock cfiCond845
          CFI EndBlock cfiCond846
          CFI EndBlock cfiCond847
          CFI EndBlock cfiCond848
          CFI EndBlock cfiCond849
          CFI EndBlock cfiCond850
          CFI EndBlock cfiPicker851
// 1449 

        RSEG CODE:CODE:NOROOT(1)
// 1450   void displaySensorQuality(unsigned char _lineNum, unsigned char _qualityPct)
??displaySensorQuality:
          CFI Block cfiBlock852 Using cfiCommon0
          CFI Function ??displaySensorQuality
// 1451   {
        FUNCALL ??displaySensorQuality, ??num2Buf
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        ST      -Y, R5
          CFI R5 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R4
          CFI R4 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        ST      -Y, R26
          CFI R26 Frame(CFA_Y, -3)
          CFI CFA_Y Y+3
        ST      -Y, R24
          CFI R24 Frame(CFA_Y, -4)
          CFI CFA_Y Y+4
        REQUIRE ?Register_R4_is_cg_reg
        REQUIRE ?Register_R5_is_cg_reg
        MOV     R24, R16
        MOV     R26, R17
// 1452     LCDDriver::displayState.line[_lineNum][0] = '[';
        LDI     R16, 16
        MUL     R24, R16
        LDI     R16, LOW(??displayState)
        MOV     R4, R16
        LDI     R16, (??displayState) >> 8
        MOV     R5, R16
        ADD     R4, R0
        ADC     R5, R1
        LDI     R16, 91
        MOVW    R31:R30, R5:R4
        STD     Z+4, R16
// 1453     LCDDriver::displayState.line[_lineNum][15] = ']';
        LDI     R16, 93
        STD     Z+19, R16
// 1454     unsigned char curQulityBarNum = (((unsigned short)_qualityPct) * 14) / 100;
        LDI     R16, 14
        MUL     R26, R16
        MOVW    R17:R16, R1:R0
        RCALL   ?Subroutine49
// 1455     if ((_qualityPct > 95) || (curQulityBarNum > 14))
??CrossCallReturnLabel_248:
        CPI     R26, 96
        BRCC    ??displaySensorQuality_1
        CPI     R16, 15
        BRCS    ??displaySensorQuality_2
// 1456     {
// 1457       curQulityBarNum = 14;
??displaySensorQuality_1:
        LDI     R16, 14
// 1458     }
// 1459 
// 1460     for (unsigned char i = 0; i < 14; i++)
??displaySensorQuality_2:
        LDI     R18, 0
        MOV     R30, R4
// 1461     {
// 1462       LCDDriver::displayState.line[_lineNum][1 + i] = (i < curQulityBarNum) ? LCD_DISPLAY_SYMBOL_BLACKBLOCK : LCD_DISPLAY_SYMBOL_DASH;
??displaySensorQuality_3:
        CP      R18, R16
        BRCC    ??displaySensorQuality_4
        LDI     R17, 255
        RJMP    ??displaySensorQuality_5
??displaySensorQuality_4:
        LDI     R17, 45
??displaySensorQuality_5:
        STD     Z+5, R17
// 1463     }
        INC     R18
        ADIW    R31:R30, 1
        CPI     R18, 14
        BRCS    ??displaySensorQuality_3
// 1464 
// 1465     if (curQulityBarNum <= 11)
        CPI     R16, 12
        BRCC    ??CrossCallReturnLabel_390
// 1466     {
// 1467       LCDDriver::displayState.line[_lineNum][14] = '%';
        LDI     R16, 37
        MOVW    R31:R30, R5:R4
        STD     Z+18, R16
// 1468       LCDDriver::num2Buf(_lineNum, 13, _qualityPct, 2, LCD_DISPLAY_SYMBOL_SPACE);
        LDI     R19, 32
        LDI     R18, 2
        MOV     R20, R26
        RCALL   ?Subroutine99
// 1469     }
??CrossCallReturnLabel_205:
        LDI     R17, 13
        MOV     R16, R24
        RCALL   ?Subroutine122
// 1470   }
??CrossCallReturnLabel_390:
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+3
        LD      R26, Y+
          CFI R26 SameValue
          CFI CFA_Y Y+2
        LD      R4, Y+
          CFI R4 SameValue
          CFI CFA_Y Y+1
        LD      R5, Y+
          CFI R5 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock852

        RSEG CODE:CODE:NOROOT(1)
?Subroutine49:
          CFI Block cfiCond853 Using cfiCommon0
          CFI Function ??functionBatteryVoltage
          CFI Conditional ??CrossCallReturnLabel_247
          CFI R24 Frame(CFA_Y, -2)
          CFI R25 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond854 Using cfiCommon0
          CFI (cfiCond854) Function ??displaySensorQuality
          CFI (cfiCond854) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond854) R24 Frame(CFA_Y, -4)
          CFI (cfiCond854) R26 Frame(CFA_Y, -3)
          CFI (cfiCond854) R4 Frame(CFA_Y, -2)
          CFI (cfiCond854) R5 Frame(CFA_Y, -1)
          CFI (cfiCond854) CFA_SP SP+4
          CFI (cfiCond854) CFA_Y Y+4
          CFI Block cfiPicker855 Using cfiCommon1
          CFI (cfiPicker855) NoFunction
          CFI (cfiPicker855) Picker
        LDI     R20, 100
        LDI     R21, 0
          CFI EndBlock cfiCond853
          CFI EndBlock cfiCond854
          CFI EndBlock cfiPicker855
        REQUIRE ?Subroutine110
        ;               // Fall through to label ?Subroutine110

        RSEG CODE:CODE:NOROOT(1)
?Subroutine110:
          CFI Block cfiCond856 Using cfiCommon0
          CFI Function ??functionSafeBattRemove
          CFI Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_78
          CFI CFA_SP SP+6
          CFI Block cfiCond857 Using cfiCommon0
          CFI (cfiCond857) Function ??functionSetupWorkDay
          CFI (cfiCond857) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_79
          CFI (cfiCond857) R24 Frame(CFA_Y, -4)
          CFI (cfiCond857) R25 Frame(CFA_Y, -3)
          CFI (cfiCond857) R26 Frame(CFA_Y, -2)
          CFI (cfiCond857) R27 Frame(CFA_Y, -1)
          CFI (cfiCond857) CFA_SP SP+6
          CFI (cfiCond857) CFA_Y Y+4
          CFI Block cfiCond858 Using cfiCommon0
          CFI (cfiCond858) Function ??functionSetupWorkDay
          CFI (cfiCond858) Conditional ??CrossCallReturnLabel_246, ??CrossCallReturnLabel_80
          CFI (cfiCond858) R24 Frame(CFA_Y, -4)
          CFI (cfiCond858) R25 Frame(CFA_Y, -3)
          CFI (cfiCond858) R26 Frame(CFA_Y, -2)
          CFI (cfiCond858) R27 Frame(CFA_Y, -1)
          CFI (cfiCond858) CFA_SP SP+6
          CFI (cfiCond858) CFA_Y Y+4
          CFI Block cfiCond859 Using cfiCommon0
          CFI (cfiCond859) Function ??functionBatteryVoltage
          CFI (cfiCond859) Conditional ??CrossCallReturnLabel_245
          CFI (cfiCond859) R24 Frame(CFA_Y, -2)
          CFI (cfiCond859) R25 Frame(CFA_Y, -1)
          CFI (cfiCond859) CFA_SP SP+4
          CFI (cfiCond859) CFA_Y Y+2
          CFI Block cfiCond860 Using cfiCommon0
          CFI (cfiCond860) Function ??functionSetupWorkDay
          CFI (cfiCond860) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_223
          CFI (cfiCond860) R24 Frame(CFA_Y, -4)
          CFI (cfiCond860) R25 Frame(CFA_Y, -3)
          CFI (cfiCond860) R26 Frame(CFA_Y, -2)
          CFI (cfiCond860) R27 Frame(CFA_Y, -1)
          CFI (cfiCond860) CFA_SP SP+6
          CFI (cfiCond860) CFA_Y Y+4
          CFI Block cfiCond861 Using cfiCommon0
          CFI (cfiCond861) Function ??functionSetupWorkDay
          CFI (cfiCond861) Conditional ??CrossCallReturnLabel_249, ??CrossCallReturnLabel_224
          CFI (cfiCond861) R24 Frame(CFA_Y, -4)
          CFI (cfiCond861) R25 Frame(CFA_Y, -3)
          CFI (cfiCond861) R26 Frame(CFA_Y, -2)
          CFI (cfiCond861) R27 Frame(CFA_Y, -1)
          CFI (cfiCond861) CFA_SP SP+6
          CFI (cfiCond861) CFA_Y Y+4
          CFI Block cfiCond862 Using cfiCommon0
          CFI (cfiCond862) Function ??functionBatteryVoltage
          CFI (cfiCond862) Conditional ??CrossCallReturnLabel_247
          CFI (cfiCond862) R24 Frame(CFA_Y, -2)
          CFI (cfiCond862) R25 Frame(CFA_Y, -1)
          CFI (cfiCond862) CFA_SP SP+4
          CFI (cfiCond862) CFA_Y Y+2
          CFI Block cfiCond863 Using cfiCommon0
          CFI (cfiCond863) Function ??displaySensorQuality
          CFI (cfiCond863) Conditional ??CrossCallReturnLabel_248
          CFI (cfiCond863) R24 Frame(CFA_Y, -4)
          CFI (cfiCond863) R26 Frame(CFA_Y, -3)
          CFI (cfiCond863) R4 Frame(CFA_Y, -2)
          CFI (cfiCond863) R5 Frame(CFA_Y, -1)
          CFI (cfiCond863) CFA_SP SP+4
          CFI (cfiCond863) CFA_Y Y+4
          CFI Block cfiPicker864 Using cfiCommon1
          CFI (cfiPicker864) NoFunction
          CFI (cfiPicker864) Picker
        JMP     ?US_DIVMOD_L02
          CFI EndBlock cfiCond856
          CFI EndBlock cfiCond857
          CFI EndBlock cfiCond858
          CFI EndBlock cfiCond859
          CFI EndBlock cfiCond860
          CFI EndBlock cfiCond861
          CFI EndBlock cfiCond862
          CFI EndBlock cfiCond863
          CFI EndBlock cfiPicker864
// 1471 

        RSEG CODE:CODE:NOROOT(1)
// 1472   void functionSensorQuality()
??functionSensorQuality:
          CFI Block cfiBlock865 Using cfiCommon0
          CFI Function ??functionSensorQuality
// 1473   {
        FUNCALL ??functionSensorQuality, ??popBuff
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSensorQuality, ??clearBuffer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSensorQuality, ??getCounterQualityPct1
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSensorQuality, ??displaySensorQuality
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSensorQuality, ??getCounterQualityPct2
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSensorQuality, ??displaySensorQuality
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSensorQuality, ??refreshDisplay
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSensorQuality, ??setInactivityTimeTimeout
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        LDI     R16, 1
        RCALL   ?Subroutine36
??CrossCallReturnLabel_50:
        RJMP    ??CrossCallReturnLabel_355
// 1474     isPhotoActive = true;
// 1475 
// 1476     while (transitionKey)
// 1477     {
// 1478       switch (transitionKey)
// 1479       {
// 1480         case 1:
// 1481           isPhotoActive = false;
// 1482           return;
// 1483       }
// 1484 
// 1485       getNextTransitionKey();
??functionSensorQuality_1:
        RCALL   ?Subroutine34
??CrossCallReturnLabel_355:
        RCALL   ?Subroutine50
??CrossCallReturnLabel_95:
        BREQ    ??CrossCallReturnLabel_343
        CPI     R16, 1
        BRNE    ??functionSensorQuality_2
        LDI     R16, 0
        RJMP    ?Subroutine36
??functionSensorQuality_2:
        RCALL   ?Subroutine33
// 1486     }
??CrossCallReturnLabel_332:
        BRNE    ??functionSensorQuality_1
        RCALL   ??Subroutine132_0
// 1487 
// 1488     LCDDriver::clearBuffer();
??CrossCallReturnLabel_343:
        RCALL   ?Subroutine42
// 1489     displaySensorQuality(0, PhotoSensor::getCounterQualityPct1());
??CrossCallReturnLabel_65:
        CALL    ??getCounterQualityPct1
        MOV     R17, R16
        LDI     R16, 0
        RCALL   ??displaySensorQuality
// 1490     if (GLOBAL::DeviceProfile::DeviceCounterConfig.detectDirection >= GLOBAL::DeviceProfile::CounterDetectDirectionType_StrongDetection)
        RCALL   ?Subroutine68
??CrossCallReturnLabel_151:
        CPI     R16, 3
        BRCS    ??functionSensorQuality_3
// 1491     {
// 1492       displaySensorQuality(1, PhotoSensor::getCounterQualityPct2());
        CALL    ??getCounterQualityPct2
        MOV     R17, R16
        LDI     R16, 1
        RCALL   ??displaySensorQuality
// 1493     }
// 1494 
// 1495     LCDDriver::refreshDisplay();
??functionSensorQuality_3:
        RCALL   ?Subroutine32
// 1496 
// 1497     setInactivityTimeTimeout();
??CrossCallReturnLabel_385:
        JMP     ??setInactivityTimeTimeout
          CFI EndBlock cfiBlock865
// 1498   }
// 1499 

        RSEG CODE:CODE:NOROOT(1)
// 1500   void functionSetupBacklightMenu()
??functionSetupBacklightMenu:
          CFI Block cfiBlock866 Using cfiCommon0
          CFI Function ??functionSetupBacklightMenu
// 1501   {
// 1502     if (activeFunctionChanged)
        FUNCALL ??functionSetupBacklightMenu, ??functionMenu
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine59
??CrossCallReturnLabel_127:
        BREQ    ??CrossCallReturnLabel_113
// 1503     {
// 1504       menuStack[menuStackPos].funcState = USER_MENU_SETUP_ENERGYSAVING_BACKLIGHT + DeviceAdvancedSetup.backlight;
        LDS     R16, (??DeviceAdvancedSetup + 1)
        SUBI    R16, 173
        RCALL   ?Subroutine55
// 1505     }
// 1506 
// 1507     functionMenu();
??CrossCallReturnLabel_113:
        RJMP    ??functionMenu
          CFI EndBlock cfiBlock866
// 1508   }
// 1509 

        RSEG CODE:CODE:NOROOT(1)
// 1510   void functionSetupBacklight()
??functionSetupBacklight:
          CFI Block cfiBlock867 Using cfiCommon0
          CFI Function ??functionSetupBacklight
// 1511   {
// 1512     DeviceAdvancedSetup.backlight = (bool)menuStack[menuStackPos].funcState;
        FUNCALL ??functionSetupBacklight, ??saveDeviceAdvancedSetup
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupBacklight, ??transitionDown
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupBacklight, ??displayDoneMessage
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine6
??CrossCallReturnLabel_11:
        STS     (??DeviceAdvancedSetup + 1), R16
// 1513     DeviceManager::saveDeviceAdvancedSetup();
        RCALL   ?Subroutine51
??CrossCallReturnLabel_415:
        RJMP    ??displayDoneMessage
          CFI EndBlock cfiBlock867
// 1514     processMenuOptionChanged();
// 1515   }

        RSEG CODE:CODE:NOROOT(1)
?Subroutine6:
          CFI Block cfiCond868 Using cfiCommon0
          CFI Function ??functionSetupInventCnt
          CFI Conditional ??CrossCallReturnLabel_10
          CFI CFA_SP SP+4
          CFI Block cfiCond869 Using cfiCommon0
          CFI (cfiCond869) Function ??functionSetupBacklight
          CFI (cfiCond869) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond869) CFA_SP SP+4
          CFI Block cfiPicker870 Using cfiCommon1
          CFI (cfiPicker870) NoFunction
          CFI (cfiPicker870) Picker
        RCALL   ?Subroutine82
??CrossCallReturnLabel_182:
        BREQ    ??Subroutine6_0
        LDI     R16, 1
        RET
??Subroutine6_0:
        LDI     R16, 0
        RET
          CFI EndBlock cfiCond868
          CFI EndBlock cfiCond869
          CFI EndBlock cfiPicker870
// 1516 

        RSEG CODE:CODE:NOROOT(1)
// 1517   void functionSerialNumber()
??functionSerialNumber:
          CFI Block cfiBlock871 Using cfiCommon0
          CFI Function ??functionSerialNumber
// 1518   {
        FUNCALL ??functionSerialNumber, ??clearBuffer
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSerialNumber, ??getString
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSerialNumber, ??str2Buf
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSerialNumber, ??refreshDisplay
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine54
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+2
// 1519     LCDDriver::clearBuffer();
??CrossCallReturnLabel_104:
        RCALL   ?Subroutine42
// 1520 
// 1521     LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_INFO_SERIALNUM), LCDDriver::LCDTextIdentation_Center);
??CrossCallReturnLabel_64:
        LDI     R16, 116
        RCALL   ?Subroutine27
// 1522 
// 1523     for (unsigned char i = 0; i < DEVICE_SERIAL_NUMBER_STR_LNG; i++)
??CrossCallReturnLabel_370:
        LDI     R26, LOW(??displayState)
        LDI     R27, (??displayState) >> 8
        LDI     R30, LOW(??DeviceSerialNumber)
        LDI     R31, (??DeviceSerialNumber) >> 8
        LDI     R16, 16
// 1524     {
// 1525       LCDDriver::displayState.line[1][i] = GLOBAL::DeviceProfile::DeviceSerialNumber.serialNumStr[i];
??functionSerialNumber_1:
        LDD     R17, Z+7
        ADIW    R27:R26, 20
        ST      X, R17
        SBIW    R27:R26, 19
// 1526     }
        ADIW    R31:R30, 1
        DEC     R16
        BRNE    ??functionSerialNumber_1
// 1527 
// 1528     LCDDriver::refreshDisplay();
        RCALL   ?Subroutine19
// 1529 
// 1530     isTransition = false;
// 1531   }
??CrossCallReturnLabel_401:
        RJMP    ?Subroutine58
          CFI EndBlock cfiBlock871
// 1532 

        RSEG CODE:CODE:NOROOT(1)
// 1533   void functionResetNum()
??functionResetNum:
          CFI Block cfiBlock872 Using cfiCommon0
          CFI Function ??functionResetNum
// 1534   {
        FUNCALL ??functionResetNum, ??clearBuffer
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionResetNum, ??getTotalRestarts
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionResetNum, ??getTotalDataReset
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionResetNum, ??getTotalFactoryReset
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionResetNum, ??getTotalPwdFails
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionResetNum, ??getString
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionResetNum, ??str2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionResetNum, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionResetNum, ??refreshDisplay
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        ST      -Y, R4
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        RCALL   ?Subroutine52
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI CFA_Y Y+5
??CrossCallReturnLabel_98:
        REQUIRE ?Register_R4_is_cg_reg
// 1535     LCDDriver::clearBuffer();
        RCALL   ?Subroutine42
// 1536 
// 1537     unsigned short curStrNum = 0;
??CrossCallReturnLabel_63:
        CLR     R4
// 1538     unsigned long curValue = 0;
        LDI     R24, 0
        LDI     R25, 0
        LDI     R26, 0
        LDI     R27, 0
// 1539     switch (menuStack[menuStackPos].funcState)
        RCALL   ?Subroutine82
??CrossCallReturnLabel_181:
        BREQ    ??functionResetNum_1
        DEC     R16
        BREQ    ??functionResetNum_2
        DEC     R16
        BREQ    ??functionResetNum_3
        DEC     R16
        BREQ    ??functionResetNum_4
        RJMP    ??functionResetNum_5
// 1540     {
// 1541       case 0:
// 1542         curStrNum = USER_TEXT_CONST_INFO_RESETNUM_RESTARTS;
??functionResetNum_1:
        LDI     R16, 111
        MOV     R4, R16
// 1543         curValue = DeviceManager::getTotalRestarts();
        CALL    ??getTotalRestarts
        RJMP    ??functionResetNum_6
// 1544         break;
// 1545 
// 1546       case 1:
// 1547         curStrNum = USER_TEXT_CONST_INFO_RESETNUM_DATARESET;
??functionResetNum_2:
        LDI     R16, 112
        MOV     R4, R16
// 1548         curValue = DeviceManager::getTotalDataReset();
        CALL    ??getTotalDataReset
        RJMP    ??functionResetNum_6
// 1549         break;
// 1550 
// 1551       case 2:
// 1552         curStrNum = USER_TEXT_CONST_INFO_RESETNUM_FACTORYRESET;
??functionResetNum_3:
        LDI     R16, 113
        MOV     R4, R16
// 1553         curValue = DeviceManager::getTotalFactoryReset();
        CALL    ??getTotalFactoryReset
        RJMP    ??functionResetNum_6
// 1554         break;
// 1555 
// 1556       case 3:
// 1557         curStrNum = USER_TEXT_CONST_INFO_RESETNUM_PASSWORDFAILS_L1;
??functionResetNum_4:
        LDI     R16, 114
        MOV     R4, R16
// 1558         curValue = DeviceManager::getTotalPwdFails();
        CALL    ??getTotalPwdFails
??functionResetNum_6:
        MOVW    R25:R24, R17:R16
        MOVW    R27:R26, R19:R18
// 1559         break;
// 1560     }
// 1561 
// 1562     LCDDriver::str2Buf(0, getString(curStrNum), LCDDriver::LCDTextIdentation_Center);
??functionResetNum_5:
        MOV     R16, R4
        RCALL   ?Subroutine27
// 1563     LCDDriver::num2Buf(1, 15, curValue, 10);
??CrossCallReturnLabel_371:
        LDI     R19, 0
        LDI     R18, 10
        MOVW    R21:R20, R25:R24
        MOVW    R23:R22, R27:R26
        LDI     R17, 15
        RCALL   ?Subroutine85
// 1564 
// 1565     LCDDriver::refreshDisplay();
??CrossCallReturnLabel_381:
        RCALL   ?Subroutine93
// 1566   }
??CrossCallReturnLabel_386:
        RCALL   ?Subroutine39
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI CFA_Y Y+1
??CrossCallReturnLabel_57:
        LD      R4, Y+
          CFI R4 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock872

        RSEG CODE:CODE:NOROOT(1)
?Subroutine85:
          CFI Block cfiCond873 Using cfiCommon0
          CFI Function ??functionSetupDetectionTime
          CFI Conditional ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_377
          CFI CFA_SP SP+6
          CFI Block cfiCond874 Using cfiCommon0
          CFI (cfiCond874) Function ??functionBatteryVoltage
          CFI (cfiCond874) Conditional ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_378
          CFI (cfiCond874) R24 Frame(CFA_Y, -2)
          CFI (cfiCond874) R25 Frame(CFA_Y, -1)
          CFI (cfiCond874) CFA_SP SP+6
          CFI (cfiCond874) CFA_Y Y+2
          CFI Block cfiCond875 Using cfiCommon0
          CFI (cfiCond875) Function ??functionSetupInactivityTime
          CFI (cfiCond875) Conditional ??CrossCallReturnLabel_380, ??CrossCallReturnLabel_379
          CFI (cfiCond875) CFA_SP SP+6
          CFI Block cfiCond876 Using cfiCommon0
          CFI (cfiCond876) Function ??functionSetupWorkDay
          CFI (cfiCond876) Conditional ??CrossCallReturnLabel_382
          CFI (cfiCond876) R24 Frame(CFA_Y, -4)
          CFI (cfiCond876) R25 Frame(CFA_Y, -3)
          CFI (cfiCond876) R26 Frame(CFA_Y, -2)
          CFI (cfiCond876) R27 Frame(CFA_Y, -1)
          CFI (cfiCond876) CFA_SP SP+4
          CFI (cfiCond876) CFA_Y Y+4
          CFI Block cfiCond877 Using cfiCommon0
          CFI (cfiCond877) Function ??functionResetNum
          CFI (cfiCond877) Conditional ??CrossCallReturnLabel_381
          CFI (cfiCond877) R24 Frame(CFA_Y, -5)
          CFI (cfiCond877) R25 Frame(CFA_Y, -4)
          CFI (cfiCond877) R26 Frame(CFA_Y, -3)
          CFI (cfiCond877) R27 Frame(CFA_Y, -2)
          CFI (cfiCond877) R4 Frame(CFA_Y, -1)
          CFI (cfiCond877) CFA_SP SP+4
          CFI (cfiCond877) CFA_Y Y+5
          CFI Block cfiPicker878 Using cfiCommon1
          CFI (cfiPicker878) NoFunction
          CFI (cfiPicker878) Picker
        RCALL   ?Subroutine115
??CrossCallReturnLabel_398:
        LDI     R21, 0
        LDI     R20, 0
        LDI     R19, 1
        RET
          CFI EndBlock cfiCond873
          CFI EndBlock cfiCond874
          CFI EndBlock cfiCond875
          CFI EndBlock cfiCond876
          CFI EndBlock cfiCond877
          CFI EndBlock cfiPicker878
// 1567 

        RSEG CODE:CODE:NOROOT(1)
// 1568   void run()
??run:
          CFI Block cfiBlock879 Using cfiCommon0
          CFI Function ??run
// 1569   {
        FUNCALL ??run, ??ready_1
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run, ??getTimer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run, ??leaveInterface
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run, ??getTimer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run, ??leaveInterface
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run, ??clearBuff
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run, ??transitionDown
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run, ??setTimer
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run, ??popBuff
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run, ??setInactivityTimeTimeout
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run, ??functionSetCheckPassword
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run, ??functionIncorrectFunction
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run, ??transitionDown
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine35
??CrossCallReturnLabel_44:
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_32
// 1570     if (!isEnabled)
// 1571     {
// 1572       return;
// 1573     }
// 1574 
// 1575     if (!LCDDriver::ready())
        CALL    ??ready_1
        TST     R16
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_32
// 1576     {
// 1577       return;
// 1578     }
// 1579 
// 1580     if (isTimeOutEnabled && (!GLOBAL::MultyThreading::getTimer(GLOBALTIMERS_USERINTERFACE_TIMEOUT)))
        LDS     R16, (??curStatisticRecord + 29)
        TST     R16
        BREQ    ??CrossCallReturnLabel_300
        LDI     R16, 6
        RCALL   ?Subroutine75
??CrossCallReturnLabel_159:
        OR      R16, R17
        BRNE    ??CrossCallReturnLabel_300
// 1581     {
// 1582       leaveInterface();
        RCALL   ?Subroutine37
// 1583 
// 1584       if (enabled())
??CrossCallReturnLabel_52:
        RCALL   ?Subroutine35
??CrossCallReturnLabel_45:
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_32
// 1585       {
// 1586         isTransition = true;
        CALL    ??Subroutine126_0
// 1587       }
// 1588       else
// 1589       {
// 1590         return;
// 1591       }
// 1592     }
// 1593 
// 1594     if (!GLOBAL::MultyThreading::getTimer(GLOBALTIMERS_USERINTERFACE_REFRESHTIME))
??CrossCallReturnLabel_300:
        LDI     R16, 7
        RCALL   ?Subroutine75
??CrossCallReturnLabel_158:
        OR      R16, R17
        BRNE    ??CrossCallReturnLabel_186
// 1595     {
// 1596       if (!isMenuActive)
        RCALL   ?Subroutine40
??CrossCallReturnLabel_58:
        BRNE    ??CrossCallReturnLabel_51
// 1597       {
// 1598         leaveInterface();
        RCALL   ?Subroutine37
// 1599       }
// 1600 
// 1601       if (enabled())
??CrossCallReturnLabel_51:
        RCALL   ?Subroutine35
??CrossCallReturnLabel_46:
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_32
// 1602       {
// 1603         if (transitionDownOnRefresh)
        LDS     R16, (??curStatisticRecord + 35)
        TST     R16
        BREQ    ??run_1
// 1604         {
// 1605           transitionDownOnRefresh = false;
        LDI     R16, 0
        STS     (??curStatisticRecord + 35), R16
// 1606           KeyBoardDriver::clearBuff();
        CALL    ??clearBuff
// 1607 
// 1608           transitionDown();
        RCALL   ??Subroutine137_0
// 1609 
// 1610           if (!enabled())
// 1611           {
// 1612             return;
// 1613           }
// 1614         }
??CrossCallReturnLabel_408:
        RCALL   ?Subroutine35
??CrossCallReturnLabel_47:
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_32
// 1615 
// 1616         isTransition = true;
??run_1:
        CALL    ??Subroutine126_0
// 1617         setRefreshTimeout();
??CrossCallReturnLabel_301:
        RCALL   ?Subroutine18
// 1618       }
// 1619       else
// 1620       {
// 1621         return;
// 1622       }
// 1623     }
// 1624 
// 1625     if (transitionDownOnRefresh)
??CrossCallReturnLabel_186:
        LDS     R16, (??curStatisticRecord + 35)
        TST     R16
        BREQ    $+2+2
        RJMP    ??CrossCallReturnLabel_32
// 1626     {
// 1627       return;
// 1628     }
// 1629 
// 1630     transitionKey = KeyBoardDriver::popBuff();
        RCALL   ?Subroutine24
// 1631     if (transitionKey)
??CrossCallReturnLabel_28:
        BREQ    ??CrossCallReturnLabel_54
// 1632     {
// 1633       if ((!isMenuActive) &&
// 1634           GLOBAL::DeviceProfile::DeviceAdvancedSetup.backlight &&
// 1635           (transitionKey != 1))
        LDS     R18, (??curStatisticRecord + 30)
        LDS     R19, (??DeviceAdvancedSetup + 1)
        LDI     R17, 1
        EOR     R19, R17
        OR      R18, R19
        BRNE    ??CrossCallReturnLabel_31
        CPI     R16, 1
        BREQ    ??CrossCallReturnLabel_31
// 1636       {
// 1637         transitionKey = 0;
        RCALL   ?Subroutine25
// 1638       }
// 1639 
// 1640       isTransition = true;
??CrossCallReturnLabel_31:
        STS     (??curStatisticRecord + 33), R17
// 1641       isMenuActive = true;
        STS     (??curStatisticRecord + 30), R17
// 1642 
// 1643       setInactivityTimeTimeout();
        RCALL   ?Subroutine38
// 1644     }
// 1645 
// 1646     if (isTransition)
??CrossCallReturnLabel_54:
        LDS     R16, (??curStatisticRecord + 33)
        TST     R16
        BREQ    ??CrossCallReturnLabel_407
// 1647     {
// 1648       keyIterator = USER_INTERFACE_KEY_ITERATOR_MAX;
        LDI     R16, 16
        STS     (??curStatisticRecord + 36), R16
// 1649 
// 1650       if (isMenuActive && (menuAuthLevel == MenuAuthLevel_None))
        RCALL   ?Subroutine40
??CrossCallReturnLabel_59:
        BREQ    ??run_2
        LDS     R16, (??curStatisticRecord + 32)
        TST     R16
        BRNE    ??run_3
// 1651       {
// 1652         activeFunctionChanged = (activeFunction != USER_FUNCTION_AUTHENTICATION_SCREEN);
        LDS     R16, (??curStatisticRecord + 26)
        CPI     R16, 72
        BREQ    ??run_4
        LDI     R16, 1
        RJMP    ??run_5
??run_4:
        LDI     R16, 0
??run_5:
        STS     (??curStatisticRecord + 27), R16
// 1653         activeFunction = USER_FUNCTION_AUTHENTICATION_SCREEN;
        LDI     R16, 72
        STS     (??curStatisticRecord + 26), R16
// 1654         functionAuthenticationScreen();
        LDI     R16, 1
        RCALL   ??functionSetCheckPassword
// 1655       }
// 1656 
// 1657       if ((!isMenuActive) || (menuAuthLevel != MenuAuthLevel_None))
        RCALL   ?Subroutine40
??CrossCallReturnLabel_60:
        BREQ    ??run_2
??run_3:
        LDS     R16, (??curStatisticRecord + 32)
        TST     R16
        BREQ    ??run_6
// 1658       {
// 1659         activeFunctionChanged = (activeFunction != menuStack[menuStackPos].menuFunction);
??run_2:
        RCALL   ?Subroutine120
??CrossCallReturnLabel_281:
        RCALL   ?Subroutine113
??CrossCallReturnLabel_256:
        LD      R17, Z
        LDS     R16, (??curStatisticRecord + 26)
        CP      R16, R17
        BREQ    ??run_7
        LDI     R16, 1
        RJMP    ??run_8
??run_7:
        LDI     R16, 0
??run_8:
        STS     (??curStatisticRecord + 27), R16
// 1660         activeFunction = menuStack[menuStackPos].menuFunction;
        STS     (??curStatisticRecord + 26), R17
// 1661 
// 1662         if (menuStack[menuStackPos].menuReference.entryPoint)
        LDD     R16, Z+1
        LDD     R17, Z+2
        MOV     R18, R16
        OR      R18, R17
        BREQ    ??run_9
// 1663         {
// 1664           (*(void(*)(void))(menuStack[menuStackPos].menuReference.entryPoint))();
        MOVW    R31:R30, R17:R16
        ICALL
        RJMP    ??run_6
// 1665         }
// 1666         else
// 1667         {
// 1668           functionIncorrectFunction();
??run_9:
        RCALL   ??functionIncorrectFunction
// 1669         }
// 1670       }
// 1671 
// 1672       if (transitionKey == 1)
??run_6:
        LDS     R16, (??curStatisticRecord + 34)
        CPI     R16, 1
        BRNE    ??CrossCallReturnLabel_407
// 1673       {
// 1674         transitionDown();
        RCALL   ??Subroutine137_0
// 1675       }
// 1676     }
// 1677 
// 1678     transitionKey = 0;
??CrossCallReturnLabel_407:
        RCALL   ?Subroutine25
// 1679   }
??CrossCallReturnLabel_32:
        RET
          CFI EndBlock cfiBlock879

        RSEG CODE:CODE:NOROOT(1)
?Subroutine113:
          CFI Block cfiCond880 Using cfiCommon0
          CFI Function ??functionSetupDetectionTime
          CFI Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_0
          CFI CFA_SP SP+6
          CFI Block cfiCond881 Using cfiCommon0
          CFI (cfiCond881) Function ??functionSetupDetectionTime
          CFI (cfiCond881) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_1
          CFI (cfiCond881) CFA_SP SP+6
          CFI Block cfiCond882 Using cfiCommon0
          CFI (cfiCond882) Function ??functionSetupInactivityTime
          CFI (cfiCond882) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_2
          CFI (cfiCond882) CFA_SP SP+6
          CFI Block cfiCond883 Using cfiCommon0
          CFI (cfiCond883) Function ??functionSetupInactivityTime
          CFI (cfiCond883) Conditional ??CrossCallReturnLabel_257, ??CrossCallReturnLabel_3
          CFI (cfiCond883) CFA_SP SP+6
          CFI Block cfiCond884 Using cfiCommon0
          CFI (cfiCond884) Function ??functionSetupInactivityTime
          CFI (cfiCond884) Conditional ??CrossCallReturnLabel_255
          CFI (cfiCond884) CFA_SP SP+4
          CFI Block cfiCond885 Using cfiCommon0
          CFI (cfiCond885) Function ??run
          CFI (cfiCond885) Conditional ??CrossCallReturnLabel_256
          CFI (cfiCond885) CFA_SP SP+4
          CFI Block cfiPicker886 Using cfiCommon1
          CFI (cfiPicker886) NoFunction
          CFI (cfiPicker886) Picker
        LDI     R30, LOW(??menuStack)
        LDI     R31, (??menuStack) >> 8
        ADD     R30, R0
        ADC     R31, R1
        RET
          CFI EndBlock cfiCond880
          CFI EndBlock cfiCond881
          CFI EndBlock cfiCond882
          CFI EndBlock cfiCond883
          CFI EndBlock cfiCond884
          CFI EndBlock cfiCond885
          CFI EndBlock cfiPicker886

        RSEG CODE:CODE:NOROOT(1)
?Subroutine75:
          CFI Block cfiCond887 Using cfiCommon0
          CFI Function ??functionSafeBattRemove
          CFI Conditional ??CrossCallReturnLabel_160
          CFI CFA_SP SP+4
          CFI Block cfiCond888 Using cfiCommon0
          CFI (cfiCond888) Function ??run
          CFI (cfiCond888) Conditional ??CrossCallReturnLabel_159
          CFI (cfiCond888) CFA_SP SP+4
          CFI Block cfiCond889 Using cfiCommon0
          CFI (cfiCond889) Function ??run
          CFI (cfiCond889) Conditional ??CrossCallReturnLabel_158
          CFI (cfiCond889) CFA_SP SP+4
          CFI Block cfiPicker890 Using cfiCommon1
          CFI (cfiPicker890) NoFunction
          CFI (cfiPicker890) Picker
        JMP     ??getTimer
          CFI EndBlock cfiCond887
          CFI EndBlock cfiCond888
          CFI EndBlock cfiCond889
          CFI EndBlock cfiPicker890

        RSEG CODE:CODE:NOROOT(1)
?Subroutine40:
          CFI Block cfiCond891 Using cfiCommon0
          CFI Function ??run
          CFI Conditional ??CrossCallReturnLabel_58
          CFI CFA_SP SP+4
          CFI Block cfiCond892 Using cfiCommon0
          CFI (cfiCond892) Function ??run
          CFI (cfiCond892) Conditional ??CrossCallReturnLabel_59
          CFI (cfiCond892) CFA_SP SP+4
          CFI Block cfiCond893 Using cfiCommon0
          CFI (cfiCond893) Function ??run
          CFI (cfiCond893) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond893) CFA_SP SP+4
          CFI Block cfiPicker894 Using cfiCommon1
          CFI (cfiPicker894) NoFunction
          CFI (cfiPicker894) Picker
        LDS     R16, (??curStatisticRecord + 30)
        TST     R16
        RET
          CFI EndBlock cfiCond891
          CFI EndBlock cfiCond892
          CFI EndBlock cfiCond893
          CFI EndBlock cfiPicker894

        RSEG CODE:CODE:NOROOT(1)
?Subroutine37:
          CFI Block cfiCond895 Using cfiCommon0
          CFI Function ??transitionDown
          CFI Conditional ??CrossCallReturnLabel_53
          CFI CFA_SP SP+4
          CFI Block cfiCond896 Using cfiCommon0
          CFI (cfiCond896) Function ??run
          CFI (cfiCond896) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond896) CFA_SP SP+4
          CFI Block cfiCond897 Using cfiCommon0
          CFI (cfiCond897) Function ??run
          CFI (cfiCond897) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond897) CFA_SP SP+4
          CFI Block cfiPicker898 Using cfiCommon1
          CFI (cfiPicker898) NoFunction
          CFI (cfiPicker898) Picker
        JMP     ??leaveInterface
          CFI EndBlock cfiCond895
          CFI EndBlock cfiCond896
          CFI EndBlock cfiCond897
          CFI EndBlock cfiPicker898

        RSEG CODE:CODE:NOROOT(1)
?Subroutine35:
          CFI Block cfiCond899 Using cfiCommon0
          CFI Function ??run
          CFI Conditional ??CrossCallReturnLabel_44
          CFI CFA_SP SP+4
          CFI Block cfiCond900 Using cfiCommon0
          CFI (cfiCond900) Function ??run
          CFI (cfiCond900) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond900) CFA_SP SP+4
          CFI Block cfiCond901 Using cfiCommon0
          CFI (cfiCond901) Function ??run
          CFI (cfiCond901) Conditional ??CrossCallReturnLabel_46
          CFI (cfiCond901) CFA_SP SP+4
          CFI Block cfiCond902 Using cfiCommon0
          CFI (cfiCond902) Function ??run
          CFI (cfiCond902) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond902) CFA_SP SP+4
          CFI Block cfiPicker903 Using cfiCommon1
          CFI (cfiPicker903) NoFunction
          CFI (cfiPicker903) Picker
        LDS     R16, (??curStatisticRecord + 28)
        TST     R16
        RET
          CFI EndBlock cfiCond899
          CFI EndBlock cfiCond900
          CFI EndBlock cfiCond901
          CFI EndBlock cfiCond902
          CFI EndBlock cfiPicker903

        RSEG CODE:CODE:NOROOT(1)
?Subroutine25:
          CFI Block cfiCond904 Using cfiCommon0
          CFI Function ??functionSetCheckPassword
          CFI Conditional ??CrossCallReturnLabel_30
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond905 Using cfiCommon0
          CFI (cfiCond905) Function ??run
          CFI (cfiCond905) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond905) CFA_SP SP+4
          CFI Block cfiCond906 Using cfiCommon0
          CFI (cfiCond906) Function ??run
          CFI (cfiCond906) Conditional ??CrossCallReturnLabel_32
          CFI (cfiCond906) CFA_SP SP+4
          CFI Block cfiPicker907 Using cfiCommon1
          CFI (cfiPicker907) NoFunction
          CFI (cfiPicker907) Picker
        LDI     R16, 0
        STS     (??curStatisticRecord + 34), R16
        RET
          CFI EndBlock cfiCond904
          CFI EndBlock cfiCond905
          CFI EndBlock cfiCond906
          CFI EndBlock cfiPicker907

        RSEG CODE:CODE:NOROOT(1)
?Subroutine24:
          CFI Block cfiCond908 Using cfiCommon0
          CFI Function ??functionSetCheckPassword
          CFI Conditional ??CrossCallReturnLabel_29
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond909 Using cfiCommon0
          CFI (cfiCond909) Function ??run
          CFI (cfiCond909) Conditional ??CrossCallReturnLabel_28
          CFI (cfiCond909) CFA_SP SP+4
          CFI Block cfiPicker910 Using cfiCommon1
          CFI (cfiPicker910) NoFunction
          CFI (cfiPicker910) Picker
        LDI     R16, 0
        RCALL   ?Subroutine97
??CrossCallReturnLabel_195:
        STS     (??curStatisticRecord + 34), R16
        TST     R16
        RET
          CFI EndBlock cfiCond908
          CFI EndBlock cfiCond909
          CFI EndBlock cfiPicker910

        RSEG CODE:CODE:NOROOT(1)
?Subroutine18:
          CFI Block cfiCond911 Using cfiCommon0
          CFI Function ??enable
          CFI Conditional ??CrossCallReturnLabel_185
          CFI R24 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+1
          CFI Block cfiCond912 Using cfiCommon0
          CFI (cfiCond912) Function ??run
          CFI (cfiCond912) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond912) CFA_SP SP+4
          CFI Block cfiPicker913 Using cfiCommon1
          CFI (cfiPicker913) NoFunction
          CFI (cfiPicker913) Picker
        LDI     R18, 136
        LDI     R19, 19
          CFI EndBlock cfiCond911
          CFI EndBlock cfiCond912
          CFI EndBlock cfiPicker913
        REQUIRE ?Subroutine89
        ;               // Fall through to label ?Subroutine89

        RSEG CODE:CODE:NOROOT(1)
?Subroutine89:
          CFI Block cfiCond914 Using cfiCommon0
          CFI Function ??disable
          CFI Conditional ??CrossCallReturnLabel_187
          CFI CFA_SP SP+4
          CFI Block cfiCond915 Using cfiCommon0
          CFI (cfiCond915) Function ??enable
          CFI (cfiCond915) Conditional ??CrossCallReturnLabel_185
          CFI (cfiCond915) R24 Frame(CFA_Y, -1)
          CFI (cfiCond915) CFA_SP SP+4
          CFI (cfiCond915) CFA_Y Y+1
          CFI Block cfiCond916 Using cfiCommon0
          CFI (cfiCond916) Function ??run
          CFI (cfiCond916) Conditional ??CrossCallReturnLabel_186
          CFI (cfiCond916) CFA_SP SP+4
          CFI Block cfiPicker917 Using cfiCommon1
          CFI (cfiPicker917) NoFunction
          CFI (cfiPicker917) Picker
        LDI     R16, 7
        JMP     ??setTimer
          CFI EndBlock cfiCond914
          CFI EndBlock cfiCond915
          CFI EndBlock cfiCond916
          CFI EndBlock cfiPicker917

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,020H
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,021H
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,022H
__?EEARH:

        RSEG INITTAB:CODE:NOROOT(0)
`?<Segment init: NEAR_Z>`:
        DC16    SFE(NEAR_Z) - SFB(NEAR_Z)
        DC16    SFB(NEAR_Z)
        DC16    0
        REQUIRE ?need_segment_init

        END
// 1680 }
// 1681 
// 1682 #endif
// 
// 4 878 bytes in segment CODE
//     6 bytes in segment INITTAB
//    72 bytes in segment NEAR_F
//   135 bytes in segment NEAR_Z
// 
// 4 922 bytes of CODE memory (+ 34 bytes shared)
//   135 bytes of DATA memory
//
//Errors: none
//Warnings: none
