///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V6.12.1.50500 for Atmel AVR       02/Aug/2014  01:50:52 /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    Source file  =  D:\Projects\BatteryCounter\_micro\BattRX\CommonFunction /
//                    s.cpp                                                   /
//    Command line =  D:\Projects\BatteryCounter\_micro\BattRX\CommonFunction /
//                    s.cpp --cpu=m328p -ms -o "D:\Projects\BatteryCounter\_m /
//                    icro\BattRX\Release - Atmega328P\Obj\" -D NDEBUG -lA    /
//                    "D:\Projects\BatteryCounter\_micro\BattRX\Release -     /
//                    Atmega328P\List\" --initializers_in_flash               /
//                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e             /
//                    --eeprom_size 1024 --dlib --dlib_config "C:\Program     /
//                    Files (x86)\IAR Systems\Embedded Workbench              /
//                    6.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-sf-n.h" --eec++ -Ohs   /
//    List file    =  D:\Projects\BatteryCounter\_micro\BattRX\Release -      /
//                    Atmega328P\List\CommonFunctions.s90                     /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME CommonFunctions

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__cpu", "3"
        RTMODEL "__cpu_name", "ATmega328P"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ?UC_DIVMOD_L01

        PUBLIC ??bcd2int
        FUNCTION ??bcd2int,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??int2bcd
        FUNCTION ??int2bcd,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
// D:\Projects\BatteryCounter\_micro\BattRX\CommonFunctions.cpp
//    1 #ifndef __COMMONFUNCTIONS_CPP_
//    2 #define __COMMONFUNCTIONS_CPP_
//    3 
//    4 #include "CommonFunctions.h"
//    5 
//    6 namespace Functions
//    7 {
//    8   namespace Common
//    9   {

        RSEG CODE:CODE:NOROOT(1)
//   10     unsigned char bcd2int(unsigned char _value)
??bcd2int:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ??bcd2int
//   11     {
//   12       return ((((_value & 0xF0) >> 4) * 10) + ( _value & 0x0F));
        MOV     R18, R16
        SWAP    R18
        ANDI    R18, 0x0F
        LDI     R17, 10
        MUL     R18, R17
        ANDI    R16, 0x0F
        ADD     R16, R0
        RET
          CFI EndBlock cfiBlock0
//   13       //return _value - ((_value >> 4) * 6);
//   14     }
//   15 

        RSEG CODE:CODE:NOROOT(1)
//   16     unsigned char int2bcd(unsigned char _value)
??int2bcd:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ??int2bcd
//   17     {
        MOV     R17, R25
        MOV     R18, R24
        MOV     R25, R16
//   18       return ((((_value / 10) & 0x0F) << 4)+((_value % 10) & 0x0F));
        LDI     R20, 10
        CALL    ?UC_DIVMOD_L01
        MOV     R24, R16
        SWAP    R24
        ANDI    R24, 0xF0
        LDI     R20, 10
        MOV     R16, R25
        CALL    ?UC_DIVMOD_L01
        ANDI    R20, 0x0F
        ADD     R24, R20
        MOV     R16, R24
        MOV     R24, R18
        MOV     R25, R17
        RET
          CFI EndBlock cfiBlock1
//   19       //return _value + ((_value / 10) * 6);
//   20     }

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,020H
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,021H
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,022H
__?EEARH:

        END
//   21   }
//   22 }
//   23 
//   24 #endif
//   25 
// 
// 54 bytes in segment CODE
// 
// 54 bytes of CODE memory
//
//Errors: none
//Warnings: none
