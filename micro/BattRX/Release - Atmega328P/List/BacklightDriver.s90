///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V6.12.1.50500 for Atmel AVR       02/Aug/2014  01:50:52 /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    Source file  =  D:\Projects\BatteryCounter\_micro\BattRX\BacklightDrive /
//                    r.cpp                                                   /
//    Command line =  D:\Projects\BatteryCounter\_micro\BattRX\BacklightDrive /
//                    r.cpp --cpu=m328p -ms -o "D:\Projects\BatteryCounter\_m /
//                    icro\BattRX\Release - Atmega328P\Obj\" -D NDEBUG -lA    /
//                    "D:\Projects\BatteryCounter\_micro\BattRX\Release -     /
//                    Atmega328P\List\" --initializers_in_flash               /
//                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e             /
//                    --eeprom_size 1024 --dlib --dlib_config "C:\Program     /
//                    Files (x86)\IAR Systems\Embedded Workbench              /
//                    6.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-sf-n.h" --eec++ -Ohs   /
//    List file    =  D:\Projects\BatteryCounter\_micro\BattRX\Release -      /
//                    Atmega328P\List\BacklightDriver.s90                     /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME BacklightDriver

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__cpu", "3"
        RTMODEL "__cpu_name", "ATmega328P"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ?need_segment_init

        PUBWEAK `?<Segment init: NEAR_Z>`
        PUBLIC ??init
        FUNCTION ??init,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??isBacklightOn
        FUNCTION ??isBacklightOn,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??isSwitchedOn
        PUBLIC ??setBacklight
        FUNCTION ??setBacklight,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBWEAK _A_DDRB
        PUBWEAK _A_PORTB
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
`?<Name BacklightDriver 0>` SYMBOL "BacklightDriver"
??isSwitchedOn      SYMBOL "isSwitchedOn", `?<Name BacklightDriver 0>`

// D:\Projects\BatteryCounter\_micro\BattRX\BacklightDriver.cpp
//    1 #ifndef __BACKLIGHTDRIVER_CPP_
//    2 #define __BACKLIGHTDRIVER_CPP_
//    3 
//    4 #include "BacklightDriver.h"
//    5 #include "GlobalSpace.h"

        ASEGN ABSOLUTE:DATA:NOROOT,025H
// union <unnamed> volatile __io _A_PORTB
_A_PORTB:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,024H
// union <unnamed> volatile __io _A_DDRB
_A_DDRB:
        DS8 1
//    6 
//    7 namespace BacklightDriver
//    8 {

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//    9   bool isSwitchedOn = false;
??isSwitchedOn:
        DS8 1
//   10 

        RSEG CODE:CODE:NOROOT(1)
//   11   __monitor void init()
??init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ??init
//   12   {
        IN      R17, 0x3F
        CLI
//   13     LCD_BACKLIGHT_DIR = 1;
        SBI     0x04, 0x01
//   14     LCD_BACKLIGHT_PORT = 0;
        CBI     0x05, 0x01
//   15 
//   16     isSwitchedOn = false;
        LDI     R16, 0
        STS     ??isSwitchedOn, R16
//   17   }
        OUT     0x3F, R17
        RET
          CFI EndBlock cfiBlock0
        REQUIRE _A_DDRB
        REQUIRE _A_PORTB
//   18 

        RSEG CODE:CODE:NOROOT(1)
//   19   bool isBacklightOn()
??isBacklightOn:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ??isBacklightOn
//   20   {
//   21     return isSwitchedOn;
        LDS     R16, ??isSwitchedOn
        RET
          CFI EndBlock cfiBlock1
//   22   }
//   23 

        RSEG CODE:CODE:NOROOT(1)
//   24   void setBacklight(bool _switchOn)
??setBacklight:
          CFI Block cfiBlock2 Using cfiCommon0
          CFI Function ??setBacklight
//   25   {
//   26     if (_switchOn)
        TST     R16
        BREQ    ??setBacklight_1
//   27     {
//   28       LCD_BACKLIGHT_PORT = 1;
        SBI     0x05, 0x01
//   29       isSwitchedOn = true;
        LDI     R16, 1
        RJMP    ??setBacklight_2
//   30     }
//   31     else
//   32     {
//   33       LCD_BACKLIGHT_PORT = 0;
??setBacklight_1:
        CBI     0x05, 0x01
//   34       isSwitchedOn = false;
        LDI     R16, 0
??setBacklight_2:
        STS     ??isSwitchedOn, R16
//   35     }
//   36   }
        RET
          CFI EndBlock cfiBlock2
        REQUIRE _A_PORTB

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,020H
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,021H
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,022H
__?EEARH:

        RSEG INITTAB:CODE:NOROOT(0)
`?<Segment init: NEAR_Z>`:
        DC16    SFE(NEAR_Z) - SFB(NEAR_Z)
        DC16    SFB(NEAR_Z)
        DC16    0
        REQUIRE ?need_segment_init

        END
//   37 }
//   38 
//   39 #endif
// 
//  2 bytes in segment ABSOLUTE
// 44 bytes in segment CODE
//  6 bytes in segment INITTAB
//  1 byte  in segment NEAR_Z
// 
// 44 bytes of CODE memory (+ 6 bytes shared)
//  1 byte  of DATA memory (+ 2 bytes shared)
//
//Errors: none
//Warnings: none
