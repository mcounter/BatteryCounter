///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V6.12.1.50500 for Atmel AVR       02/Aug/2014  01:50:58 /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    Source file  =  D:\Projects\BatteryCounter\_micro\BattRX\UserInterface_ /
//                    Widget.cpp                                              /
//    Command line =  D:\Projects\BatteryCounter\_micro\BattRX\UserInterface_ /
//                    Widget.cpp --cpu=m328p -ms -o                           /
//                    "D:\Projects\BatteryCounter\_micro\BattRX\Release -     /
//                    Atmega328P\Obj\" -D NDEBUG -lA                          /
//                    "D:\Projects\BatteryCounter\_micro\BattRX\Release -     /
//                    Atmega328P\List\" --initializers_in_flash               /
//                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e             /
//                    --eeprom_size 1024 --dlib --dlib_config "C:\Program     /
//                    Files (x86)\IAR Systems\Embedded Workbench              /
//                    6.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-sf-n.h" --eec++ -Ohs   /
//    List file    =  D:\Projects\BatteryCounter\_micro\BattRX\Release -      /
//                    Atmega328P\List\UserInterface_Widget.s90                /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME UserInterface_Widget

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__cpu", "3"
        RTMODEL "__cpu_name", "ATmega328P"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ?ML_SRAM_SRAM_16_L07
        EXTERN ?Register_R10_is_cg_reg
        EXTERN ?Register_R11_is_cg_reg
        EXTERN ?Register_R12_is_cg_reg
        EXTERN ?Register_R13_is_cg_reg
        EXTERN ?Register_R14_is_cg_reg
        EXTERN ?Register_R15_is_cg_reg
        EXTERN ?Register_R4_is_cg_reg
        EXTERN ?Register_R5_is_cg_reg
        EXTERN ?Register_R6_is_cg_reg
        EXTERN ?Register_R7_is_cg_reg
        EXTERN ?Register_R8_is_cg_reg
        EXTERN ?Register_R9_is_cg_reg
        EXTERN ?SS_DIVMOD_L02
        EXTERN ?UL_DIVMOD_L03
        EXTERN ?US_DIVMOD_L02

        PUBLIC ??calcValueWithDirection
        FUNCTION ??calcValueWithDirection,0203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??displayWidgetBackground
        FUNCTION ??displayWidgetBackground,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??displayWidgetCounterName
        FUNCTION ??displayWidgetCounterName,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 7, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??displayWidgetCounterValue
        FUNCTION ??displayWidgetCounterValue,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 17, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??functionSetupWidgets
        FUNCTION ??functionSetupWidgets,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??functionWidget
        FUNCTION ??functionWidget,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBWEAK ??maxof
        FUNCTION ??maxof,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBWEAK ??minof
        FUNCTION ??minof,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??processCounterStatistic
        FUNCTION ??processCounterStatistic,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??scheduleWidgetStatisticOperation
        FUNCTION ??scheduleWidgetStatisticOperation,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 7, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??updateCounter
        FUNCTION ??updateCounter,021203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME CSTACK, 9, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+4
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon1
        
        
          CFI Common cfiCommon2 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Notused
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 SameValue
          CFI R17 SameValue
          CFI R18 SameValue
          CFI R19 SameValue
          CFI R20 SameValue
          CFI R21 SameValue
          CFI R22 SameValue
          CFI R23 SameValue
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 SameValue
          CFI R31 SameValue
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI Y SameValue
          CFI EndCommon cfiCommon2
        
`?<Name GLOBAL 0>`  SYMBOL "GLOBAL"
`?<Name RTC 1>`     SYMBOL "RTC", `?<Name GLOBAL 0>`
??RTCDateTime       SYMBOL "RTCDateTime", `?<Name RTC 1>`
`?<Name DeviceProfile 3>` SYMBOL "DeviceProfile", `?<Name GLOBAL 0>`
??UserInterfaceSetup SYMBOL "UserInterfaceSetup", `?<Name DeviceProfile 3>`
`?<Name UserInterface 5>` SYMBOL "UserInterface"
??activeFunctionChanged SYMBOL "activeFunctionChanged", `?<Name UserInterface 5>`
??activeParmSpace   SYMBOL "activeParmSpace", `?<Name UserInterface 5>`
`?<Name LCDDriver 8>` SYMBOL "LCDDriver"
`?<Name Counter 11>` SYMBOL "Counter", `?<Name GLOBAL 0>`
??curPeriod         SYMBOL "curPeriod", `?<Name Counter 11>`
??curStatisticRecord SYMBOL "curStatisticRecord", `?<Name UserInterface 5>`
??displayState      SYMBOL "displayState", `?<Name LCDDriver 8>`
??isTransition      SYMBOL "isTransition", `?<Name UserInterface 5>`
??menuAuthLevel     SYMBOL "menuAuthLevel", `?<Name UserInterface 5>`
??menuStack         SYMBOL "menuStack", `?<Name UserInterface 5>`
??menuStackPos      SYMBOL "menuStackPos", `?<Name UserInterface 5>`
??totalInCnt        SYMBOL "totalInCnt", `?<Name Counter 11>`
??totalOutCnt       SYMBOL "totalOutCnt", `?<Name Counter 11>`
??transitionKey     SYMBOL "transitionKey", `?<Name UserInterface 5>`

        EXTERN ??RTCDateTime
        EXTERN ??UserInterfaceSetup
        EXTERN ??activeFunctionChanged
        EXTERN ??activeParmSpace
        EXTERN ??clearBuffer
        FUNCTION ??clearBuffer,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??curPeriod
        EXTERN ??curStatisticRecord
        EXTERN ??displayState
        EXTERN ??getNextTransitionKey
        FUNCTION ??getNextTransitionKey,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getPeriodNumDay
        FUNCTION ??getPeriodNumDay,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getPeriodNumHour
        FUNCTION ??getPeriodNumHour,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getPeriodNumMonth
        FUNCTION ??getPeriodNumMonth,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??getString
        FUNCTION ??getString,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??isTransition
        EXTERN ??menuAuthLevel
        EXTERN ??menuStack
        EXTERN ??menuStackPos
        EXTERN ??num2Buf
        FUNCTION ??num2Buf,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??processMenuOptionChanged
        FUNCTION ??processMenuOptionChanged,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??refreshDisplay
        FUNCTION ??refreshDisplay,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??saveUserInterfaceSetup
        FUNCTION ??saveUserInterfaceSetup,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??scheduleStatisticOperation
        FUNCTION ??scheduleStatisticOperation,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??str2Buf
        FUNCTION ??str2Buf,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??totalInCnt
        EXTERN ??totalOutCnt
        EXTERN ??transitionKey
        EXTERN ??transitionUp
        FUNCTION ??transitionUp,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??updateMenuStack
        FUNCTION ??updateMenuStack,0202H
        ARGFRAME RSTACK, 0, STACK

// D:\Projects\BatteryCounter\_micro\BattRX\UserInterface_Widget.cpp
//    1 #ifndef __USERINTERFACE_WIDGET_CPP_
//    2 #define __USERINTERFACE_WIDGET_CPP_
//    3 
//    4 #include "UserInterface_Ref.h"

        RSEG CODE:CODE:NOROOT(1)
// __version_3 unsigned long Functions::Common::minof<unsigned long>(unsigned long, unsigned long)
??minof:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ??minof
        CP      R20, R16
        CPC     R21, R17
        CPC     R22, R18
        CPC     R23, R19
        BRCS    ??minof_1
        MOVW    R1:R0, R17:R16
        MOVW    R3:R2, R19:R18
        RJMP    ??minof_2
??minof_1:
        MOVW    R1:R0, R21:R20
        MOVW    R3:R2, R23:R22
??minof_2:
        MOVW    R17:R16, R1:R0
        MOVW    R19:R18, R3:R2
        RET
          CFI EndBlock cfiBlock0

        RSEG CODE:CODE:NOROOT(1)
// __version_3 unsigned long Functions::Common::maxof<unsigned long>(unsigned long, unsigned long)
??maxof:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ??maxof
        CP      R16, R20
        CPC     R17, R21
        CPC     R18, R22
        CPC     R19, R23
        BRCS    ??maxof_1
        MOVW    R1:R0, R17:R16
        MOVW    R3:R2, R19:R18
        RJMP    ??maxof_2
??maxof_1:
        MOVW    R1:R0, R21:R20
        MOVW    R3:R2, R23:R22
??maxof_2:
        MOVW    R17:R16, R1:R0
        MOVW    R19:R18, R3:R2
        RET
          CFI EndBlock cfiBlock1
//    5 
//    6 namespace UserInterface
//    7 {
//    8   typedef struct
//    9   {
//   10     bool isEnabled;
//   11     bool isCalculated;
//   12     bool isScheduled;
//   13     unsigned long calculatedPeriod;
//   14     unsigned long value;
//   15     unsigned long valueTotal;
//   16   } TWidgetCounterConfig;
//   17 

        RSEG CODE:CODE:NOROOT(1)
//   18   unsigned long calcValueWithDirection(TUserMenuInfoblockCounterDirType _counterDir, unsigned long _inCnt, unsigned long _outCnt)
??calcValueWithDirection:
          CFI Block cfiBlock2 Using cfiCommon1
          CFI Function ??calcValueWithDirection
//   19   {
        LD      R0, Y
        LDD     R1, Y+1
        LDD     R2, Y+2
        LDD     R3, Y+3
//   20     switch (_counterDir)
        TST     R16
        BREQ    ??calcValueWithDirection_1
        DEC     R16
        BREQ    ??calcValueWithDirection_2
        SUBI    R16, 2
        BREQ    ??calcValueWithDirection_3
        DEC     R16
        BREQ    ??calcValueWithDirection_4
        RJMP    ??calcValueWithDirection_5
//   21     {
//   22       case UserMenuInfoblockCounterDirType_In:
//   23         return _inCnt;
//   24 
//   25       case UserMenuInfoblockCounterDirType_Out:
//   26         return _outCnt;
//   27 
//   28       case UserMenuInfoblockCounterDirType_Max:
//   29         return Functions::Common::maxof<unsigned long>(_inCnt, _outCnt);
??calcValueWithDirection_3:
        CP      R20, R0
        CPC     R21, R1
        CPC     R22, R2
        CPC     R23, R3
        BRCS    ??calcValueWithDirection_2
        RJMP    ??calcValueWithDirection_1
//   30 
//   31       case UserMenuInfoblockCounterDirType_Min:
//   32         return Functions::Common::minof<unsigned long>(_inCnt, _outCnt);
??calcValueWithDirection_4:
        CP      R0, R20
        CPC     R1, R21
        CPC     R2, R22
        CPC     R3, R23
        BRCC    ??calcValueWithDirection_1
??calcValueWithDirection_2:
        MOVW    R17:R16, R1:R0
        MOVW    R19:R18, R3:R2
//   33     }
        RJMP    ??calcValueWithDirection_6
//   34 
//   35     return (_inCnt + _outCnt) / 2;
??calcValueWithDirection_5:
        ADD     R20, R0
        ADC     R21, R1
        ADC     R22, R2
        ADC     R23, R3
        LSR     R23
        ROR     R22
        ROR     R21
        ROR     R20
??calcValueWithDirection_1:
        MOVW    R17:R16, R21:R20
        MOVW    R19:R18, R23:R22
??calcValueWithDirection_6:
        ADIW    R29:R28, 4
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock2
//   36   }
//   37 

        RSEG CODE:CODE:NOROOT(1)
//   38   void processCounterStatistic(TWidgetCounterConfig* _widgetConfig, TUserMenuInfoblockCounterSetup* _counterSetup)
??processCounterStatistic:
          CFI Block cfiBlock3 Using cfiCommon0
          CFI Function ??processCounterStatistic
//   39   {
        FUNCALL ??processCounterStatistic, ??calcValueWithDirection
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        ST      -Y, R27
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R26
          CFI R26 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        MOVW    R27:R26, R17:R16
//   40     _widgetConfig->isCalculated = true;
        LDI     R16, 1
        MOV     R30, R26
        MOV     R31, R17
        STD     Z+1, R16
//   41     _widgetConfig->isScheduled = false;
        LDI     R16, 0
        STD     Z+2, R16
//   42     _widgetConfig->calculatedPeriod = curStatisticRecord.periodNumTo;
        LDI     R16, LOW(??curStatisticRecord)
        LDI     R17, (??curStatisticRecord) >> 8
        MOVW    R31:R30, R17:R16
        LDD     R20, Z+4
        LDD     R21, Z+5
        LDD     R22, Z+6
        LDD     R23, Z+7
        MOVW    R31:R30, R27:R26
        STD     Z+3, R20
        STD     Z+4, R21
        STD     Z+5, R22
        STD     Z+6, R23
//   43     _widgetConfig->value = 0;
        RCALL   ??Subroutine58_0
??CrossCallReturnLabel_129:
        STD     Z+7, R21
        STD     Z+8, R21
        STD     Z+9, R21
        STD     Z+10, R21
//   44 
//   45     if (curStatisticRecord.status == GLOBAL::Counter::CounterStatisticProcessStatus_Error)
        LDS     R20, (??curStatisticRecord + 24)
        CPI     R20, 3
        BREQ    ??processCounterStatistic_1
//   46     {
//   47       return;
//   48     }
//   49 
//   50     switch (_counterSetup->counterType)
        MOVW    R31:R30, R19:R18
        LD      R20, Z
        DEC     R20
        SUBI    R20, 4
        BRCS    ??processCounterStatistic_2
        DEC     R20
        BREQ    ??processCounterStatistic_3
        DEC     R20
        BREQ    ??processCounterStatistic_3
        RJMP    ??processCounterStatistic_1
//   51     {
//   52       case UserMenuInfoblockCounterType_VisitorsHour:
//   53       case UserMenuInfoblockCounterType_VisitorsDay:
//   54       case UserMenuInfoblockCounterType_VisitorsWeek:
//   55       case UserMenuInfoblockCounterType_VisitorsMonth:
//   56         _widgetConfig->value = calcValueWithDirection(_counterSetup->counterDir, curStatisticRecord.InCnt, curStatisticRecord.OutCnt);
??processCounterStatistic_2:
        MOVW    R31:R30, R17:R16
        LDD     R20, Z+16
        LDD     R21, Z+17
        LDD     R22, Z+18
        LDD     R23, Z+19
        ST      -Y, R23
          CFI CFA_Y Y+3
        ST      -Y, R22
          CFI CFA_Y Y+4
        ST      -Y, R21
          CFI CFA_Y Y+5
        ST      -Y, R20
          CFI CFA_Y Y+6
        LDD     R20, Z+12
        LDD     R21, Z+13
        LDD     R22, Z+14
        LDD     R23, Z+15
        MOVW    R31:R30, R19:R18
        RCALL   ?Subroutine18
          CFI CFA_Y Y+2
??CrossCallReturnLabel_25:
        RJMP    ??processCounterStatistic_4
//   57         break;
//   58 
//   59       case UserMenuInfoblockCounterType_NoSensorHour:
//   60       case UserMenuInfoblockCounterType_NoSensorDay:
//   61         _widgetConfig->value = curStatisticRecord.NoSensorSec / 60;
??processCounterStatistic_3:
        MOVW    R31:R30, R17:R16
        LDD     R16, Z+20
        LDD     R17, Z+21
        LDD     R18, Z+22
        LDD     R19, Z+23
        LDI     R20, 60
        CALL    ?UL_DIVMOD_L03
??processCounterStatistic_4:
        MOVW    R31:R30, R27:R26
        STD     Z+7, R16
        STD     Z+8, R17
        STD     Z+9, R18
        STD     Z+10, R19
//   62         break;
//   63     }
??processCounterStatistic_1:
        RJMP    ??Subroutine60_0
          CFI EndBlock cfiBlock3
//   64   }
//   65 

        RSEG CODE:CODE:NOROOT(1)
//   66   void scheduleWidgetStatisticOperation(
??scheduleWidgetStatisticOperation:
          CFI Block cfiBlock4 Using cfiCommon0
          CFI Function ??scheduleWidgetStatisticOperation
//   67     TWidgetCounterConfig* _widgetConfig,
//   68     GLOBAL::Counter::TCounterStatisticType _counterStatisticType,
//   69     unsigned long curPeriodFrom,
//   70     unsigned char periodLng = 1)
//   71   {
        FUNCALL ??scheduleWidgetStatisticOperation, ??scheduleStatisticOperation
        LOCFRAME CSTACK, 7, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        ST      -Y, R7
          CFI R7 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        RCALL   ?Subroutine20
          CFI R24 Frame(CFA_Y, -7)
          CFI R26 Frame(CFA_Y, -6)
          CFI R27 Frame(CFA_Y, -5)
          CFI R4 Frame(CFA_Y, -4)
          CFI R5 Frame(CFA_Y, -3)
          CFI R6 Frame(CFA_Y, -2)
          CFI CFA_Y Y+7
??CrossCallReturnLabel_26:
        REQUIRE ?Register_R4_is_cg_reg
        REQUIRE ?Register_R5_is_cg_reg
        REQUIRE ?Register_R6_is_cg_reg
        REQUIRE ?Register_R7_is_cg_reg
        MOVW    R27:R26, R17:R16
        MOV     R0, R18
//   72     if (periodLng <= 0)
        TST     R19
        BRNE    ??scheduleWidgetStatisticOperation_1
//   73     {
//   74       _widgetConfig->valueTotal = 0;
        LDI     R16, 0
        MOV     R30, R26
        MOV     R31, R17
        STD     Z+11, R16
        STD     Z+12, R16
        STD     Z+13, R16
        STD     Z+14, R16
//   75       _widgetConfig->isCalculated = true;
        LDI     R16, 1
        STD     Z+1, R16
//   76       return;
        RJMP    ??scheduleWidgetStatisticOperation_2
//   77     }
//   78 
//   79     unsigned long curPeriodTo = curPeriodFrom + periodLng - 1;
??scheduleWidgetStatisticOperation_1:
        MOV     R4, R19
        CLR     R5
        MOVW    R17:R16, R21:R20
        MOVW    R19:R18, R23:R22
        ADD     R16, R4
        ADC     R17, R5
        ADC     R18, R5
        ADC     R19, R5
        SUBI    R16, 1
        SBCI    R17, 0
        SBCI    R18, 0
        SBCI    R19, 0
//   80 
//   81     if (_widgetConfig->isCalculated && (_widgetConfig->calculatedPeriod != curPeriodTo))
        MOVW    R31:R30, R27:R26
        LDD     R1, Z+1
        TST     R1
        BREQ    ??scheduleWidgetStatisticOperation_3
        LDD     R4, Z+3
        LDD     R5, Z+4
        LDD     R6, Z+5
        LDD     R7, Z+6
        CP      R4, R16
        CPC     R5, R17
        CPC     R6, R18
        CPC     R7, R19
        BREQ    ??scheduleWidgetStatisticOperation_4
//   82     {
//   83       _widgetConfig->isCalculated = false;
        LDI     R24, 0
        STD     Z+1, R24
//   84     }
//   85 
//   86     if (_widgetConfig->isCalculated)
//   87     {
//   88       _widgetConfig->valueTotal = _widgetConfig->value;
//   89     }
//   90     else
//   91     {
//   92       curStatisticRecord.periodNumFrom = curPeriodFrom;
??scheduleWidgetStatisticOperation_3:
        LDI     R30, LOW(??curStatisticRecord)
        LDI     R31, (??curStatisticRecord) >> 8
        ST      Z, R20
        STD     Z+1, R21
        STD     Z+2, R22
        STD     Z+3, R23
//   93       curStatisticRecord.periodNumTo = curPeriodTo;
        STD     Z+4, R16
        STD     Z+5, R17
        STD     Z+6, R18
        STD     Z+7, R19
//   94 
//   95       if (GLOBAL::Counter::scheduleStatisticOperation(&curStatisticRecord, _counterStatisticType))
        MOV     R18, R0
        MOVW    R17:R16, R31:R30
        CALL    ??scheduleStatisticOperation
        TST     R16
        BREQ    ??scheduleWidgetStatisticOperation_2
//   96       {
//   97         _widgetConfig->isScheduled = true;
        LDI     R16, 1
        MOVW    R31:R30, R27:R26
        STD     Z+2, R16
??scheduleWidgetStatisticOperation_2:
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+6
//   98       }
//   99     }
        RJMP    ?Subroutine15
          CFI R24 Frame(CFA_Y, -7)
          CFI CFA_Y Y+7
??scheduleWidgetStatisticOperation_4:
        LDD     R16, Z+7
        LDD     R17, Z+8
        LDD     R18, Z+9
        LDD     R19, Z+10
        RCALL   ?Subroutine21
??CrossCallReturnLabel_28:
        RJMP    ??scheduleWidgetStatisticOperation_2
          CFI EndBlock cfiBlock4
//  100   }
//  101 

        RSEG CODE:CODE:NOROOT(1)
//  102   void updateCounter(TWidgetCounterConfig* _widgetConfig, TUserMenuInfoblockCounterSetup* _counterSetup)
??updateCounter:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function ??updateCounter
//  103   {
        FUNCALL ??updateCounter, ??getPeriodNumHour
        LOCFRAME CSTACK, 5, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??scheduleWidgetStatisticOperation
        LOCFRAME CSTACK, 5, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??calcValueWithDirection
        LOCFRAME CSTACK, 9, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??getPeriodNumDay
        LOCFRAME CSTACK, 5, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??scheduleWidgetStatisticOperation
        LOCFRAME CSTACK, 5, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??calcValueWithDirection
        LOCFRAME CSTACK, 9, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??getPeriodNumDay
        LOCFRAME CSTACK, 5, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??scheduleWidgetStatisticOperation
        LOCFRAME CSTACK, 5, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??calcValueWithDirection
        LOCFRAME CSTACK, 9, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??getPeriodNumMonth
        LOCFRAME CSTACK, 5, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??scheduleWidgetStatisticOperation
        LOCFRAME CSTACK, 5, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??calcValueWithDirection
        LOCFRAME CSTACK, 9, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??calcValueWithDirection
        LOCFRAME CSTACK, 9, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??getPeriodNumHour
        LOCFRAME CSTACK, 5, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??scheduleWidgetStatisticOperation
        LOCFRAME CSTACK, 5, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??getPeriodNumDay
        LOCFRAME CSTACK, 5, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??updateCounter, ??scheduleWidgetStatisticOperation
        LOCFRAME CSTACK, 5, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ??Subroutine55_0
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_Y Y+5
??CrossCallReturnLabel_117:
        REQUIRE ?Register_R4_is_cg_reg
        MOVW    R25:R24, R17:R16
        MOVW    R27:R26, R19:R18
//  104     unsigned long curCounterPeriod;
//  105 
//  106     switch (_counterSetup->counterType)
        LD      R16, X
        DEC     R16
        BREQ    ??updateCounter_1
        DEC     R16
        BREQ    ??updateCounter_2
        DEC     R16
        BREQ    ??updateCounter_3
        DEC     R16
        BRNE    $+2+2
        RJMP    ??updateCounter_4
        DEC     R16
        BRNE    $+2+2
        RJMP    ??updateCounter_5
        DEC     R16
        BRNE    $+2+2
        RJMP    ??updateCounter_6
        DEC     R16
        BRNE    $+2+2
        RJMP    ??updateCounter_7
        RJMP    ??updateCounter_8
//  107     {
//  108       case UserMenuInfoblockCounterType_VisitorsHour:
//  109         if (_counterSetup->counterShift)
??updateCounter_1:
        RCALL   ?Subroutine11
??CrossCallReturnLabel_16:
        BREQ    $+2+2
        RJMP    ??updateCounter_9
//  110         {
//  111           curCounterPeriod = GLOBAL::Counter::getPeriodNumHour(&GLOBAL::RTC::RTCDateTime) - _counterSetup->counterShift;
//  112           scheduleWidgetStatisticOperation(_widgetConfig, GLOBAL::Counter::CounterStatisticType_Hour, curCounterPeriod);
//  113         }
//  114         else
//  115         {
//  116           _widgetConfig->valueTotal = calcValueWithDirection(_counterSetup->counterDir, GLOBAL::Counter::curPeriod.InCntHour, GLOBAL::Counter::curPeriod.OutCntHour);
        RCALL   ?Subroutine28
//  117           _widgetConfig->isCalculated = true;
//  118         }
??CrossCallReturnLabel_42:
        LDD     R16, Z+6
        LDD     R17, Z+7
        LDI     R18, 0
        ST      -Y, R18
          CFI CFA_Y Y+6
        RCALL   ??Subroutine54_0
          CFI CFA_Y Y+9
??CrossCallReturnLabel_112:
        LDD     R20, Z+4
        LDD     R21, Z+5
        RJMP    ??CrossCallReturnLabel_30
          CFI CFA_Y Y+5
//  119         break;
//  120 
//  121       case UserMenuInfoblockCounterType_VisitorsDay:
//  122         if (_counterSetup->counterShift)
??updateCounter_2:
        RCALL   ?Subroutine11
??CrossCallReturnLabel_17:
        BREQ    $+2+2
        RJMP    ??updateCounter_10
//  123         {
//  124           curCounterPeriod = GLOBAL::Counter::getPeriodNumDay(&GLOBAL::RTC::RTCDateTime) - _counterSetup->counterShift;
//  125           scheduleWidgetStatisticOperation(_widgetConfig, GLOBAL::Counter::CounterStatisticType_Day, curCounterPeriod);
//  126         }
//  127         else
//  128         {
//  129           _widgetConfig->valueTotal = calcValueWithDirection(_counterSetup->counterDir, GLOBAL::Counter::curPeriod.InCntDay, GLOBAL::Counter::curPeriod.OutCntDay);
        RCALL   ?Subroutine22
          CFI CFA_Y Y+9
//  130           _widgetConfig->isCalculated = true;
//  131         }
??CrossCallReturnLabel_30:
        RCALL   ??Subroutine59_0
??CrossCallReturnLabel_123:
        MOV     R30, R26
        MOV     R31, R19
        RJMP    ??updateCounter_11
          CFI CFA_Y Y+5
//  132         break;
//  133 
//  134       case UserMenuInfoblockCounterType_VisitorsWeek:
//  135         curCounterPeriod = GLOBAL::Counter::getPeriodNumDay(&GLOBAL::RTC::RTCDateTime) - GLOBAL::RTC::RTCDateTime.weekDay - (7 * _counterSetup->counterShift);
??updateCounter_3:
        RCALL   ?Subroutine27
??CrossCallReturnLabel_41:
        MOVW    R31:R30, R27:R26
        LDD     R4, Z+2
        LDS     R30, (??RTCDateTime + 7)
        SUB     R16, R30
        SBCI    R17, 0
        SBCI    R18, 0
        SBCI    R19, 0
        LDI     R20, 7
        MUL     R4, R20
        MOV     R2, R1
        LSL     R2
        SBC     R2, R2
        MOVW    R21:R20, R17:R16
        MOVW    R23:R22, R19:R18
        SUB     R20, R0
        SBC     R21, R1
        SBC     R22, R2
        SBC     R23, R2
//  136         scheduleWidgetStatisticOperation(_widgetConfig, GLOBAL::Counter::CounterStatisticType_Day, curCounterPeriod, _counterSetup->counterShift ? 7 : GLOBAL::RTC::RTCDateTime.weekDay);
        TST     R4
        BREQ    ??updateCounter_12
        LDI     R19, 7
        RJMP    ??updateCounter_13
??updateCounter_12:
        MOV     R19, R30
??updateCounter_13:
        LDI     R18, 2
        RCALL   ?Subroutine31
//  137         if (_widgetConfig->isCalculated && (!_counterSetup->counterShift))
??CrossCallReturnLabel_50:
        MOVW    R31:R30, R25:R24
        LDD     R16, Z+1
        TST     R16
        BRNE    $+2+2
        RJMP    ??updateCounter_14
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+2
        TST     R16
        BREQ    $+2+2
        RJMP    ??updateCounter_14
//  138         {
//  139           _widgetConfig->valueTotal += calcValueWithDirection(_counterSetup->counterDir, GLOBAL::Counter::curPeriod.InCntDay, GLOBAL::Counter::curPeriod.OutCntDay);
        RCALL   ?Subroutine22
          CFI CFA_Y Y+9
//  140         }
??CrossCallReturnLabel_31:
        RCALL   ??Subroutine59_0
??CrossCallReturnLabel_124:
        RCALL   ?Subroutine10
??CrossCallReturnLabel_12:
        RCALL   ??calcValueWithDirection
          CFI CFA_Y Y+5
        MOVW    R31:R30, R25:R24
        RCALL   ?Subroutine30
??CrossCallReturnLabel_46:
        ADD     R20, R16
        ADC     R21, R17
        ADC     R22, R18
        ADC     R23, R19
        STD     Z+11, R20
        STD     Z+12, R21
        STD     Z+13, R22
        STD     Z+14, R23
        RJMP    ??updateCounter_14
//  141         break;
//  142 
//  143       case UserMenuInfoblockCounterType_VisitorsMonth:
//  144         if (_counterSetup->counterShift)
??updateCounter_4:
        RCALL   ?Subroutine11
??CrossCallReturnLabel_18:
        BREQ    ??updateCounter_15
//  145         {
//  146           curCounterPeriod = GLOBAL::Counter::getPeriodNumMonth(&GLOBAL::RTC::RTCDateTime) - _counterSetup->counterShift;
        LDI     R16, LOW(??RTCDateTime)
        LDI     R17, (??RTCDateTime) >> 8
        CALL    ??getPeriodNumMonth
//  147           scheduleWidgetStatisticOperation(_widgetConfig, GLOBAL::Counter::CounterStatisticType_Month, curCounterPeriod);
        LDI     R19, 1
        MOVW    R31:R30, R27:R26
        LDD     R20, Z+2
        SUB     R16, R20
        SBCI    R17, 0
        MOVW    R21:R20, R17:R16
        RCALL   ??Subroutine59_0
//  148         }
??CrossCallReturnLabel_125:
        LDI     R18, 4
        RJMP    ??updateCounter_16
//  149         else
//  150         {
//  151           _widgetConfig->valueTotal = calcValueWithDirection(_counterSetup->counterDir, GLOBAL::Counter::curPeriod.InCntMonth, GLOBAL::Counter::curPeriod.OutCntMonth);
??updateCounter_15:
        RCALL   ?Subroutine28
//  152           _widgetConfig->isCalculated = true;
//  153         }
??CrossCallReturnLabel_43:
        LDD     R16, Z+28
        LDD     R17, Z+29
        LDD     R18, Z+30
        LDD     R19, Z+31
        RCALL   ?Subroutine26
          CFI CFA_Y Y+9
??CrossCallReturnLabel_113:
        LDD     R20, Z+24
        LDD     R21, Z+25
        LDD     R22, Z+26
        LDD     R23, Z+27
        RJMP    ??updateCounter_17
          CFI CFA_Y Y+5
//  154         break;
//  155 
//  156       case UserMenuInfoblockCounterType_VisitorsTotal:
//  157         _widgetConfig->valueTotal = calcValueWithDirection(_counterSetup->counterDir, GLOBAL::Counter::totalInCnt, GLOBAL::Counter::totalOutCnt);
??updateCounter_5:
        LDI     R30, LOW(??totalOutCnt)
        LDI     R31, (??totalOutCnt) >> 8
        LD      R16, Z
        LDD     R17, Z+1
        LDD     R18, Z+2
        LDD     R19, Z+3
        RCALL   ?Subroutine26
          CFI CFA_Y Y+9
??CrossCallReturnLabel_114:
        LDI     R30, LOW(??totalInCnt)
        LDI     R31, (??totalInCnt) >> 8
        LD      R20, Z
        LDD     R21, Z+1
        LDD     R22, Z+2
        LDD     R23, Z+3
??updateCounter_17:
        MOVW    R31:R30, R27:R26
??updateCounter_11:
        RCALL   ?Subroutine18
          CFI CFA_Y Y+5
??CrossCallReturnLabel_24:
        RJMP    ??updateCounter_18
//  158         _widgetConfig->isCalculated = true;
//  159         break;
//  160 
//  161       case UserMenuInfoblockCounterType_NoSensorHour:
//  162         if (_counterSetup->counterShift)
??updateCounter_6:
        RCALL   ?Subroutine11
??CrossCallReturnLabel_19:
        BREQ    ??updateCounter_19
//  163         {
//  164           curCounterPeriod = GLOBAL::Counter::getPeriodNumHour(&GLOBAL::RTC::RTCDateTime) - _counterSetup->counterShift;
??updateCounter_9:
        LDI     R16, LOW(??RTCDateTime)
        LDI     R17, (??RTCDateTime) >> 8
        CALL    ??getPeriodNumHour
//  165           scheduleWidgetStatisticOperation(_widgetConfig, GLOBAL::Counter::CounterStatisticType_Hour, curCounterPeriod);
//  166         }
        RCALL   ?Subroutine2
??CrossCallReturnLabel_2:
        LDI     R18, 1
        RJMP    ??updateCounter_16
//  167         else
//  168         {
//  169           _widgetConfig->valueTotal = GLOBAL::Counter::curPeriod.NoSensorSecHour / 60;
??updateCounter_19:
        RCALL   ?Subroutine28
??CrossCallReturnLabel_44:
        LDD     R16, Z+8
        LDD     R17, Z+9
        LDI     R20, 60
        LDI     R21, 0
        CALL    ?US_DIVMOD_L02
        LDI     R18, 0
        MOVW    R31:R30, R25:R24
        STD     Z+11, R16
        STD     Z+12, R17
        STD     Z+13, R18
        STD     Z+14, R18
//  170           _widgetConfig->isCalculated = true;
        RJMP    ??CrossCallReturnLabel_29
//  171         }
//  172         break;
//  173 
//  174       case UserMenuInfoblockCounterType_NoSensorDay:
//  175         if (_counterSetup->counterShift)
??updateCounter_7:
        RCALL   ?Subroutine11
??CrossCallReturnLabel_20:
        BREQ    ??updateCounter_20
//  176         {
//  177           curCounterPeriod = GLOBAL::Counter::getPeriodNumDay(&GLOBAL::RTC::RTCDateTime) - _counterSetup->counterShift;
??updateCounter_10:
        RCALL   ?Subroutine27
??CrossCallReturnLabel_40:
        RCALL   ?Subroutine2
//  178           scheduleWidgetStatisticOperation(_widgetConfig, GLOBAL::Counter::CounterStatisticType_Day, curCounterPeriod);
??CrossCallReturnLabel_3:
        LDI     R18, 2
??updateCounter_16:
        RCALL   ?Subroutine31
??CrossCallReturnLabel_49:
        RJMP    ??updateCounter_14
//  179         }
//  180         else
//  181         {
//  182           _widgetConfig->valueTotal = GLOBAL::Counter::curPeriod.NoSensorSecDay / 60;
??updateCounter_20:
        RCALL   ?Subroutine28
??CrossCallReturnLabel_45:
        LDD     R16, Z+18
        LDD     R17, Z+19
        LDD     R18, Z+20
        LDD     R19, Z+21
        LDI     R20, 60
        RCALL   ??Subroutine58_0
??CrossCallReturnLabel_130:
        CALL    ?UL_DIVMOD_L03
??updateCounter_18:
        MOVW    R31:R30, R25:R24
        RCALL   ?Subroutine21
//  183           _widgetConfig->isCalculated = true;
??CrossCallReturnLabel_29:
        LDI     R16, 1
        RJMP    ??updateCounter_21
//  184         }
//  185         break;
//  186 
//  187       default:
//  188         _widgetConfig->isCalculated = true;
??updateCounter_8:
        LDI     R16, 1
        MOV     R30, R24
        MOV     R31, R17
??updateCounter_21:
        STD     Z+1, R16
//  189         break;
//  190     }
//  191   }
??updateCounter_14:
        RCALL   ?Subroutine19
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI CFA_Y Y+1
??CrossCallReturnLabel_136:
        LD      R4, Y+
          CFI R4 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(1)
?Subroutine31:
          CFI Block cfiCond6 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_50
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+5
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function ??updateCounter
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_49
          CFI (cfiCond7) R24 Frame(CFA_Y, -5)
          CFI (cfiCond7) R25 Frame(CFA_Y, -4)
          CFI (cfiCond7) R26 Frame(CFA_Y, -3)
          CFI (cfiCond7) R27 Frame(CFA_Y, -2)
          CFI (cfiCond7) R4 Frame(CFA_Y, -1)
          CFI (cfiCond7) CFA_SP SP+4
          CFI (cfiCond7) CFA_Y Y+5
          CFI Block cfiPicker8 Using cfiCommon2
          CFI (cfiPicker8) NoFunction
          CFI (cfiPicker8) Picker
        MOVW    R17:R16, R25:R24
        RJMP    ??scheduleWidgetStatisticOperation
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiPicker8

        RSEG CODE:CODE:NOROOT(1)
?Subroutine28:
          CFI Block cfiCond9 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_42
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+5
          CFI Block cfiCond10 Using cfiCommon0
          CFI (cfiCond10) Function ??updateCounter
          CFI (cfiCond10) Conditional ??CrossCallReturnLabel_43
          CFI (cfiCond10) R24 Frame(CFA_Y, -5)
          CFI (cfiCond10) R25 Frame(CFA_Y, -4)
          CFI (cfiCond10) R26 Frame(CFA_Y, -3)
          CFI (cfiCond10) R27 Frame(CFA_Y, -2)
          CFI (cfiCond10) R4 Frame(CFA_Y, -1)
          CFI (cfiCond10) CFA_SP SP+4
          CFI (cfiCond10) CFA_Y Y+5
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function ??updateCounter
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_44
          CFI (cfiCond11) R24 Frame(CFA_Y, -5)
          CFI (cfiCond11) R25 Frame(CFA_Y, -4)
          CFI (cfiCond11) R26 Frame(CFA_Y, -3)
          CFI (cfiCond11) R27 Frame(CFA_Y, -2)
          CFI (cfiCond11) R4 Frame(CFA_Y, -1)
          CFI (cfiCond11) CFA_SP SP+4
          CFI (cfiCond11) CFA_Y Y+5
          CFI Block cfiCond12 Using cfiCommon0
          CFI (cfiCond12) Function ??updateCounter
          CFI (cfiCond12) Conditional ??CrossCallReturnLabel_45
          CFI (cfiCond12) R24 Frame(CFA_Y, -5)
          CFI (cfiCond12) R25 Frame(CFA_Y, -4)
          CFI (cfiCond12) R26 Frame(CFA_Y, -3)
          CFI (cfiCond12) R27 Frame(CFA_Y, -2)
          CFI (cfiCond12) R4 Frame(CFA_Y, -1)
          CFI (cfiCond12) CFA_SP SP+4
          CFI (cfiCond12) CFA_Y Y+5
          CFI Block cfiPicker13 Using cfiCommon2
          CFI (cfiPicker13) NoFunction
          CFI (cfiPicker13) Picker
        LDI     R30, LOW(??curPeriod)
        LDI     R31, (??curPeriod) >> 8
        RET
          CFI EndBlock cfiCond9
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiCond12
          CFI EndBlock cfiPicker13

        RSEG CODE:CODE:NOROOT(1)
?Subroutine27:
          CFI Block cfiCond14 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_41
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+5
          CFI Block cfiCond15 Using cfiCommon0
          CFI (cfiCond15) Function ??updateCounter
          CFI (cfiCond15) Conditional ??CrossCallReturnLabel_40
          CFI (cfiCond15) R24 Frame(CFA_Y, -5)
          CFI (cfiCond15) R25 Frame(CFA_Y, -4)
          CFI (cfiCond15) R26 Frame(CFA_Y, -3)
          CFI (cfiCond15) R27 Frame(CFA_Y, -2)
          CFI (cfiCond15) R4 Frame(CFA_Y, -1)
          CFI (cfiCond15) CFA_SP SP+4
          CFI (cfiCond15) CFA_Y Y+5
          CFI Block cfiPicker16 Using cfiCommon2
          CFI (cfiPicker16) NoFunction
          CFI (cfiPicker16) Picker
        LDI     R16, LOW(??RTCDateTime)
        LDI     R17, (??RTCDateTime) >> 8
        JMP     ??getPeriodNumDay
          CFI EndBlock cfiCond14
          CFI EndBlock cfiCond15
          CFI EndBlock cfiPicker16

        RSEG CODE:CODE:NOROOT(1)
?Subroutine26:
          CFI Block cfiCond17 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_113
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+5
          CFI Block cfiCond18 Using cfiCommon0
          CFI (cfiCond18) Function ??updateCounter
          CFI (cfiCond18) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond18) R24 Frame(CFA_Y, -5)
          CFI (cfiCond18) R25 Frame(CFA_Y, -4)
          CFI (cfiCond18) R26 Frame(CFA_Y, -3)
          CFI (cfiCond18) R27 Frame(CFA_Y, -2)
          CFI (cfiCond18) R4 Frame(CFA_Y, -1)
          CFI (cfiCond18) CFA_SP SP+4
          CFI (cfiCond18) CFA_Y Y+5
          CFI Block cfiPicker19 Using cfiCommon2
          CFI (cfiPicker19) NoFunction
          CFI (cfiPicker19) Picker
        ST      -Y, R19
          CFI EndBlock cfiCond17
          CFI EndBlock cfiCond18
          CFI EndBlock cfiPicker19
        REQUIRE ??Subroutine54_0
        ;               // Fall through to label ??Subroutine54_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine54_0:
          CFI Block cfiCond20 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_112
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+6
          CFI Block cfiCond21 Using cfiCommon0
          CFI (cfiCond21) Function ??updateCounter
          CFI (cfiCond21) Conditional ??CrossCallReturnLabel_113
          CFI (cfiCond21) R24 Frame(CFA_Y, -5)
          CFI (cfiCond21) R25 Frame(CFA_Y, -4)
          CFI (cfiCond21) R26 Frame(CFA_Y, -3)
          CFI (cfiCond21) R27 Frame(CFA_Y, -2)
          CFI (cfiCond21) R4 Frame(CFA_Y, -1)
          CFI (cfiCond21) CFA_SP SP+4
          CFI (cfiCond21) CFA_Y Y+6
          CFI Block cfiCond22 Using cfiCommon0
          CFI (cfiCond22) Function ??updateCounter
          CFI (cfiCond22) Conditional ??CrossCallReturnLabel_114
          CFI (cfiCond22) R24 Frame(CFA_Y, -5)
          CFI (cfiCond22) R25 Frame(CFA_Y, -4)
          CFI (cfiCond22) R26 Frame(CFA_Y, -3)
          CFI (cfiCond22) R27 Frame(CFA_Y, -2)
          CFI (cfiCond22) R4 Frame(CFA_Y, -1)
          CFI (cfiCond22) CFA_SP SP+4
          CFI (cfiCond22) CFA_Y Y+6
          CFI Block cfiPicker23 Using cfiCommon2
          CFI (cfiPicker23) NoFunction
          CFI (cfiPicker23) Picker
        ST      -Y, R18
          CFI (cfiCond20) CFA_Y Y+7
          CFI (cfiCond21) CFA_Y Y+7
          CFI (cfiCond22) CFA_Y Y+7
        ST      -Y, R17
          CFI (cfiCond20) CFA_Y Y+8
          CFI (cfiCond21) CFA_Y Y+8
          CFI (cfiCond22) CFA_Y Y+8
        ST      -Y, R16
          CFI (cfiCond20) CFA_Y Y+9
          CFI (cfiCond21) CFA_Y Y+9
          CFI (cfiCond22) CFA_Y Y+9
        RET
          CFI EndBlock cfiCond20
          CFI EndBlock cfiCond21
          CFI EndBlock cfiCond22
          CFI EndBlock cfiPicker23

        RSEG CODE:CODE:NOROOT(1)
?Subroutine22:
          CFI Block cfiCond24 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_30
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+5
          CFI Block cfiCond25 Using cfiCommon0
          CFI (cfiCond25) Function ??updateCounter
          CFI (cfiCond25) Conditional ??CrossCallReturnLabel_31
          CFI (cfiCond25) R24 Frame(CFA_Y, -5)
          CFI (cfiCond25) R25 Frame(CFA_Y, -4)
          CFI (cfiCond25) R26 Frame(CFA_Y, -3)
          CFI (cfiCond25) R27 Frame(CFA_Y, -2)
          CFI (cfiCond25) R4 Frame(CFA_Y, -1)
          CFI (cfiCond25) CFA_SP SP+4
          CFI (cfiCond25) CFA_Y Y+5
          CFI Block cfiPicker26 Using cfiCommon2
          CFI (cfiPicker26) NoFunction
          CFI (cfiPicker26) Picker
        LDI     R30, LOW(??curPeriod)
        LDI     R31, (??curPeriod) >> 8
        LDD     R16, Z+16
        LDD     R17, Z+17
        LDI     R18, 0
        ST      -Y, R18
          CFI (cfiCond24) CFA_Y Y+6
          CFI (cfiCond25) CFA_Y Y+6
        ST      -Y, R18
          CFI (cfiCond24) CFA_Y Y+7
          CFI (cfiCond25) CFA_Y Y+7
        ST      -Y, R17
          CFI (cfiCond24) CFA_Y Y+8
          CFI (cfiCond25) CFA_Y Y+8
        ST      -Y, R16
          CFI (cfiCond24) CFA_Y Y+9
          CFI (cfiCond25) CFA_Y Y+9
        LDD     R20, Z+14
        LDD     R21, Z+15
        RET
          CFI EndBlock cfiCond24
          CFI EndBlock cfiCond25
          CFI EndBlock cfiPicker26

        RSEG CODE:CODE:NOROOT(1)
?Subroutine21:
          CFI Block cfiCond27 Using cfiCommon0
          CFI Function ??scheduleWidgetStatisticOperation
          CFI Conditional ??CrossCallReturnLabel_28
          CFI R24 Frame(CFA_Y, -7)
          CFI R26 Frame(CFA_Y, -6)
          CFI R27 Frame(CFA_Y, -5)
          CFI R4 Frame(CFA_Y, -4)
          CFI R5 Frame(CFA_Y, -3)
          CFI R6 Frame(CFA_Y, -2)
          CFI R7 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+7
          CFI Block cfiCond28 Using cfiCommon0
          CFI (cfiCond28) Function ??updateCounter
          CFI (cfiCond28) Conditional ??CrossCallReturnLabel_29
          CFI (cfiCond28) R24 Frame(CFA_Y, -5)
          CFI (cfiCond28) R25 Frame(CFA_Y, -4)
          CFI (cfiCond28) R26 Frame(CFA_Y, -3)
          CFI (cfiCond28) R27 Frame(CFA_Y, -2)
          CFI (cfiCond28) R4 Frame(CFA_Y, -1)
          CFI (cfiCond28) CFA_SP SP+4
          CFI (cfiCond28) CFA_Y Y+5
          CFI Block cfiPicker29 Using cfiCommon2
          CFI (cfiPicker29) NoFunction
          CFI (cfiPicker29) Picker
        STD     Z+11, R16
        STD     Z+12, R17
        STD     Z+13, R18
        STD     Z+14, R19
        RET
          CFI EndBlock cfiCond27
          CFI EndBlock cfiCond28
          CFI EndBlock cfiPicker29

        RSEG CODE:CODE:NOROOT(1)
?Subroutine18:
          CFI Block cfiCond30 Using cfiCommon0
          CFI Function ??processCounterStatistic
          CFI Conditional ??CrossCallReturnLabel_25
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+6
          CFI Block cfiCond31 Using cfiCommon0
          CFI (cfiCond31) Function ??updateCounter
          CFI (cfiCond31) Conditional ??CrossCallReturnLabel_24
          CFI (cfiCond31) R24 Frame(CFA_Y, -5)
          CFI (cfiCond31) R25 Frame(CFA_Y, -4)
          CFI (cfiCond31) R26 Frame(CFA_Y, -3)
          CFI (cfiCond31) R27 Frame(CFA_Y, -2)
          CFI (cfiCond31) R4 Frame(CFA_Y, -1)
          CFI (cfiCond31) CFA_SP SP+4
          CFI (cfiCond31) CFA_Y Y+9
          CFI Block cfiPicker32 Using cfiCommon2
          CFI (cfiPicker32) NoFunction
          CFI (cfiPicker32) Picker
        LDD     R16, Z+1
        RJMP    ??calcValueWithDirection
          CFI EndBlock cfiCond30
          CFI EndBlock cfiCond31
          CFI EndBlock cfiPicker32

        RSEG CODE:CODE:NOROOT(1)
?Subroutine11:
          CFI Block cfiCond33 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_16
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+5
          CFI Block cfiCond34 Using cfiCommon0
          CFI (cfiCond34) Function ??updateCounter
          CFI (cfiCond34) Conditional ??CrossCallReturnLabel_17
          CFI (cfiCond34) R24 Frame(CFA_Y, -5)
          CFI (cfiCond34) R25 Frame(CFA_Y, -4)
          CFI (cfiCond34) R26 Frame(CFA_Y, -3)
          CFI (cfiCond34) R27 Frame(CFA_Y, -2)
          CFI (cfiCond34) R4 Frame(CFA_Y, -1)
          CFI (cfiCond34) CFA_SP SP+4
          CFI (cfiCond34) CFA_Y Y+5
          CFI Block cfiCond35 Using cfiCommon0
          CFI (cfiCond35) Function ??updateCounter
          CFI (cfiCond35) Conditional ??CrossCallReturnLabel_18
          CFI (cfiCond35) R24 Frame(CFA_Y, -5)
          CFI (cfiCond35) R25 Frame(CFA_Y, -4)
          CFI (cfiCond35) R26 Frame(CFA_Y, -3)
          CFI (cfiCond35) R27 Frame(CFA_Y, -2)
          CFI (cfiCond35) R4 Frame(CFA_Y, -1)
          CFI (cfiCond35) CFA_SP SP+4
          CFI (cfiCond35) CFA_Y Y+5
          CFI Block cfiCond36 Using cfiCommon0
          CFI (cfiCond36) Function ??updateCounter
          CFI (cfiCond36) Conditional ??CrossCallReturnLabel_19
          CFI (cfiCond36) R24 Frame(CFA_Y, -5)
          CFI (cfiCond36) R25 Frame(CFA_Y, -4)
          CFI (cfiCond36) R26 Frame(CFA_Y, -3)
          CFI (cfiCond36) R27 Frame(CFA_Y, -2)
          CFI (cfiCond36) R4 Frame(CFA_Y, -1)
          CFI (cfiCond36) CFA_SP SP+4
          CFI (cfiCond36) CFA_Y Y+5
          CFI Block cfiCond37 Using cfiCommon0
          CFI (cfiCond37) Function ??updateCounter
          CFI (cfiCond37) Conditional ??CrossCallReturnLabel_20
          CFI (cfiCond37) R24 Frame(CFA_Y, -5)
          CFI (cfiCond37) R25 Frame(CFA_Y, -4)
          CFI (cfiCond37) R26 Frame(CFA_Y, -3)
          CFI (cfiCond37) R27 Frame(CFA_Y, -2)
          CFI (cfiCond37) R4 Frame(CFA_Y, -1)
          CFI (cfiCond37) CFA_SP SP+4
          CFI (cfiCond37) CFA_Y Y+5
          CFI Block cfiPicker38 Using cfiCommon2
          CFI (cfiPicker38) NoFunction
          CFI (cfiPicker38) Picker
        MOVW    R31:R30, R19:R18
        LDD     R16, Z+2
        TST     R16
        RET
          CFI EndBlock cfiCond33
          CFI EndBlock cfiCond34
          CFI EndBlock cfiCond35
          CFI EndBlock cfiCond36
          CFI EndBlock cfiCond37
          CFI EndBlock cfiPicker38

        RSEG CODE:CODE:NOROOT(1)
?Subroutine2:
          CFI Block cfiCond39 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_2
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+5
          CFI Block cfiCond40 Using cfiCommon0
          CFI (cfiCond40) Function ??updateCounter
          CFI (cfiCond40) Conditional ??CrossCallReturnLabel_3
          CFI (cfiCond40) R24 Frame(CFA_Y, -5)
          CFI (cfiCond40) R25 Frame(CFA_Y, -4)
          CFI (cfiCond40) R26 Frame(CFA_Y, -3)
          CFI (cfiCond40) R27 Frame(CFA_Y, -2)
          CFI (cfiCond40) R4 Frame(CFA_Y, -1)
          CFI (cfiCond40) CFA_SP SP+4
          CFI (cfiCond40) CFA_Y Y+5
          CFI Block cfiPicker41 Using cfiCommon2
          CFI (cfiPicker41) NoFunction
          CFI (cfiPicker41) Picker
        MOVW    R21:R20, R17:R16
        MOVW    R23:R22, R19:R18
        LDI     R19, 1
        MOVW    R31:R30, R27:R26
        LDD     R0, Z+2
        SUB     R20, R0
        SBCI    R21, 0
        SBCI    R22, 0
        SBCI    R23, 0
        RET
          CFI EndBlock cfiCond39
          CFI EndBlock cfiCond40
          CFI EndBlock cfiPicker41

        RSEG CODE:CODE:NOROOT(1)
?Subroutine0:
          CFI Block cfiCond42 Using cfiCommon0
          CFI Function ??displayWidgetCounterValue
          CFI Conditional ??CrossCallReturnLabel_118
          CFI R7 Frame(CFA_Y, -9)
          CFI R8 Frame(CFA_Y, -8)
          CFI R9 Frame(CFA_Y, -7)
          CFI R10 Frame(CFA_Y, -6)
          CFI R11 Frame(CFA_Y, -5)
          CFI R12 Frame(CFA_Y, -4)
          CFI R13 Frame(CFA_Y, -3)
          CFI R14 Frame(CFA_Y, -2)
          CFI R15 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+9
          CFI Block cfiCond43 Using cfiCommon0
          CFI (cfiCond43) Function ??functionSetupWidgets
          CFI (cfiCond43) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond43) CFA_SP SP+4
          CFI Block cfiPicker44 Using cfiCommon2
          CFI (cfiPicker44) NoFunction
          CFI (cfiPicker44) Picker
        ST      -Y, R6
          CFI (cfiCond42) R6 Frame(CFA_Y, -10)
          CFI (cfiCond42) CFA_Y Y+10
          CFI (cfiCond43) R6 Frame(CFA_Y, -1)
          CFI (cfiCond43) CFA_Y Y+1
          CFI (cfiPicker44) R6 Frame(CFA_Y, -10)
        ST      -Y, R5
          CFI EndBlock cfiCond42
          CFI EndBlock cfiCond43
          CFI EndBlock cfiPicker44
        REQUIRE ??Subroutine55_0
        ;               // Fall through to label ??Subroutine55_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine55_0:
          CFI Block cfiCond45 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_117
          CFI CFA_SP SP+4
          CFI Block cfiCond46 Using cfiCommon0
          CFI (cfiCond46) Function ??displayWidgetCounterValue
          CFI (cfiCond46) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond46) R5 Frame(CFA_Y, -11)
          CFI (cfiCond46) R6 Frame(CFA_Y, -10)
          CFI (cfiCond46) R7 Frame(CFA_Y, -9)
          CFI (cfiCond46) R8 Frame(CFA_Y, -8)
          CFI (cfiCond46) R9 Frame(CFA_Y, -7)
          CFI (cfiCond46) R10 Frame(CFA_Y, -6)
          CFI (cfiCond46) R11 Frame(CFA_Y, -5)
          CFI (cfiCond46) R12 Frame(CFA_Y, -4)
          CFI (cfiCond46) R13 Frame(CFA_Y, -3)
          CFI (cfiCond46) R14 Frame(CFA_Y, -2)
          CFI (cfiCond46) R15 Frame(CFA_Y, -1)
          CFI (cfiCond46) CFA_SP SP+4
          CFI (cfiCond46) CFA_Y Y+11
          CFI Block cfiCond47 Using cfiCommon0
          CFI (cfiCond47) Function ??functionSetupWidgets
          CFI (cfiCond47) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond47) R5 Frame(CFA_Y, -2)
          CFI (cfiCond47) R6 Frame(CFA_Y, -1)
          CFI (cfiCond47) CFA_SP SP+4
          CFI (cfiCond47) CFA_Y Y+2
          CFI Block cfiPicker48 Using cfiCommon2
          CFI (cfiPicker48) NoFunction
          CFI (cfiPicker48) Picker
        ST      -Y, R4
          CFI EndBlock cfiCond45
          CFI EndBlock cfiCond46
          CFI EndBlock cfiCond47
          CFI EndBlock cfiPicker48
        REQUIRE ??Subroutine56_0
        ;               // Fall through to label ??Subroutine56_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine56_0:
          CFI Block cfiCond49 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_115
          CFI CFA_SP SP+4
          CFI Block cfiCond50 Using cfiCommon0
          CFI (cfiCond50) Function ??functionWidget
          CFI (cfiCond50) Conditional ??CrossCallReturnLabel_116
          CFI (cfiCond50) CFA_SP SP+4
          CFI Block cfiCond51 Using cfiCommon0
          CFI (cfiCond51) Function ??updateCounter
          CFI (cfiCond51) Conditional ??CrossCallReturnLabel_117
          CFI (cfiCond51) R4 Frame(CFA_Y, -1)
          CFI (cfiCond51) CFA_SP SP+4
          CFI (cfiCond51) CFA_Y Y+1
          CFI Block cfiCond52 Using cfiCommon0
          CFI (cfiCond52) Function ??displayWidgetCounterValue
          CFI (cfiCond52) Conditional ??CrossCallReturnLabel_118
          CFI (cfiCond52) R4 Frame(CFA_Y, -12)
          CFI (cfiCond52) R5 Frame(CFA_Y, -11)
          CFI (cfiCond52) R6 Frame(CFA_Y, -10)
          CFI (cfiCond52) R7 Frame(CFA_Y, -9)
          CFI (cfiCond52) R8 Frame(CFA_Y, -8)
          CFI (cfiCond52) R9 Frame(CFA_Y, -7)
          CFI (cfiCond52) R10 Frame(CFA_Y, -6)
          CFI (cfiCond52) R11 Frame(CFA_Y, -5)
          CFI (cfiCond52) R12 Frame(CFA_Y, -4)
          CFI (cfiCond52) R13 Frame(CFA_Y, -3)
          CFI (cfiCond52) R14 Frame(CFA_Y, -2)
          CFI (cfiCond52) R15 Frame(CFA_Y, -1)
          CFI (cfiCond52) CFA_SP SP+4
          CFI (cfiCond52) CFA_Y Y+12
          CFI Block cfiCond53 Using cfiCommon0
          CFI (cfiCond53) Function ??functionSetupWidgets
          CFI (cfiCond53) Conditional ??CrossCallReturnLabel_119
          CFI (cfiCond53) R4 Frame(CFA_Y, -3)
          CFI (cfiCond53) R5 Frame(CFA_Y, -2)
          CFI (cfiCond53) R6 Frame(CFA_Y, -1)
          CFI (cfiCond53) CFA_SP SP+4
          CFI (cfiCond53) CFA_Y Y+3
          CFI Block cfiPicker54 Using cfiCommon2
          CFI (cfiPicker54) NoFunction
          CFI (cfiPicker54) Picker
        ST      -Y, R27
          CFI (cfiCond49) R27 Frame(CFA_Y, -1)
          CFI (cfiCond49) CFA_Y Y+1
          CFI (cfiCond50) R27 Frame(CFA_Y, -1)
          CFI (cfiCond50) CFA_Y Y+1
          CFI (cfiCond51) R27 Frame(CFA_Y, -2)
          CFI (cfiCond51) CFA_Y Y+2
          CFI (cfiCond52) R27 Frame(CFA_Y, -13)
          CFI (cfiCond52) CFA_Y Y+13
          CFI (cfiCond53) R27 Frame(CFA_Y, -4)
          CFI (cfiCond53) CFA_Y Y+4
          CFI (cfiPicker54) R27 Frame(CFA_Y, -13)
        ST      -Y, R26
          CFI (cfiCond49) R26 Frame(CFA_Y, -2)
          CFI (cfiCond49) CFA_Y Y+2
          CFI (cfiCond50) R26 Frame(CFA_Y, -2)
          CFI (cfiCond50) CFA_Y Y+2
          CFI (cfiCond51) R26 Frame(CFA_Y, -3)
          CFI (cfiCond51) CFA_Y Y+3
          CFI (cfiCond52) R26 Frame(CFA_Y, -14)
          CFI (cfiCond52) CFA_Y Y+14
          CFI (cfiCond53) R26 Frame(CFA_Y, -5)
          CFI (cfiCond53) CFA_Y Y+5
          CFI (cfiPicker54) R26 Frame(CFA_Y, -14)
        ST      -Y, R25
          CFI (cfiCond49) R25 Frame(CFA_Y, -3)
          CFI (cfiCond49) CFA_Y Y+3
          CFI (cfiCond50) R25 Frame(CFA_Y, -3)
          CFI (cfiCond50) CFA_Y Y+3
          CFI (cfiCond51) R25 Frame(CFA_Y, -4)
          CFI (cfiCond51) CFA_Y Y+4
          CFI (cfiCond52) R25 Frame(CFA_Y, -15)
          CFI (cfiCond52) CFA_Y Y+15
          CFI (cfiCond53) R25 Frame(CFA_Y, -6)
          CFI (cfiCond53) CFA_Y Y+6
          CFI (cfiPicker54) R25 Frame(CFA_Y, -15)
        ST      -Y, R24
          CFI (cfiCond49) R24 Frame(CFA_Y, -4)
          CFI (cfiCond49) CFA_Y Y+4
          CFI (cfiCond50) R24 Frame(CFA_Y, -4)
          CFI (cfiCond50) CFA_Y Y+4
          CFI (cfiCond51) R24 Frame(CFA_Y, -5)
          CFI (cfiCond51) CFA_Y Y+5
          CFI (cfiCond52) R24 Frame(CFA_Y, -16)
          CFI (cfiCond52) CFA_Y Y+16
          CFI (cfiCond53) R24 Frame(CFA_Y, -7)
          CFI (cfiCond53) CFA_Y Y+7
          CFI (cfiPicker54) R24 Frame(CFA_Y, -16)
        RET
          CFI EndBlock cfiCond49
          CFI EndBlock cfiCond50
          CFI EndBlock cfiCond51
          CFI EndBlock cfiCond52
          CFI EndBlock cfiCond53
          CFI EndBlock cfiPicker54
//  192 

        RSEG CODE:CODE:NOROOT(1)
//  193   void displayWidgetBackground(TUserMenuInfoblockType _infoblockType, bool _designPreview = false)
??displayWidgetBackground:
          CFI Block cfiBlock55 Using cfiCommon0
          CFI Function ??displayWidgetBackground
//  194   {
        FUNCALL ??displayWidgetBackground, ??getString
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??str2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??getString
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??str2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??getString
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??str2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??num2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??getString
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??str2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??getString
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??str2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??getString
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??str2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??getString
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??str2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??getString
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetBackground, ??str2Buf
        LOCFRAME CSTACK, 6, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ??Subroutine56_0
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+4
??CrossCallReturnLabel_115:
        MOV     R25, R16
        MOV     R24, R17
//  195     switch (_infoblockType)
        TST     R16
        BREQ    ??displayWidgetBackground_1
        DEC     R16
        BREQ    ??displayWidgetBackground_2
        DEC     R16
        BREQ    ??displayWidgetBackground_3
        DEC     R16
        BREQ    ??displayWidgetBackground_3
        DEC     R16
        BRNE    $+2+2
        RJMP    ??displayWidgetBackground_4
        RJMP    ??CrossCallReturnLabel_90
//  196     {
//  197       case UserMenuInfoblockType_None:
//  198         if (_designPreview)
??displayWidgetBackground_1:
        TST     R17
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_90
//  199         {
//  200           LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_TEXT_WIDGET_SWITCHED_OFF), LCDDriver::LCDTextIdentation_Center);
        LDI     R16, 126
        RCALL   ?Subroutine23
//  201         }
??CrossCallReturnLabel_32:
        LDI     R16, 0
        RJMP    ??displayWidgetBackground_5
//  202         break;
//  203 
//  204       case UserMenuInfoblockType_DateTimeFull2Cnt:
//  205         LCDDriver::num2Buf(0, 1, GLOBAL::RTC::RTCDateTime.day, 2, LCD_DISPLAY_SYMBOL_SPACE);
??displayWidgetBackground_2:
        RCALL   ?Subroutine13
??CrossCallReturnLabel_134:
        LDI     R17, 1
        RCALL   ?Subroutine6
??CrossCallReturnLabel_8:
        RCALL   ?Subroutine12
//  206         LCDDriver::displayState.line[0][2] = LCD_DISPLAY_SYMBOL_DASH;
//  207         LCDDriver::num2Buf(0, 4, GLOBAL::RTC::RTCDateTime.month, 2, '0');
??CrossCallReturnLabel_120:
        RCALL   ?Subroutine6
//  208         LCDDriver::displayState.line[0][5] = LCD_DISPLAY_SYMBOL_DASH;
??CrossCallReturnLabel_9:
        STS     (??displayState + 9), R16
//  209         LCDDriver::num2Buf(0, 9, GLOBAL::RTC::RTCDateTime.year, 4, LCD_DISPLAY_SYMBOL_SPACE);
        LDI     R19, 32
        LDI     R18, 4
        LD      R20, X+
        LD      R21, X
        RCALL   ??Subroutine59_0
??CrossCallReturnLabel_126:
        LDI     R17, 9
        RCALL   ?Subroutine1
??CrossCallReturnLabel_0:
        LDI     R17, 1
        RCALL   ?Subroutine3
??CrossCallReturnLabel_4:
        STS     (??displayState + 22), R16
//  210 
//  211         LCDDriver::num2Buf(1, 1, GLOBAL::RTC::RTCDateTime.hour, 2, LCD_DISPLAY_SYMBOL_SPACE);
//  212         LCDDriver::displayState.line[1][2] = LCD_DISPLAY_SYMBOL_COLON;
//  213         LCDDriver::num2Buf(1, 4, GLOBAL::RTC::RTCDateTime.minute, 2, '0');
        RCALL   ?Subroutine34
??CrossCallReturnLabel_53:
        RCALL   ??Subroutine57_0
??CrossCallReturnLabel_122:
        RCALL   ?Subroutine3
//  214         LCDDriver::displayState.line[1][5] = LCD_DISPLAY_SYMBOL_COLON;
??CrossCallReturnLabel_5:
        STS     (??displayState + 25), R16
//  215         LCDDriver::num2Buf(1, 7, GLOBAL::RTC::RTCDateTime.second, 2, '0');
        RCALL   ?Subroutine48
??CrossCallReturnLabel_92:
        LDS     R20, (??RTCDateTime + 6)
        RCALL   ??Subroutine58_0
??CrossCallReturnLabel_131:
        LDI     R17, 7
        RCALL   ?Subroutine46
//  216 
//  217         if (_designPreview)
??CrossCallReturnLabel_87:
        TST     R24
        BREQ    ??CrossCallReturnLabel_90
//  218         {
//  219           LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_TEXT_WIDGET_COUNTER1_SHORT), LCDDriver::LCDTextIdentation_Right, 15);
        LDI     R16, 127
        RCALL   ?Subroutine24
//  220           LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_TEXT_WIDGET_COUNTER2_SHORT), LCDDriver::LCDTextIdentation_Right, 15);
//  221         }
??CrossCallReturnLabel_35:
        LDI     R16, 0
        RJMP    ??displayWidgetBackground_6
//  222         break;
//  223 
//  224       case UserMenuInfoblockType_DateTimeShort2Cnt:
//  225       case UserMenuInfoblockType_DateTimeShort1Cnt:
//  226         LCDDriver::num2Buf(0, 1, GLOBAL::RTC::RTCDateTime.day, 2, LCD_DISPLAY_SYMBOL_SPACE);
??displayWidgetBackground_3:
        RCALL   ?Subroutine13
??CrossCallReturnLabel_135:
        LDI     R17, 1
        RCALL   ?Subroutine7
??CrossCallReturnLabel_10:
        RCALL   ?Subroutine12
//  227         LCDDriver::displayState.line[0][2] = LCD_DISPLAY_SYMBOL_SLASH;
//  228         LCDDriver::num2Buf(0, 4, GLOBAL::RTC::RTCDateTime.month, 2, '0');
??CrossCallReturnLabel_121:
        RCALL   ?Subroutine7
//  229         LCDDriver::displayState.line[0][5] = LCD_DISPLAY_SYMBOL_SLASH;
??CrossCallReturnLabel_11:
        STS     (??displayState + 9), R16
//  230         LCDDriver::num2Buf(0, 7, GLOBAL::RTC::RTCDateTime.year % 100, 2, '0');
        RCALL   ?Subroutine48
??CrossCallReturnLabel_93:
        LDI     R20, 100
        LDI     R21, 0
        LD      R16, X+
        LD      R17, X
        CALL    ?US_DIVMOD_L02
        RCALL   ??Subroutine59_0
??CrossCallReturnLabel_127:
        LDI     R17, 7
        RCALL   ?Subroutine1
//  231 
//  232         LCDDriver::num2Buf(0, 10, GLOBAL::RTC::RTCDateTime.hour, 2, LCD_DISPLAY_SYMBOL_SPACE);
??CrossCallReturnLabel_1:
        LDI     R17, 10
        RCALL   ?Subroutine45
//  233         LCDDriver::displayState.line[0][11] = LCD_DISPLAY_SYMBOL_COLON;
??CrossCallReturnLabel_81:
        LDI     R16, 58
        STS     (??displayState + 15), R16
//  234         LCDDriver::num2Buf(0, 13, GLOBAL::RTC::RTCDateTime.minute, 2, '0');
        RCALL   ?Subroutine34
??CrossCallReturnLabel_54:
        RCALL   ??Subroutine58_0
??CrossCallReturnLabel_132:
        LDI     R17, 13
        RCALL   ?Subroutine45
//  235 
//  236         if (_designPreview)
??CrossCallReturnLabel_80:
        TST     R24
        BREQ    ??CrossCallReturnLabel_90
//  237         {
//  238           if (_infoblockType == UserMenuInfoblockType_DateTimeShort1Cnt)
        CPI     R25, 3
        BRNE    ??displayWidgetBackground_7
//  239           {
//  240             LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_TEXT_WIDGET_COUNTER1_LONG), LCDDriver::LCDTextIdentation_Right, 15);
        LDI     R16, 129
        RJMP    ??displayWidgetBackground_8
//  241           }
//  242           else
//  243           {
//  244             LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_TEXT_WIDGET_COUNTER1_SHORT), LCDDriver::LCDTextIdentation_Right, 6);
??displayWidgetBackground_7:
        LDI     R16, 127
        RCALL   ?Subroutine49
??CrossCallReturnLabel_98:
        LDI     R18, 6
        LDI     R17, 2
        LDI     R16, 1
??displayWidgetBackground_6:
        RCALL   ?Subroutine47
//  245             LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_TEXT_WIDGET_COUNTER2_SHORT), LCDDriver::LCDTextIdentation_Right, 15);
??CrossCallReturnLabel_91:
        LDI     R16, 128
        RJMP    ??displayWidgetBackground_8
//  246           }
//  247         }
//  248         break;
//  249 
//  250       case UserMenuInfoblockType_Counter2:
//  251         if (_designPreview)
??displayWidgetBackground_4:
        TST     R17
        BREQ    ??CrossCallReturnLabel_90
//  252         {
//  253           LCDDriver::str2Buf(0, getString(USER_TEXT_CONST_TEXT_WIDGET_COUNTER1_LONG), LCDDriver::LCDTextIdentation_Right, 15);
        LDI     R16, 129
        RCALL   ?Subroutine24
??CrossCallReturnLabel_36:
        RCALL   ?Subroutine9
//  254           LCDDriver::str2Buf(1, getString(USER_TEXT_CONST_TEXT_WIDGET_COUNTER2_LONG), LCDDriver::LCDTextIdentation_Right, 15);
??CrossCallReturnLabel_88:
        LDI     R16, 130
//  255         }
//  256         break;
//  257     }
??displayWidgetBackground_8:
        RCALL   ?Subroutine24
??CrossCallReturnLabel_37:
        LDI     R16, 1
??displayWidgetBackground_5:
        RCALL   ?Subroutine47
//  258   }
??CrossCallReturnLabel_90:
        RJMP    ?Subroutine19
          CFI EndBlock cfiBlock55

        RSEG CODE:CODE:NOROOT(1)
?Subroutine34:
          CFI Block cfiCond56 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_53
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond57 Using cfiCommon0
          CFI (cfiCond57) Function ??displayWidgetBackground
          CFI (cfiCond57) Conditional ??CrossCallReturnLabel_54
          CFI (cfiCond57) R24 Frame(CFA_Y, -4)
          CFI (cfiCond57) R25 Frame(CFA_Y, -3)
          CFI (cfiCond57) R26 Frame(CFA_Y, -2)
          CFI (cfiCond57) R27 Frame(CFA_Y, -1)
          CFI (cfiCond57) CFA_SP SP+4
          CFI (cfiCond57) CFA_Y Y+4
          CFI Block cfiPicker58 Using cfiCommon2
          CFI (cfiPicker58) NoFunction
          CFI (cfiPicker58) Picker
        RCALL   ?Subroutine48
??CrossCallReturnLabel_95:
        LDS     R20, (??RTCDateTime + 5)
        RET
          CFI EndBlock cfiCond56
          CFI EndBlock cfiCond57
          CFI EndBlock cfiPicker58

        RSEG CODE:CODE:NOROOT(1)
?Subroutine48:
          CFI Block cfiCond59 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_92
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond60 Using cfiCommon0
          CFI (cfiCond60) Function ??displayWidgetBackground
          CFI (cfiCond60) Conditional ??CrossCallReturnLabel_93
          CFI (cfiCond60) R24 Frame(CFA_Y, -4)
          CFI (cfiCond60) R25 Frame(CFA_Y, -3)
          CFI (cfiCond60) R26 Frame(CFA_Y, -2)
          CFI (cfiCond60) R27 Frame(CFA_Y, -1)
          CFI (cfiCond60) CFA_SP SP+4
          CFI (cfiCond60) CFA_Y Y+4
          CFI Block cfiCond61 Using cfiCommon0
          CFI (cfiCond61) Function ??displayWidgetBackground
          CFI (cfiCond61) Conditional ??CrossCallReturnLabel_95, ??CrossCallReturnLabel_53
          CFI (cfiCond61) R24 Frame(CFA_Y, -4)
          CFI (cfiCond61) R25 Frame(CFA_Y, -3)
          CFI (cfiCond61) R26 Frame(CFA_Y, -2)
          CFI (cfiCond61) R27 Frame(CFA_Y, -1)
          CFI (cfiCond61) CFA_SP SP+6
          CFI (cfiCond61) CFA_Y Y+4
          CFI Block cfiCond62 Using cfiCommon0
          CFI (cfiCond62) Function ??displayWidgetBackground
          CFI (cfiCond62) Conditional ??CrossCallReturnLabel_95, ??CrossCallReturnLabel_54
          CFI (cfiCond62) R24 Frame(CFA_Y, -4)
          CFI (cfiCond62) R25 Frame(CFA_Y, -3)
          CFI (cfiCond62) R26 Frame(CFA_Y, -2)
          CFI (cfiCond62) R27 Frame(CFA_Y, -1)
          CFI (cfiCond62) CFA_SP SP+6
          CFI (cfiCond62) CFA_Y Y+4
          CFI Block cfiCond63 Using cfiCommon0
          CFI (cfiCond63) Function ??displayWidgetBackground
          CFI (cfiCond63) Conditional ??CrossCallReturnLabel_94, ??CrossCallReturnLabel_120
          CFI (cfiCond63) R24 Frame(CFA_Y, -4)
          CFI (cfiCond63) R25 Frame(CFA_Y, -3)
          CFI (cfiCond63) R26 Frame(CFA_Y, -2)
          CFI (cfiCond63) R27 Frame(CFA_Y, -1)
          CFI (cfiCond63) CFA_SP SP+6
          CFI (cfiCond63) CFA_Y Y+4
          CFI Block cfiCond64 Using cfiCommon0
          CFI (cfiCond64) Function ??displayWidgetBackground
          CFI (cfiCond64) Conditional ??CrossCallReturnLabel_94, ??CrossCallReturnLabel_121
          CFI (cfiCond64) R24 Frame(CFA_Y, -4)
          CFI (cfiCond64) R25 Frame(CFA_Y, -3)
          CFI (cfiCond64) R26 Frame(CFA_Y, -2)
          CFI (cfiCond64) R27 Frame(CFA_Y, -1)
          CFI (cfiCond64) CFA_SP SP+6
          CFI (cfiCond64) CFA_Y Y+4
          CFI Block cfiPicker65 Using cfiCommon2
          CFI (cfiPicker65) NoFunction
          CFI (cfiPicker65) Picker
        LDI     R19, 48
        LDI     R18, 2
        RET
          CFI EndBlock cfiCond59
          CFI EndBlock cfiCond60
          CFI EndBlock cfiCond61
          CFI EndBlock cfiCond62
          CFI EndBlock cfiCond63
          CFI EndBlock cfiCond64
          CFI EndBlock cfiPicker65

        RSEG CODE:CODE:NOROOT(1)
?Subroutine24:
          CFI Block cfiCond66 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_35
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond67 Using cfiCommon0
          CFI (cfiCond67) Function ??displayWidgetBackground
          CFI (cfiCond67) Conditional ??CrossCallReturnLabel_36
          CFI (cfiCond67) R24 Frame(CFA_Y, -4)
          CFI (cfiCond67) R25 Frame(CFA_Y, -3)
          CFI (cfiCond67) R26 Frame(CFA_Y, -2)
          CFI (cfiCond67) R27 Frame(CFA_Y, -1)
          CFI (cfiCond67) CFA_SP SP+4
          CFI (cfiCond67) CFA_Y Y+4
          CFI Block cfiCond68 Using cfiCommon0
          CFI (cfiCond68) Function ??displayWidgetBackground
          CFI (cfiCond68) Conditional ??CrossCallReturnLabel_37
          CFI (cfiCond68) R24 Frame(CFA_Y, -4)
          CFI (cfiCond68) R25 Frame(CFA_Y, -3)
          CFI (cfiCond68) R26 Frame(CFA_Y, -2)
          CFI (cfiCond68) R27 Frame(CFA_Y, -1)
          CFI (cfiCond68) CFA_SP SP+4
          CFI (cfiCond68) CFA_Y Y+4
          CFI Block cfiPicker69 Using cfiCommon2
          CFI (cfiPicker69) NoFunction
          CFI (cfiPicker69) Picker
        RCALL   ?Subroutine49
??CrossCallReturnLabel_96:
        LDI     R18, 15
        LDI     R17, 2
        RET
          CFI EndBlock cfiCond66
          CFI EndBlock cfiCond67
          CFI EndBlock cfiCond68
          CFI EndBlock cfiPicker69

        RSEG CODE:CODE:NOROOT(1)
?Subroutine12:
          CFI Block cfiCond70 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_120
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond71 Using cfiCommon0
          CFI (cfiCond71) Function ??displayWidgetBackground
          CFI (cfiCond71) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond71) R24 Frame(CFA_Y, -4)
          CFI (cfiCond71) R25 Frame(CFA_Y, -3)
          CFI (cfiCond71) R26 Frame(CFA_Y, -2)
          CFI (cfiCond71) R27 Frame(CFA_Y, -1)
          CFI (cfiCond71) CFA_SP SP+4
          CFI (cfiCond71) CFA_Y Y+4
          CFI Block cfiPicker72 Using cfiCommon2
          CFI (cfiPicker72) NoFunction
          CFI (cfiPicker72) Picker
        STS     (??displayState + 6), R16
        RCALL   ?Subroutine48
??CrossCallReturnLabel_94:
        LDS     R20, (??RTCDateTime + 2)
          CFI EndBlock cfiCond70
          CFI EndBlock cfiCond71
          CFI EndBlock cfiPicker72
        REQUIRE ??Subroutine57_0
        ;               // Fall through to label ??Subroutine57_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine57_0:
          CFI Block cfiCond73 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_122
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond74 Using cfiCommon0
          CFI (cfiCond74) Function ??displayWidgetBackground
          CFI (cfiCond74) Conditional ??CrossCallReturnLabel_120
          CFI (cfiCond74) R24 Frame(CFA_Y, -4)
          CFI (cfiCond74) R25 Frame(CFA_Y, -3)
          CFI (cfiCond74) R26 Frame(CFA_Y, -2)
          CFI (cfiCond74) R27 Frame(CFA_Y, -1)
          CFI (cfiCond74) CFA_SP SP+4
          CFI (cfiCond74) CFA_Y Y+4
          CFI Block cfiCond75 Using cfiCommon0
          CFI (cfiCond75) Function ??displayWidgetBackground
          CFI (cfiCond75) Conditional ??CrossCallReturnLabel_121
          CFI (cfiCond75) R24 Frame(CFA_Y, -4)
          CFI (cfiCond75) R25 Frame(CFA_Y, -3)
          CFI (cfiCond75) R26 Frame(CFA_Y, -2)
          CFI (cfiCond75) R27 Frame(CFA_Y, -1)
          CFI (cfiCond75) CFA_SP SP+4
          CFI (cfiCond75) CFA_Y Y+4
          CFI Block cfiPicker76 Using cfiCommon2
          CFI (cfiPicker76) NoFunction
          CFI (cfiPicker76) Picker
        LDI     R21, 0
        LDI     R22, 0
        LDI     R23, 0
        LDI     R17, 4
        RET
          CFI EndBlock cfiCond73
          CFI EndBlock cfiCond74
          CFI EndBlock cfiCond75
          CFI EndBlock cfiPicker76

        RSEG CODE:CODE:NOROOT(1)
?Subroutine45:
          CFI Block cfiCond77 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond78 Using cfiCommon0
          CFI (cfiCond78) Function ??displayWidgetBackground
          CFI (cfiCond78) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond78) R24 Frame(CFA_Y, -4)
          CFI (cfiCond78) R25 Frame(CFA_Y, -3)
          CFI (cfiCond78) R26 Frame(CFA_Y, -2)
          CFI (cfiCond78) R27 Frame(CFA_Y, -1)
          CFI (cfiCond78) CFA_SP SP+4
          CFI (cfiCond78) CFA_Y Y+4
          CFI Block cfiCond79 Using cfiCommon0
          CFI (cfiCond79) Function ??displayWidgetBackground
          CFI (cfiCond79) Conditional ??CrossCallReturnLabel_82, ??CrossCallReturnLabel_10
          CFI (cfiCond79) R24 Frame(CFA_Y, -4)
          CFI (cfiCond79) R25 Frame(CFA_Y, -3)
          CFI (cfiCond79) R26 Frame(CFA_Y, -2)
          CFI (cfiCond79) R27 Frame(CFA_Y, -1)
          CFI (cfiCond79) CFA_SP SP+6
          CFI (cfiCond79) CFA_Y Y+4
          CFI Block cfiCond80 Using cfiCommon0
          CFI (cfiCond80) Function ??displayWidgetBackground
          CFI (cfiCond80) Conditional ??CrossCallReturnLabel_82, ??CrossCallReturnLabel_11
          CFI (cfiCond80) R24 Frame(CFA_Y, -4)
          CFI (cfiCond80) R25 Frame(CFA_Y, -3)
          CFI (cfiCond80) R26 Frame(CFA_Y, -2)
          CFI (cfiCond80) R27 Frame(CFA_Y, -1)
          CFI (cfiCond80) CFA_SP SP+6
          CFI (cfiCond80) CFA_Y Y+4
          CFI Block cfiCond81 Using cfiCommon0
          CFI (cfiCond81) Function ??displayWidgetBackground
          CFI (cfiCond81) Conditional ??CrossCallReturnLabel_83, ??CrossCallReturnLabel_8
          CFI (cfiCond81) R24 Frame(CFA_Y, -4)
          CFI (cfiCond81) R25 Frame(CFA_Y, -3)
          CFI (cfiCond81) R26 Frame(CFA_Y, -2)
          CFI (cfiCond81) R27 Frame(CFA_Y, -1)
          CFI (cfiCond81) CFA_SP SP+6
          CFI (cfiCond81) CFA_Y Y+4
          CFI Block cfiCond82 Using cfiCommon0
          CFI (cfiCond82) Function ??displayWidgetBackground
          CFI (cfiCond82) Conditional ??CrossCallReturnLabel_83, ??CrossCallReturnLabel_9
          CFI (cfiCond82) R24 Frame(CFA_Y, -4)
          CFI (cfiCond82) R25 Frame(CFA_Y, -3)
          CFI (cfiCond82) R26 Frame(CFA_Y, -2)
          CFI (cfiCond82) R27 Frame(CFA_Y, -1)
          CFI (cfiCond82) CFA_SP SP+6
          CFI (cfiCond82) CFA_Y Y+4
          CFI Block cfiCond83 Using cfiCommon0
          CFI (cfiCond83) Function ??displayWidgetBackground
          CFI (cfiCond83) Conditional ??CrossCallReturnLabel_84, ??CrossCallReturnLabel_0
          CFI (cfiCond83) R24 Frame(CFA_Y, -4)
          CFI (cfiCond83) R25 Frame(CFA_Y, -3)
          CFI (cfiCond83) R26 Frame(CFA_Y, -2)
          CFI (cfiCond83) R27 Frame(CFA_Y, -1)
          CFI (cfiCond83) CFA_SP SP+6
          CFI (cfiCond83) CFA_Y Y+4
          CFI Block cfiCond84 Using cfiCommon0
          CFI (cfiCond84) Function ??displayWidgetBackground
          CFI (cfiCond84) Conditional ??CrossCallReturnLabel_84, ??CrossCallReturnLabel_1
          CFI (cfiCond84) R24 Frame(CFA_Y, -4)
          CFI (cfiCond84) R25 Frame(CFA_Y, -3)
          CFI (cfiCond84) R26 Frame(CFA_Y, -2)
          CFI (cfiCond84) R27 Frame(CFA_Y, -1)
          CFI (cfiCond84) CFA_SP SP+6
          CFI (cfiCond84) CFA_Y Y+4
          CFI Block cfiPicker85 Using cfiCommon2
          CFI (cfiPicker85) NoFunction
          CFI (cfiPicker85) Picker
        LDI     R16, 0
        RJMP    ?Subroutine53
          CFI EndBlock cfiCond77
          CFI EndBlock cfiCond78
          CFI EndBlock cfiCond79
          CFI EndBlock cfiCond80
          CFI EndBlock cfiCond81
          CFI EndBlock cfiCond82
          CFI EndBlock cfiCond83
          CFI EndBlock cfiCond84
          CFI EndBlock cfiPicker85

        RSEG CODE:CODE:NOROOT(1)
?Subroutine7:
          CFI Block cfiCond86 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_10
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond87 Using cfiCommon0
          CFI (cfiCond87) Function ??displayWidgetBackground
          CFI (cfiCond87) Conditional ??CrossCallReturnLabel_11
          CFI (cfiCond87) R24 Frame(CFA_Y, -4)
          CFI (cfiCond87) R25 Frame(CFA_Y, -3)
          CFI (cfiCond87) R26 Frame(CFA_Y, -2)
          CFI (cfiCond87) R27 Frame(CFA_Y, -1)
          CFI (cfiCond87) CFA_SP SP+4
          CFI (cfiCond87) CFA_Y Y+4
          CFI Block cfiPicker88 Using cfiCommon2
          CFI (cfiPicker88) NoFunction
          CFI (cfiPicker88) Picker
        RCALL   ?Subroutine45
??CrossCallReturnLabel_82:
        LDI     R16, 47
        RET
          CFI EndBlock cfiCond86
          CFI EndBlock cfiCond87
          CFI EndBlock cfiPicker88

        RSEG CODE:CODE:NOROOT(1)
?Subroutine6:
          CFI Block cfiCond89 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_8
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond90 Using cfiCommon0
          CFI (cfiCond90) Function ??displayWidgetBackground
          CFI (cfiCond90) Conditional ??CrossCallReturnLabel_9
          CFI (cfiCond90) R24 Frame(CFA_Y, -4)
          CFI (cfiCond90) R25 Frame(CFA_Y, -3)
          CFI (cfiCond90) R26 Frame(CFA_Y, -2)
          CFI (cfiCond90) R27 Frame(CFA_Y, -1)
          CFI (cfiCond90) CFA_SP SP+4
          CFI (cfiCond90) CFA_Y Y+4
          CFI Block cfiPicker91 Using cfiCommon2
          CFI (cfiPicker91) NoFunction
          CFI (cfiPicker91) Picker
        RCALL   ?Subroutine45
??CrossCallReturnLabel_83:
        LDI     R16, 45
        RET
          CFI EndBlock cfiCond89
          CFI EndBlock cfiCond90
          CFI EndBlock cfiPicker91

        RSEG CODE:CODE:NOROOT(1)
?Subroutine3:
          CFI Block cfiCond92 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_4
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond93 Using cfiCommon0
          CFI (cfiCond93) Function ??displayWidgetBackground
          CFI (cfiCond93) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond93) R24 Frame(CFA_Y, -4)
          CFI (cfiCond93) R25 Frame(CFA_Y, -3)
          CFI (cfiCond93) R26 Frame(CFA_Y, -2)
          CFI (cfiCond93) R27 Frame(CFA_Y, -1)
          CFI (cfiCond93) CFA_SP SP+4
          CFI (cfiCond93) CFA_Y Y+4
          CFI Block cfiPicker94 Using cfiCommon2
          CFI (cfiPicker94) NoFunction
          CFI (cfiPicker94) Picker
        RCALL   ?Subroutine46
??CrossCallReturnLabel_85:
        LDI     R16, 58
        RET
          CFI EndBlock cfiCond92
          CFI EndBlock cfiCond93
          CFI EndBlock cfiPicker94

        RSEG CODE:CODE:NOROOT(1)
?Subroutine1:
          CFI Block cfiCond95 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_0
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond96 Using cfiCommon0
          CFI (cfiCond96) Function ??displayWidgetBackground
          CFI (cfiCond96) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond96) R24 Frame(CFA_Y, -4)
          CFI (cfiCond96) R25 Frame(CFA_Y, -3)
          CFI (cfiCond96) R26 Frame(CFA_Y, -2)
          CFI (cfiCond96) R27 Frame(CFA_Y, -1)
          CFI (cfiCond96) CFA_SP SP+4
          CFI (cfiCond96) CFA_Y Y+4
          CFI Block cfiPicker97 Using cfiCommon2
          CFI (cfiPicker97) NoFunction
          CFI (cfiPicker97) Picker
        RCALL   ?Subroutine45
??CrossCallReturnLabel_84:
        LDI     R19, 32
        LDI     R18, 2
        LDS     R20, (??RTCDateTime + 4)
        LDI     R21, 0
        LDI     R22, 0
        LDI     R23, 0
        RET
          CFI EndBlock cfiCond95
          CFI EndBlock cfiCond96
          CFI EndBlock cfiPicker97
//  259 

        RSEG CODE:CODE:NOROOT(1)
//  260   void displayWidgetCounterName(
??displayWidgetCounterName:
          CFI Block cfiBlock98 Using cfiCommon0
          CFI Function ??displayWidgetCounterName
//  261     TUserMenuInfoblockCounterSetup* _counterSetup,
//  262     unsigned char _posY,
//  263     unsigned char _posX,
//  264     bool _extended)
//  265   {
        FUNCALL ??displayWidgetCounterName, ??getString
        LOCFRAME CSTACK, 7, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetCounterName, ??str2Buf
        LOCFRAME CSTACK, 7, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetCounterName, ??getString
        LOCFRAME CSTACK, 7, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetCounterName, ??str2Buf
        LOCFRAME CSTACK, 7, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetCounterName, ??num2Buf
        LOCFRAME CSTACK, 7, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetCounterName, ??num2Buf
        LOCFRAME CSTACK, 7, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetCounterName, ??num2Buf
        LOCFRAME CSTACK, 7, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine20
          CFI R24 Frame(CFA_Y, -6)
          CFI R26 Frame(CFA_Y, -5)
          CFI R27 Frame(CFA_Y, -4)
          CFI R4 Frame(CFA_Y, -3)
          CFI R5 Frame(CFA_Y, -2)
          CFI R6 Frame(CFA_Y, -1)
          CFI CFA_Y Y+6
??CrossCallReturnLabel_27:
        REQUIRE ?Register_R4_is_cg_reg
        REQUIRE ?Register_R5_is_cg_reg
        REQUIRE ?Register_R6_is_cg_reg
        MOVW    R27:R26, R17:R16
        MOV     R5, R18
        MOV     R4, R19
        MOV     R6, R20
//  266     unsigned short strId;
//  267 
//  268     switch (_counterSetup->counterType)
        LD      R16, X
        SUBI    R16, 6
        BREQ    ??displayWidgetCounterName_1
        DEC     R16
        BRNE    ??displayWidgetCounterName_2
//  269     {
//  270       case UserMenuInfoblockCounterType_NoSensorHour:
//  271       case UserMenuInfoblockCounterType_NoSensorDay:
//  272         strId = USER_TEXT_CONST_TEXT_WIDGET_NOSENSOR;
??displayWidgetCounterName_1:
        LDI     R24, 103
//  273         break;
        RJMP    ??displayWidgetCounterName_3
//  274 
//  275       default:
//  276         switch (_counterSetup->counterDir)
??displayWidgetCounterName_2:
        MOV     R30, R26
        MOV     R31, R17
        LDD     R16, Z+1
        DEC     R16
        BREQ    ??displayWidgetCounterName_4
        DEC     R16
        BREQ    ??displayWidgetCounterName_5
        DEC     R16
        BREQ    ??displayWidgetCounterName_6
        DEC     R16
        BREQ    ??displayWidgetCounterName_7
        RJMP    ??displayWidgetCounterName_8
//  277         {
//  278           case UserMenuInfoblockCounterDirType_Out:
//  279             strId = USER_TEXT_CONST_TEXT_WIDGET_COUNT_OUT;
??displayWidgetCounterName_4:
        LDI     R24, 99
//  280             break;
        RJMP    ??displayWidgetCounterName_3
//  281 
//  282           case UserMenuInfoblockCounterDirType_Avg:
//  283             strId = USER_TEXT_CONST_TEXT_WIDGET_COUNT_AVG;
??displayWidgetCounterName_5:
        LDI     R24, 100
//  284             break;
        RJMP    ??displayWidgetCounterName_3
//  285 
//  286           case UserMenuInfoblockCounterDirType_Max:
//  287             strId = USER_TEXT_CONST_TEXT_WIDGET_COUNT_MAX;
??displayWidgetCounterName_6:
        LDI     R24, 101
//  288             break;
        RJMP    ??displayWidgetCounterName_3
//  289 
//  290           case UserMenuInfoblockCounterDirType_Min:
//  291             strId = USER_TEXT_CONST_TEXT_WIDGET_COUNT_MIN;
??displayWidgetCounterName_7:
        LDI     R24, 102
//  292             break;
        RJMP    ??displayWidgetCounterName_3
//  293 
//  294           default:
//  295             strId = USER_TEXT_CONST_TEXT_WIDGET_COUNT_IN;
??displayWidgetCounterName_8:
        LDI     R24, 98
//  296             break;
//  297         }
//  298         break;
//  299     }
//  300 
//  301     LCDDriver::str2Buf(_posY, getString(strId), LCDDriver::LCDTextIdentation_Left, _posX);
??displayWidgetCounterName_3:
        RCALL   ?Subroutine29
??CrossCallReturnLabel_100:
        MOV     R18, R4
        RCALL   ?Subroutine32
//  302 
//  303     if (_extended)
??CrossCallReturnLabel_51:
        TST     R6
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_109
//  304     {
//  305       switch (_counterSetup->counterType)
        LD      R16, X
        DEC     R16
        BREQ    ??displayWidgetCounterName_9
        DEC     R16
        BREQ    ??displayWidgetCounterName_10
        DEC     R16
        BREQ    ??displayWidgetCounterName_11
        DEC     R16
        BREQ    ??displayWidgetCounterName_12
        DEC     R16
        BREQ    ??displayWidgetCounterName_13
        DEC     R16
        BREQ    ??displayWidgetCounterName_9
        DEC     R16
        BREQ    ??displayWidgetCounterName_10
        RJMP    ??displayWidgetCounterName_14
//  306       {
//  307         case UserMenuInfoblockCounterType_VisitorsHour:
//  308         case UserMenuInfoblockCounterType_NoSensorHour:
//  309           strId = USER_TEXT_CONST_TEXT_WIDGET_HOUR_SHORT;
??displayWidgetCounterName_9:
        LDI     R24, 104
//  310           break;
        RJMP    ??displayWidgetCounterName_14
//  311 
//  312         case UserMenuInfoblockCounterType_VisitorsDay:
//  313         case UserMenuInfoblockCounterType_NoSensorDay:
//  314           strId = USER_TEXT_CONST_TEXT_WIDGET_DAY_SHORT;
??displayWidgetCounterName_10:
        LDI     R24, 105
//  315           break;
        RJMP    ??displayWidgetCounterName_14
//  316 
//  317         case UserMenuInfoblockCounterType_VisitorsWeek:
//  318           strId = USER_TEXT_CONST_TEXT_WIDGET_WEEK_SHORT;
??displayWidgetCounterName_11:
        LDI     R24, 106
//  319           break;
        RJMP    ??displayWidgetCounterName_14
//  320 
//  321         case UserMenuInfoblockCounterType_VisitorsMonth:
//  322           strId = USER_TEXT_CONST_TEXT_WIDGET_MONTH_SHORT;
??displayWidgetCounterName_12:
        LDI     R24, 107
//  323           break;
        RJMP    ??displayWidgetCounterName_14
//  324 
//  325         case UserMenuInfoblockCounterType_VisitorsTotal:
//  326           strId = USER_TEXT_CONST_TEXT_WIDGET_TOTAL_SHORT;
??displayWidgetCounterName_13:
        LDI     R24, 108
//  327           break;
//  328       }
//  329 
//  330       LCDDriver::str2Buf(_posY, getString(strId), LCDDriver::LCDTextIdentation_Left, _posX + 3);
??displayWidgetCounterName_14:
        RCALL   ?Subroutine29
??CrossCallReturnLabel_99:
        MOV     R18, R4
        SUBI    R18, 253
        RCALL   ?Subroutine32
//  331 
//  332       if (_counterSetup->counterShift && (_counterSetup->counterType != UserMenuInfoblockCounterType_VisitorsTotal))
??CrossCallReturnLabel_52:
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+2
        TST     R16
        BREQ    ??CrossCallReturnLabel_109
        LD      R16, X
        CPI     R16, 5
        BREQ    ??CrossCallReturnLabel_109
//  333       {
//  334         LCDDriver::displayState.line[_posY][_posX + 4] = LCD_DISPLAY_SYMBOL_DASH;
        LDI     R18, 45
        LDI     R30, LOW((??displayState + 8))
        LDI     R31, HIGH((??displayState + 8))
        LDI     R17, 0
        ADD     R30, R4
        ADC     R31, R17
        LDI     R16, 16
        MUL     R5, R16
        RCALL   ?Subroutine50
??CrossCallReturnLabel_102:
        ST      Z, R18
//  335 
//  336         if (_counterSetup->counterShift >= 100)
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+2
        MOVW    R21:R20, R17:R16
        RCALL   ??Subroutine59_0
??CrossCallReturnLabel_128:
        CPI     R16, 100
        BRCS    ??displayWidgetCounterName_15
//  337         {
//  338           LCDDriver::num2Buf(_posY, _posX + 7, _counterSetup->counterShift, 3);
        LDI     R19, 0
        LDI     R18, 3
        LDI     R16, 7
        RJMP    ??displayWidgetCounterName_16
//  339         }
//  340         else if (_counterSetup->counterShift >= 10)
??displayWidgetCounterName_15:
        CPI     R16, 10
        LDI     R19, 0
        BRCS    ??displayWidgetCounterName_17
//  341         {
//  342           LCDDriver::num2Buf(_posY, _posX + 6, _counterSetup->counterShift, 2);
        LDI     R18, 2
        LDI     R16, 6
        RJMP    ??displayWidgetCounterName_16
//  343         }
//  344         else
//  345         {
//  346           LCDDriver::num2Buf(_posY, _posX + 5, _counterSetup->counterShift, 1);
??displayWidgetCounterName_17:
        LDI     R18, 1
        LDI     R16, 5
??displayWidgetCounterName_16:
        ADD     R4, R16
        MOV     R17, R4
        MOV     R16, R5
//  347         }
//  348       }
//  349     }
        RCALL   ?Subroutine53
//  350   }
??CrossCallReturnLabel_109:
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+5
        RJMP    ?Subroutine51
          CFI EndBlock cfiBlock98

        RSEG CODE:CODE:NOROOT(1)
?Subroutine32:
          CFI Block cfiCond99 Using cfiCommon0
          CFI Function ??displayWidgetCounterName
          CFI Conditional ??CrossCallReturnLabel_51
          CFI R24 Frame(CFA_Y, -6)
          CFI R26 Frame(CFA_Y, -5)
          CFI R27 Frame(CFA_Y, -4)
          CFI R4 Frame(CFA_Y, -3)
          CFI R5 Frame(CFA_Y, -2)
          CFI R6 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+6
          CFI Block cfiCond100 Using cfiCommon0
          CFI (cfiCond100) Function ??displayWidgetCounterName
          CFI (cfiCond100) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond100) R24 Frame(CFA_Y, -6)
          CFI (cfiCond100) R26 Frame(CFA_Y, -5)
          CFI (cfiCond100) R27 Frame(CFA_Y, -4)
          CFI (cfiCond100) R4 Frame(CFA_Y, -3)
          CFI (cfiCond100) R5 Frame(CFA_Y, -2)
          CFI (cfiCond100) R6 Frame(CFA_Y, -1)
          CFI (cfiCond100) CFA_SP SP+4
          CFI (cfiCond100) CFA_Y Y+6
          CFI Block cfiPicker101 Using cfiCommon2
          CFI (cfiPicker101) NoFunction
          CFI (cfiPicker101) Picker
        LDI     R17, 1
        MOV     R16, R5
        RJMP    ?Subroutine47
          CFI EndBlock cfiCond99
          CFI EndBlock cfiCond100
          CFI EndBlock cfiPicker101

        RSEG CODE:CODE:NOROOT(1)
?Subroutine20:
          CFI Block cfiCond102 Using cfiCommon0
          CFI Function ??scheduleWidgetStatisticOperation
          CFI Conditional ??CrossCallReturnLabel_26
          CFI R7 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+1
          CFI Block cfiCond103 Using cfiCommon0
          CFI (cfiCond103) Function ??displayWidgetCounterName
          CFI (cfiCond103) Conditional ??CrossCallReturnLabel_27
          CFI (cfiCond103) CFA_SP SP+4
          CFI Block cfiPicker104 Using cfiCommon2
          CFI (cfiPicker104) NoFunction
          CFI (cfiPicker104) Picker
        ST      -Y, R6
          CFI (cfiCond102) R6 Frame(CFA_Y, -2)
          CFI (cfiCond102) CFA_Y Y+2
          CFI (cfiCond103) R6 Frame(CFA_Y, -1)
          CFI (cfiCond103) CFA_Y Y+1
          CFI (cfiPicker104) R6 Frame(CFA_Y, -2)
        ST      -Y, R5
          CFI (cfiCond102) R5 Frame(CFA_Y, -3)
          CFI (cfiCond102) CFA_Y Y+3
          CFI (cfiCond103) R5 Frame(CFA_Y, -2)
          CFI (cfiCond103) CFA_Y Y+2
          CFI (cfiPicker104) R5 Frame(CFA_Y, -3)
        ST      -Y, R4
          CFI (cfiCond102) R4 Frame(CFA_Y, -4)
          CFI (cfiCond102) CFA_Y Y+4
          CFI (cfiCond103) R4 Frame(CFA_Y, -3)
          CFI (cfiCond103) CFA_Y Y+3
          CFI (cfiPicker104) R4 Frame(CFA_Y, -4)
        ST      -Y, R27
          CFI (cfiCond102) R27 Frame(CFA_Y, -5)
          CFI (cfiCond102) CFA_Y Y+5
          CFI (cfiCond103) R27 Frame(CFA_Y, -4)
          CFI (cfiCond103) CFA_Y Y+4
          CFI (cfiPicker104) R27 Frame(CFA_Y, -5)
        ST      -Y, R26
          CFI (cfiCond102) R26 Frame(CFA_Y, -6)
          CFI (cfiCond102) CFA_Y Y+6
          CFI (cfiCond103) R26 Frame(CFA_Y, -5)
          CFI (cfiCond103) CFA_Y Y+5
          CFI (cfiPicker104) R26 Frame(CFA_Y, -6)
        ST      -Y, R24
          CFI (cfiCond102) R24 Frame(CFA_Y, -7)
          CFI (cfiCond102) CFA_Y Y+7
          CFI (cfiCond103) R24 Frame(CFA_Y, -6)
          CFI (cfiCond103) CFA_Y Y+6
          CFI (cfiPicker104) R24 Frame(CFA_Y, -7)
        RET
          CFI EndBlock cfiCond102
          CFI EndBlock cfiCond103
          CFI EndBlock cfiPicker104

        RSEG CODE:CODE:NOROOT(1)
?Subroutine13:
          CFI Block cfiCond105 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_134
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond106 Using cfiCommon0
          CFI (cfiCond106) Function ??displayWidgetBackground
          CFI (cfiCond106) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond106) R24 Frame(CFA_Y, -4)
          CFI (cfiCond106) R25 Frame(CFA_Y, -3)
          CFI (cfiCond106) R26 Frame(CFA_Y, -2)
          CFI (cfiCond106) R27 Frame(CFA_Y, -1)
          CFI (cfiCond106) CFA_SP SP+4
          CFI (cfiCond106) CFA_Y Y+4
          CFI Block cfiPicker107 Using cfiCommon2
          CFI (cfiPicker107) NoFunction
          CFI (cfiPicker107) Picker
        LDI     R26, LOW(??RTCDateTime)
        LDI     R27, (??RTCDateTime) >> 8
        LDI     R19, 32
        LDI     R18, 2
        LDS     R20, (??RTCDateTime + 3)
          CFI EndBlock cfiCond105
          CFI EndBlock cfiCond106
          CFI EndBlock cfiPicker107
        REQUIRE ??Subroutine58_0
        ;               // Fall through to label ??Subroutine58_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine58_0:
          CFI Block cfiCond108 Using cfiCommon0
          CFI Function ??processCounterStatistic
          CFI Conditional ??CrossCallReturnLabel_129
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+2
          CFI Block cfiCond109 Using cfiCommon0
          CFI (cfiCond109) Function ??updateCounter
          CFI (cfiCond109) Conditional ??CrossCallReturnLabel_130
          CFI (cfiCond109) R24 Frame(CFA_Y, -5)
          CFI (cfiCond109) R25 Frame(CFA_Y, -4)
          CFI (cfiCond109) R26 Frame(CFA_Y, -3)
          CFI (cfiCond109) R27 Frame(CFA_Y, -2)
          CFI (cfiCond109) R4 Frame(CFA_Y, -1)
          CFI (cfiCond109) CFA_SP SP+4
          CFI (cfiCond109) CFA_Y Y+5
          CFI Block cfiCond110 Using cfiCommon0
          CFI (cfiCond110) Function ??displayWidgetBackground
          CFI (cfiCond110) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond110) R24 Frame(CFA_Y, -4)
          CFI (cfiCond110) R25 Frame(CFA_Y, -3)
          CFI (cfiCond110) R26 Frame(CFA_Y, -2)
          CFI (cfiCond110) R27 Frame(CFA_Y, -1)
          CFI (cfiCond110) CFA_SP SP+4
          CFI (cfiCond110) CFA_Y Y+4
          CFI Block cfiCond111 Using cfiCommon0
          CFI (cfiCond111) Function ??displayWidgetBackground
          CFI (cfiCond111) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond111) R24 Frame(CFA_Y, -4)
          CFI (cfiCond111) R25 Frame(CFA_Y, -3)
          CFI (cfiCond111) R26 Frame(CFA_Y, -2)
          CFI (cfiCond111) R27 Frame(CFA_Y, -1)
          CFI (cfiCond111) CFA_SP SP+4
          CFI (cfiCond111) CFA_Y Y+4
          CFI Block cfiCond112 Using cfiCommon0
          CFI (cfiCond112) Function ??functionSetupWidgets
          CFI (cfiCond112) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond112) R24 Frame(CFA_Y, -7)
          CFI (cfiCond112) R25 Frame(CFA_Y, -6)
          CFI (cfiCond112) R26 Frame(CFA_Y, -5)
          CFI (cfiCond112) R27 Frame(CFA_Y, -4)
          CFI (cfiCond112) R4 Frame(CFA_Y, -3)
          CFI (cfiCond112) R5 Frame(CFA_Y, -2)
          CFI (cfiCond112) R6 Frame(CFA_Y, -1)
          CFI (cfiCond112) CFA_SP SP+4
          CFI (cfiCond112) CFA_Y Y+7
          CFI Block cfiCond113 Using cfiCommon0
          CFI (cfiCond113) Function ??displayWidgetBackground
          CFI (cfiCond113) Conditional ??CrossCallReturnLabel_134
          CFI (cfiCond113) R24 Frame(CFA_Y, -4)
          CFI (cfiCond113) R25 Frame(CFA_Y, -3)
          CFI (cfiCond113) R26 Frame(CFA_Y, -2)
          CFI (cfiCond113) R27 Frame(CFA_Y, -1)
          CFI (cfiCond113) CFA_SP SP+4
          CFI (cfiCond113) CFA_Y Y+4
          CFI Block cfiCond114 Using cfiCommon0
          CFI (cfiCond114) Function ??displayWidgetBackground
          CFI (cfiCond114) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond114) R24 Frame(CFA_Y, -4)
          CFI (cfiCond114) R25 Frame(CFA_Y, -3)
          CFI (cfiCond114) R26 Frame(CFA_Y, -2)
          CFI (cfiCond114) R27 Frame(CFA_Y, -1)
          CFI (cfiCond114) CFA_SP SP+4
          CFI (cfiCond114) CFA_Y Y+4
          CFI Block cfiPicker115 Using cfiCommon2
          CFI (cfiPicker115) NoFunction
          CFI (cfiPicker115) Picker
        LDI     R21, 0
          CFI EndBlock cfiCond108
          CFI EndBlock cfiCond109
          CFI EndBlock cfiCond110
          CFI EndBlock cfiCond111
          CFI EndBlock cfiCond112
          CFI EndBlock cfiCond113
          CFI EndBlock cfiCond114
          CFI EndBlock cfiPicker115
        REQUIRE ??Subroutine59_0
        ;               // Fall through to label ??Subroutine59_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine59_0:
          CFI Block cfiCond116 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_123
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+9
          CFI Block cfiCond117 Using cfiCommon0
          CFI (cfiCond117) Function ??updateCounter
          CFI (cfiCond117) Conditional ??CrossCallReturnLabel_124
          CFI (cfiCond117) R24 Frame(CFA_Y, -5)
          CFI (cfiCond117) R25 Frame(CFA_Y, -4)
          CFI (cfiCond117) R26 Frame(CFA_Y, -3)
          CFI (cfiCond117) R27 Frame(CFA_Y, -2)
          CFI (cfiCond117) R4 Frame(CFA_Y, -1)
          CFI (cfiCond117) CFA_SP SP+4
          CFI (cfiCond117) CFA_Y Y+9
          CFI Block cfiCond118 Using cfiCommon0
          CFI (cfiCond118) Function ??updateCounter
          CFI (cfiCond118) Conditional ??CrossCallReturnLabel_125
          CFI (cfiCond118) R24 Frame(CFA_Y, -5)
          CFI (cfiCond118) R25 Frame(CFA_Y, -4)
          CFI (cfiCond118) R26 Frame(CFA_Y, -3)
          CFI (cfiCond118) R27 Frame(CFA_Y, -2)
          CFI (cfiCond118) R4 Frame(CFA_Y, -1)
          CFI (cfiCond118) CFA_SP SP+4
          CFI (cfiCond118) CFA_Y Y+5
          CFI Block cfiCond119 Using cfiCommon0
          CFI (cfiCond119) Function ??displayWidgetBackground
          CFI (cfiCond119) Conditional ??CrossCallReturnLabel_126
          CFI (cfiCond119) R24 Frame(CFA_Y, -4)
          CFI (cfiCond119) R25 Frame(CFA_Y, -3)
          CFI (cfiCond119) R26 Frame(CFA_Y, -2)
          CFI (cfiCond119) R27 Frame(CFA_Y, -1)
          CFI (cfiCond119) CFA_SP SP+4
          CFI (cfiCond119) CFA_Y Y+4
          CFI Block cfiCond120 Using cfiCommon0
          CFI (cfiCond120) Function ??displayWidgetBackground
          CFI (cfiCond120) Conditional ??CrossCallReturnLabel_127
          CFI (cfiCond120) R24 Frame(CFA_Y, -4)
          CFI (cfiCond120) R25 Frame(CFA_Y, -3)
          CFI (cfiCond120) R26 Frame(CFA_Y, -2)
          CFI (cfiCond120) R27 Frame(CFA_Y, -1)
          CFI (cfiCond120) CFA_SP SP+4
          CFI (cfiCond120) CFA_Y Y+4
          CFI Block cfiCond121 Using cfiCommon0
          CFI (cfiCond121) Function ??displayWidgetCounterName
          CFI (cfiCond121) Conditional ??CrossCallReturnLabel_128
          CFI (cfiCond121) R24 Frame(CFA_Y, -6)
          CFI (cfiCond121) R26 Frame(CFA_Y, -5)
          CFI (cfiCond121) R27 Frame(CFA_Y, -4)
          CFI (cfiCond121) R4 Frame(CFA_Y, -3)
          CFI (cfiCond121) R5 Frame(CFA_Y, -2)
          CFI (cfiCond121) R6 Frame(CFA_Y, -1)
          CFI (cfiCond121) CFA_SP SP+4
          CFI (cfiCond121) CFA_Y Y+6
          CFI Block cfiCond122 Using cfiCommon0
          CFI (cfiCond122) Function ??processCounterStatistic
          CFI (cfiCond122) Conditional ??CrossCallReturnLabel_129
          CFI (cfiCond122) R26 Frame(CFA_Y, -2)
          CFI (cfiCond122) R27 Frame(CFA_Y, -1)
          CFI (cfiCond122) CFA_SP SP+4
          CFI (cfiCond122) CFA_Y Y+2
          CFI Block cfiCond123 Using cfiCommon0
          CFI (cfiCond123) Function ??updateCounter
          CFI (cfiCond123) Conditional ??CrossCallReturnLabel_130
          CFI (cfiCond123) R24 Frame(CFA_Y, -5)
          CFI (cfiCond123) R25 Frame(CFA_Y, -4)
          CFI (cfiCond123) R26 Frame(CFA_Y, -3)
          CFI (cfiCond123) R27 Frame(CFA_Y, -2)
          CFI (cfiCond123) R4 Frame(CFA_Y, -1)
          CFI (cfiCond123) CFA_SP SP+4
          CFI (cfiCond123) CFA_Y Y+5
          CFI Block cfiCond124 Using cfiCommon0
          CFI (cfiCond124) Function ??displayWidgetBackground
          CFI (cfiCond124) Conditional ??CrossCallReturnLabel_131
          CFI (cfiCond124) R24 Frame(CFA_Y, -4)
          CFI (cfiCond124) R25 Frame(CFA_Y, -3)
          CFI (cfiCond124) R26 Frame(CFA_Y, -2)
          CFI (cfiCond124) R27 Frame(CFA_Y, -1)
          CFI (cfiCond124) CFA_SP SP+4
          CFI (cfiCond124) CFA_Y Y+4
          CFI Block cfiCond125 Using cfiCommon0
          CFI (cfiCond125) Function ??displayWidgetBackground
          CFI (cfiCond125) Conditional ??CrossCallReturnLabel_132
          CFI (cfiCond125) R24 Frame(CFA_Y, -4)
          CFI (cfiCond125) R25 Frame(CFA_Y, -3)
          CFI (cfiCond125) R26 Frame(CFA_Y, -2)
          CFI (cfiCond125) R27 Frame(CFA_Y, -1)
          CFI (cfiCond125) CFA_SP SP+4
          CFI (cfiCond125) CFA_Y Y+4
          CFI Block cfiCond126 Using cfiCommon0
          CFI (cfiCond126) Function ??functionSetupWidgets
          CFI (cfiCond126) Conditional ??CrossCallReturnLabel_133
          CFI (cfiCond126) R24 Frame(CFA_Y, -7)
          CFI (cfiCond126) R25 Frame(CFA_Y, -6)
          CFI (cfiCond126) R26 Frame(CFA_Y, -5)
          CFI (cfiCond126) R27 Frame(CFA_Y, -4)
          CFI (cfiCond126) R4 Frame(CFA_Y, -3)
          CFI (cfiCond126) R5 Frame(CFA_Y, -2)
          CFI (cfiCond126) R6 Frame(CFA_Y, -1)
          CFI (cfiCond126) CFA_SP SP+4
          CFI (cfiCond126) CFA_Y Y+7
          CFI Block cfiCond127 Using cfiCommon0
          CFI (cfiCond127) Function ??displayWidgetBackground
          CFI (cfiCond127) Conditional ??CrossCallReturnLabel_134
          CFI (cfiCond127) R24 Frame(CFA_Y, -4)
          CFI (cfiCond127) R25 Frame(CFA_Y, -3)
          CFI (cfiCond127) R26 Frame(CFA_Y, -2)
          CFI (cfiCond127) R27 Frame(CFA_Y, -1)
          CFI (cfiCond127) CFA_SP SP+4
          CFI (cfiCond127) CFA_Y Y+4
          CFI Block cfiCond128 Using cfiCommon0
          CFI (cfiCond128) Function ??displayWidgetBackground
          CFI (cfiCond128) Conditional ??CrossCallReturnLabel_135
          CFI (cfiCond128) R24 Frame(CFA_Y, -4)
          CFI (cfiCond128) R25 Frame(CFA_Y, -3)
          CFI (cfiCond128) R26 Frame(CFA_Y, -2)
          CFI (cfiCond128) R27 Frame(CFA_Y, -1)
          CFI (cfiCond128) CFA_SP SP+4
          CFI (cfiCond128) CFA_Y Y+4
          CFI Block cfiPicker129 Using cfiCommon2
          CFI (cfiPicker129) NoFunction
          CFI (cfiPicker129) Picker
        LDI     R22, 0
        LDI     R23, 0
        RET
          CFI EndBlock cfiCond116
          CFI EndBlock cfiCond117
          CFI EndBlock cfiCond118
          CFI EndBlock cfiCond119
          CFI EndBlock cfiCond120
          CFI EndBlock cfiCond121
          CFI EndBlock cfiCond122
          CFI EndBlock cfiCond123
          CFI EndBlock cfiCond124
          CFI EndBlock cfiCond125
          CFI EndBlock cfiCond126
          CFI EndBlock cfiCond127
          CFI EndBlock cfiCond128
          CFI EndBlock cfiPicker129
//  351 

        RSEG CODE:CODE:NOROOT(1)
//  352   void displayWidgetCounterValue(
??displayWidgetCounterValue:
          CFI Block cfiBlock130 Using cfiCommon0
          CFI Function ??displayWidgetCounterValue
//  353     TUserMenuInfoblockSetup* _widgetConfig,
//  354     TWidgetCounterConfig* _counterSetup1,
//  355     TWidgetCounterConfig* _counterSetup2,
//  356     bool _waiting = false)
//  357   {
        FUNCALL ??displayWidgetCounterValue, ??displayWidgetCounterName
        LOCFRAME CSTACK, 17, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetCounterValue, ??num2Buf
        LOCFRAME CSTACK, 17, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetCounterValue, ??displayWidgetCounterName
        LOCFRAME CSTACK, 17, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetCounterValue, ??num2Buf
        LOCFRAME CSTACK, 17, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??displayWidgetCounterValue, ??refreshDisplay
        LOCFRAME CSTACK, 17, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        ST      -Y, R15
          CFI R15 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R14
          CFI R14 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        ST      -Y, R13
          CFI R13 Frame(CFA_Y, -3)
          CFI CFA_Y Y+3
        ST      -Y, R12
          CFI R12 Frame(CFA_Y, -4)
          CFI CFA_Y Y+4
        ST      -Y, R11
          CFI R11 Frame(CFA_Y, -5)
          CFI CFA_Y Y+5
        ST      -Y, R10
          CFI R10 Frame(CFA_Y, -6)
          CFI CFA_Y Y+6
        ST      -Y, R9
          CFI R9 Frame(CFA_Y, -7)
          CFI CFA_Y Y+7
        ST      -Y, R8
          CFI R8 Frame(CFA_Y, -8)
          CFI CFA_Y Y+8
        ST      -Y, R7
          CFI R7 Frame(CFA_Y, -9)
          CFI CFA_Y Y+9
        RCALL   ?Subroutine0
          CFI R24 Frame(CFA_Y, -16)
          CFI R25 Frame(CFA_Y, -15)
          CFI R26 Frame(CFA_Y, -14)
          CFI R27 Frame(CFA_Y, -13)
          CFI R4 Frame(CFA_Y, -12)
          CFI R5 Frame(CFA_Y, -11)
          CFI R6 Frame(CFA_Y, -10)
          CFI CFA_Y Y+16
??CrossCallReturnLabel_118:
        REQUIRE ?Register_R4_is_cg_reg
        REQUIRE ?Register_R5_is_cg_reg
        REQUIRE ?Register_R6_is_cg_reg
        REQUIRE ?Register_R7_is_cg_reg
        REQUIRE ?Register_R8_is_cg_reg
        REQUIRE ?Register_R9_is_cg_reg
        REQUIRE ?Register_R10_is_cg_reg
        REQUIRE ?Register_R11_is_cg_reg
        REQUIRE ?Register_R12_is_cg_reg
        REQUIRE ?Register_R13_is_cg_reg
        REQUIRE ?Register_R14_is_cg_reg
        REQUIRE ?Register_R15_is_cg_reg
        SBIW    R29:R28, 1
          CFI CFA_Y Y+17
        ST      Y, R22
        MOVW    R7:R6, R17:R16
        MOVW    R27:R26, R19:R18
        MOVW    R9:R8, R21:R20
//  358     typedef enum
//  359     {
//  360       WidgetCounterNameDisplayType_None = 0,
//  361       WidgetCounterNameDisplayType_Short = 1,
//  362       WidgetCounterNameDisplayType_Full = 2,
//  363     } TWidgetCounterNameDisplayType;
//  364 
//  365     unsigned char counter1PosY = 0;
        LDI     R25, 0
//  366     unsigned char counter1PosX = 0;
        CLR     R4
//  367     unsigned char counter1Lng = 0;
        CLR     R5
//  368     unsigned char name1PosX = 0;
//  369     TWidgetCounterNameDisplayType name1Type = WidgetCounterNameDisplayType_None;
        LDI     R17, 0
//  370 
//  371     unsigned char counter2PosY = 0;
        LDI     R24, 0
//  372     unsigned char counter2PosX = 0;
        CLR     R10
//  373     unsigned char counter2Lng = 0;
        CLR     R11
//  374     unsigned char name2PosX = 0;
        CLR     R14
//  375     TWidgetCounterNameDisplayType name2Type = WidgetCounterNameDisplayType_None;
        CLR     R12
//  376 
//  377     unsigned char lowBatterySymbolPosY = 0;
        CLR     R15
//  378     unsigned char lowBatterySymbolPosX = 0;
        CLR     R13
//  379 
//  380     switch (_widgetConfig->infoblockType)
        MOV     R30, R16
        MOV     R31, R7
        LD      R16, Z
        DEC     R16
        BREQ    ??displayWidgetCounterValue_1
        DEC     R16
        BREQ    ??displayWidgetCounterValue_2
        DEC     R16
        BREQ    ??displayWidgetCounterValue_3
        DEC     R16
        BREQ    ??displayWidgetCounterValue_4
        RJMP    ??displayWidgetCounterValue_5
//  381     {
//  382       case UserMenuInfoblockType_DateTimeFull2Cnt:
//  383         counter1PosY = 0;
//  384         counter1PosX = 15;
??displayWidgetCounterValue_1:
        LDI     R16, 15
        MOV     R4, R16
//  385         counter1Lng = 6;
        LDI     R16, 6
        MOV     R5, R16
//  386 
//  387         counter2PosY = 1;
        LDI     R24, 1
//  388         counter2PosX = 15;
        MOV     R10, R4
//  389         counter2Lng = 6;
        MOV     R11, R16
//  390 
//  391         lowBatterySymbolPosY = 1;
        INC     R15
//  392         lowBatterySymbolPosX = 9;
        LDI     R16, 9
        MOV     R13, R16
//  393         break;
        RJMP    ??displayWidgetCounterValue_5
//  394 
//  395       case UserMenuInfoblockType_DateTimeShort2Cnt:
//  396         counter1PosY = 1;
??displayWidgetCounterValue_2:
        LDI     R25, 1
//  397         counter1PosX = 6;
        LDI     R16, 6
        MOV     R4, R16
//  398         counter1Lng = 7;
        LDI     R16, 7
        MOV     R5, R16
//  399         name1PosX = 0;
//  400         name1Type = WidgetCounterNameDisplayType_Short;
        LDI     R17, 1
//  401 
//  402         counter2PosY = 1;
        LDI     R24, 1
//  403         counter2PosX = 15;
        LDI     R16, 15
        MOV     R10, R16
//  404         counter2Lng = 7;
        MOV     R11, R5
//  405         name2PosX = 8;
        LDI     R16, 8
        MOV     R14, R16
//  406         name2Type = WidgetCounterNameDisplayType_Short;
        INC     R12
//  407 
//  408         lowBatterySymbolPosY = 0;
//  409         lowBatterySymbolPosX = 15;
        MOV     R13, R10
//  410         break;
        RJMP    ??displayWidgetCounterValue_5
//  411 
//  412       case UserMenuInfoblockType_DateTimeShort1Cnt:
//  413         counter1PosY = 1;
??displayWidgetCounterValue_3:
        LDI     R25, 1
//  414         counter1PosX = 15;
        RCALL   ?Subroutine37
//  415         counter1Lng = 8;
//  416         name1PosX = 0;
//  417         name1Type = WidgetCounterNameDisplayType_Full;
//  418 
//  419         lowBatterySymbolPosY = 0;
//  420         lowBatterySymbolPosX = 15;
??CrossCallReturnLabel_59:
        MOV     R13, R4
//  421         break;
        RJMP    ??displayWidgetCounterValue_5
//  422 
//  423       case UserMenuInfoblockType_Counter2:
//  424         counter1PosY = 0;
//  425         counter1PosX = 15;
??displayWidgetCounterValue_4:
        RCALL   ?Subroutine37
//  426         counter1Lng = 8;
//  427         name1PosX = 0;
//  428         name1Type = WidgetCounterNameDisplayType_Full;
//  429 
//  430         counter2PosY = 1;
??CrossCallReturnLabel_60:
        LDI     R24, 1
//  431         counter2PosX = 15;
        MOV     R10, R4
//  432         counter2Lng = 8;
        MOV     R11, R16
//  433         name2PosX = 0;
//  434         name2Type = WidgetCounterNameDisplayType_Full;
        MOV     R12, R17
//  435         break;
//  436     }
//  437 
//  438     if (_counterSetup1->isEnabled && counter1Lng)
??displayWidgetCounterValue_5:
        MOVW    R31:R30, R19:R18
        LD      R16, Z
        TST     R16
        BREQ    ??CrossCallReturnLabel_110
        TST     R5
        BREQ    ??CrossCallReturnLabel_110
//  439     {
//  440       if (name1Type != WidgetCounterNameDisplayType_None)
        TST     R17
        BREQ    ??displayWidgetCounterValue_6
//  441       {
//  442         displayWidgetCounterName(&(_widgetConfig->counter1), counter1PosY, name1PosX, name1Type == WidgetCounterNameDisplayType_Full);
        CPI     R17, 2
        BRNE    ??displayWidgetCounterValue_7
        LDI     R20, 1
        RJMP    ??displayWidgetCounterValue_8
??displayWidgetCounterValue_7:
        LDI     R20, 0
??displayWidgetCounterValue_8:
        LDI     R19, 0
        MOV     R18, R25
        MOVW    R17:R16, R7:R6
        SUBI    R16, 255
        SBCI    R17, 255
        RCALL   ??displayWidgetCounterName
//  443       }
//  444 
//  445       if (_waiting)
??displayWidgetCounterValue_6:
        LD      R16, Y
        TST     R16
        BREQ    ??displayWidgetCounterValue_9
//  446       {
//  447         LCDDriver::displayState.line[counter1PosY][counter1PosX] = LCD_DISPLAY_SYMBOL_SUN;
        LDI     R17, 238
        LDI     R30, LOW((??displayState + 4))
        LDI     R31, HIGH((??displayState + 4))
        CLR     R5
        ADD     R30, R4
        ADC     R31, R5
        LDI     R16, 16
        MUL     R25, R16
        RCALL   ?Subroutine50
//  448       }
??CrossCallReturnLabel_103:
        ST      Z, R17
        RJMP    ??CrossCallReturnLabel_110
//  449       else
//  450       {
//  451         LCDDriver::num2Buf(counter1PosY, counter1PosX, _counterSetup1->valueTotal, counter1Lng);
??displayWidgetCounterValue_9:
        LDI     R19, 0
        MOV     R18, R5
        MOVW    R31:R30, R27:R26
        RCALL   ?Subroutine30
//  452       }
//  453     }
??CrossCallReturnLabel_47:
        MOV     R17, R4
        MOV     R16, R25
        RCALL   ?Subroutine53
//  454 
//  455     if (_counterSetup2->isEnabled && counter2Lng)
??CrossCallReturnLabel_110:
        MOVW    R31:R30, R9:R8
        LD      R16, Z
        TST     R16
        BREQ    ??CrossCallReturnLabel_111
        TST     R11
        BREQ    ??CrossCallReturnLabel_111
//  456     {
//  457       if (name2Type != WidgetCounterNameDisplayType_None)
        TST     R12
        BREQ    ??displayWidgetCounterValue_10
//  458       {
//  459         displayWidgetCounterName(&(_widgetConfig->counter2), counter2PosY, name2PosX, name2Type == WidgetCounterNameDisplayType_Full);
        LDI     R16, 2
        CP      R12, R16
        BRNE    ??displayWidgetCounterValue_11
        LDI     R20, 1
        RJMP    ??displayWidgetCounterValue_12
??displayWidgetCounterValue_11:
        LDI     R20, 0
??displayWidgetCounterValue_12:
        MOV     R19, R14
        MOV     R18, R24
        LDI     R16, 4
        ADD     R6, R16
        LDI     R16, 0
        ADC     R7, R16
        MOVW    R17:R16, R7:R6
        RCALL   ??displayWidgetCounterName
//  460       }
//  461 
//  462       if (_waiting)
??displayWidgetCounterValue_10:
        LD      R16, Y
        TST     R16
        BREQ    ??displayWidgetCounterValue_13
//  463       {
//  464         LCDDriver::displayState.line[counter2PosY][counter2PosX] = LCD_DISPLAY_SYMBOL_SUN;
        LDI     R16, 238
        LDI     R30, LOW((??displayState + 4))
        LDI     R31, HIGH((??displayState + 4))
        CLR     R11
        ADD     R30, R10
        ADC     R31, R11
        LDI     R17, 16
        MUL     R24, R17
        RCALL   ?Subroutine50
//  465       }
??CrossCallReturnLabel_104:
        ST      Z, R16
        RJMP    ??CrossCallReturnLabel_111
//  466       else
//  467       {
//  468         LCDDriver::num2Buf(counter2PosY, counter2PosX, _counterSetup2->valueTotal, counter2Lng);
??displayWidgetCounterValue_13:
        LDI     R19, 0
        MOV     R18, R11
        MOVW    R31:R30, R9:R8
        RCALL   ?Subroutine30
//  469       }
//  470     }
??CrossCallReturnLabel_48:
        MOV     R17, R10
        MOV     R16, R24
        RCALL   ?Subroutine53
//  471 
//  472     LCDDriver::refreshDisplay(LCDDriver::LCDDisplayMode_NoCursor, 0, 0, true, lowBatterySymbolPosY, lowBatterySymbolPosX);
??CrossCallReturnLabel_111:
        MOV     R21, R13
        MOV     R20, R15
        RCALL   ?Subroutine25
//  473   }
??CrossCallReturnLabel_39:
        ADIW    R29:R28, 1
          CFI CFA_Y Y+16
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+15
        LD      R25, Y+
          CFI R25 SameValue
          CFI CFA_Y Y+14
        RCALL   ?Subroutine15
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI CFA_Y Y+8
??CrossCallReturnLabel_21:
        LD      R8, Y+
          CFI R8 SameValue
          CFI CFA_Y Y+7
        LD      R9, Y+
          CFI R9 SameValue
          CFI CFA_Y Y+6
        LD      R10, Y+
          CFI R10 SameValue
          CFI CFA_Y Y+5
        LD      R11, Y+
          CFI R11 SameValue
          CFI CFA_Y Y+4
        LD      R12, Y+
          CFI R12 SameValue
          CFI CFA_Y Y+3
        LD      R13, Y+
          CFI R13 SameValue
          CFI CFA_Y Y+2
        LD      R14, Y+
          CFI R14 SameValue
          CFI CFA_Y Y+1
        LD      R15, Y+
          CFI R15 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock130

        RSEG CODE:CODE:NOROOT(1)
?Subroutine50:
          CFI Block cfiCond131 Using cfiCommon0
          CFI Function ??displayWidgetCounterName
          CFI Conditional ??CrossCallReturnLabel_102
          CFI R24 Frame(CFA_Y, -6)
          CFI R26 Frame(CFA_Y, -5)
          CFI R27 Frame(CFA_Y, -4)
          CFI R4 Frame(CFA_Y, -3)
          CFI R5 Frame(CFA_Y, -2)
          CFI R6 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+6
          CFI Block cfiCond132 Using cfiCommon0
          CFI (cfiCond132) Function ??displayWidgetCounterValue
          CFI (cfiCond132) Conditional ??CrossCallReturnLabel_103
          CFI (cfiCond132) R24 Frame(CFA_Y, -16)
          CFI (cfiCond132) R25 Frame(CFA_Y, -15)
          CFI (cfiCond132) R26 Frame(CFA_Y, -14)
          CFI (cfiCond132) R27 Frame(CFA_Y, -13)
          CFI (cfiCond132) R4 Frame(CFA_Y, -12)
          CFI (cfiCond132) R5 Frame(CFA_Y, -11)
          CFI (cfiCond132) R6 Frame(CFA_Y, -10)
          CFI (cfiCond132) R7 Frame(CFA_Y, -9)
          CFI (cfiCond132) R8 Frame(CFA_Y, -8)
          CFI (cfiCond132) R9 Frame(CFA_Y, -7)
          CFI (cfiCond132) R10 Frame(CFA_Y, -6)
          CFI (cfiCond132) R11 Frame(CFA_Y, -5)
          CFI (cfiCond132) R12 Frame(CFA_Y, -4)
          CFI (cfiCond132) R13 Frame(CFA_Y, -3)
          CFI (cfiCond132) R14 Frame(CFA_Y, -2)
          CFI (cfiCond132) R15 Frame(CFA_Y, -1)
          CFI (cfiCond132) CFA_SP SP+4
          CFI (cfiCond132) CFA_Y Y+17
          CFI Block cfiCond133 Using cfiCommon0
          CFI (cfiCond133) Function ??displayWidgetCounterValue
          CFI (cfiCond133) Conditional ??CrossCallReturnLabel_104
          CFI (cfiCond133) R24 Frame(CFA_Y, -16)
          CFI (cfiCond133) R25 Frame(CFA_Y, -15)
          CFI (cfiCond133) R26 Frame(CFA_Y, -14)
          CFI (cfiCond133) R27 Frame(CFA_Y, -13)
          CFI (cfiCond133) R4 Frame(CFA_Y, -12)
          CFI (cfiCond133) R5 Frame(CFA_Y, -11)
          CFI (cfiCond133) R6 Frame(CFA_Y, -10)
          CFI (cfiCond133) R7 Frame(CFA_Y, -9)
          CFI (cfiCond133) R8 Frame(CFA_Y, -8)
          CFI (cfiCond133) R9 Frame(CFA_Y, -7)
          CFI (cfiCond133) R10 Frame(CFA_Y, -6)
          CFI (cfiCond133) R11 Frame(CFA_Y, -5)
          CFI (cfiCond133) R12 Frame(CFA_Y, -4)
          CFI (cfiCond133) R13 Frame(CFA_Y, -3)
          CFI (cfiCond133) R14 Frame(CFA_Y, -2)
          CFI (cfiCond133) R15 Frame(CFA_Y, -1)
          CFI (cfiCond133) CFA_SP SP+4
          CFI (cfiCond133) CFA_Y Y+17
          CFI Block cfiCond134 Using cfiCommon0
          CFI (cfiCond134) Function ??functionWidget
          CFI (cfiCond134) Conditional ??CrossCallReturnLabel_105, ??CrossCallReturnLabel_55
          CFI (cfiCond134) R24 Frame(CFA_Y, -4)
          CFI (cfiCond134) R25 Frame(CFA_Y, -3)
          CFI (cfiCond134) R26 Frame(CFA_Y, -2)
          CFI (cfiCond134) R27 Frame(CFA_Y, -1)
          CFI (cfiCond134) CFA_SP SP+6
          CFI (cfiCond134) CFA_Y Y+4
          CFI Block cfiCond135 Using cfiCommon0
          CFI (cfiCond135) Function ??functionWidget
          CFI (cfiCond135) Conditional ??CrossCallReturnLabel_105, ??CrossCallReturnLabel_56
          CFI (cfiCond135) R24 Frame(CFA_Y, -4)
          CFI (cfiCond135) R25 Frame(CFA_Y, -3)
          CFI (cfiCond135) R26 Frame(CFA_Y, -2)
          CFI (cfiCond135) R27 Frame(CFA_Y, -1)
          CFI (cfiCond135) CFA_SP SP+6
          CFI (cfiCond135) CFA_Y Y+4
          CFI Block cfiPicker136 Using cfiCommon2
          CFI (cfiPicker136) NoFunction
          CFI (cfiPicker136) Picker
        ADD     R30, R0
        ADC     R31, R1
        RET
          CFI EndBlock cfiCond131
          CFI EndBlock cfiCond132
          CFI EndBlock cfiCond133
          CFI EndBlock cfiCond134
          CFI EndBlock cfiCond135
          CFI EndBlock cfiPicker136

        RSEG CODE:CODE:NOROOT(1)
?Subroutine37:
          CFI Block cfiCond137 Using cfiCommon0
          CFI Function ??displayWidgetCounterValue
          CFI Conditional ??CrossCallReturnLabel_59
          CFI R24 Frame(CFA_Y, -16)
          CFI R25 Frame(CFA_Y, -15)
          CFI R26 Frame(CFA_Y, -14)
          CFI R27 Frame(CFA_Y, -13)
          CFI R4 Frame(CFA_Y, -12)
          CFI R5 Frame(CFA_Y, -11)
          CFI R6 Frame(CFA_Y, -10)
          CFI R7 Frame(CFA_Y, -9)
          CFI R8 Frame(CFA_Y, -8)
          CFI R9 Frame(CFA_Y, -7)
          CFI R10 Frame(CFA_Y, -6)
          CFI R11 Frame(CFA_Y, -5)
          CFI R12 Frame(CFA_Y, -4)
          CFI R13 Frame(CFA_Y, -3)
          CFI R14 Frame(CFA_Y, -2)
          CFI R15 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+17
          CFI Block cfiCond138 Using cfiCommon0
          CFI (cfiCond138) Function ??displayWidgetCounterValue
          CFI (cfiCond138) Conditional ??CrossCallReturnLabel_60
          CFI (cfiCond138) R24 Frame(CFA_Y, -16)
          CFI (cfiCond138) R25 Frame(CFA_Y, -15)
          CFI (cfiCond138) R26 Frame(CFA_Y, -14)
          CFI (cfiCond138) R27 Frame(CFA_Y, -13)
          CFI (cfiCond138) R4 Frame(CFA_Y, -12)
          CFI (cfiCond138) R5 Frame(CFA_Y, -11)
          CFI (cfiCond138) R6 Frame(CFA_Y, -10)
          CFI (cfiCond138) R7 Frame(CFA_Y, -9)
          CFI (cfiCond138) R8 Frame(CFA_Y, -8)
          CFI (cfiCond138) R9 Frame(CFA_Y, -7)
          CFI (cfiCond138) R10 Frame(CFA_Y, -6)
          CFI (cfiCond138) R11 Frame(CFA_Y, -5)
          CFI (cfiCond138) R12 Frame(CFA_Y, -4)
          CFI (cfiCond138) R13 Frame(CFA_Y, -3)
          CFI (cfiCond138) R14 Frame(CFA_Y, -2)
          CFI (cfiCond138) R15 Frame(CFA_Y, -1)
          CFI (cfiCond138) CFA_SP SP+4
          CFI (cfiCond138) CFA_Y Y+17
          CFI Block cfiPicker139 Using cfiCommon2
          CFI (cfiPicker139) NoFunction
          CFI (cfiPicker139) Picker
        LDI     R16, 15
        MOV     R4, R16
        LDI     R16, 8
        MOV     R5, R16
        LDI     R17, 2
        RET
          CFI EndBlock cfiCond137
          CFI EndBlock cfiCond138
          CFI EndBlock cfiPicker139

        RSEG CODE:CODE:NOROOT(1)
?Subroutine53:
          CFI Block cfiCond140 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_81
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond141 Using cfiCommon0
          CFI (cfiCond141) Function ??displayWidgetBackground
          CFI (cfiCond141) Conditional ??CrossCallReturnLabel_80
          CFI (cfiCond141) R24 Frame(CFA_Y, -4)
          CFI (cfiCond141) R25 Frame(CFA_Y, -3)
          CFI (cfiCond141) R26 Frame(CFA_Y, -2)
          CFI (cfiCond141) R27 Frame(CFA_Y, -1)
          CFI (cfiCond141) CFA_SP SP+4
          CFI (cfiCond141) CFA_Y Y+4
          CFI Block cfiCond142 Using cfiCommon0
          CFI (cfiCond142) Function ??displayWidgetBackground
          CFI (cfiCond142) Conditional ??CrossCallReturnLabel_82, ??CrossCallReturnLabel_10
          CFI (cfiCond142) R24 Frame(CFA_Y, -4)
          CFI (cfiCond142) R25 Frame(CFA_Y, -3)
          CFI (cfiCond142) R26 Frame(CFA_Y, -2)
          CFI (cfiCond142) R27 Frame(CFA_Y, -1)
          CFI (cfiCond142) CFA_SP SP+6
          CFI (cfiCond142) CFA_Y Y+4
          CFI Block cfiCond143 Using cfiCommon0
          CFI (cfiCond143) Function ??displayWidgetBackground
          CFI (cfiCond143) Conditional ??CrossCallReturnLabel_82, ??CrossCallReturnLabel_11
          CFI (cfiCond143) R24 Frame(CFA_Y, -4)
          CFI (cfiCond143) R25 Frame(CFA_Y, -3)
          CFI (cfiCond143) R26 Frame(CFA_Y, -2)
          CFI (cfiCond143) R27 Frame(CFA_Y, -1)
          CFI (cfiCond143) CFA_SP SP+6
          CFI (cfiCond143) CFA_Y Y+4
          CFI Block cfiCond144 Using cfiCommon0
          CFI (cfiCond144) Function ??displayWidgetBackground
          CFI (cfiCond144) Conditional ??CrossCallReturnLabel_83, ??CrossCallReturnLabel_8
          CFI (cfiCond144) R24 Frame(CFA_Y, -4)
          CFI (cfiCond144) R25 Frame(CFA_Y, -3)
          CFI (cfiCond144) R26 Frame(CFA_Y, -2)
          CFI (cfiCond144) R27 Frame(CFA_Y, -1)
          CFI (cfiCond144) CFA_SP SP+6
          CFI (cfiCond144) CFA_Y Y+4
          CFI Block cfiCond145 Using cfiCommon0
          CFI (cfiCond145) Function ??displayWidgetBackground
          CFI (cfiCond145) Conditional ??CrossCallReturnLabel_83, ??CrossCallReturnLabel_9
          CFI (cfiCond145) R24 Frame(CFA_Y, -4)
          CFI (cfiCond145) R25 Frame(CFA_Y, -3)
          CFI (cfiCond145) R26 Frame(CFA_Y, -2)
          CFI (cfiCond145) R27 Frame(CFA_Y, -1)
          CFI (cfiCond145) CFA_SP SP+6
          CFI (cfiCond145) CFA_Y Y+4
          CFI Block cfiCond146 Using cfiCommon0
          CFI (cfiCond146) Function ??displayWidgetBackground
          CFI (cfiCond146) Conditional ??CrossCallReturnLabel_84, ??CrossCallReturnLabel_0
          CFI (cfiCond146) R24 Frame(CFA_Y, -4)
          CFI (cfiCond146) R25 Frame(CFA_Y, -3)
          CFI (cfiCond146) R26 Frame(CFA_Y, -2)
          CFI (cfiCond146) R27 Frame(CFA_Y, -1)
          CFI (cfiCond146) CFA_SP SP+6
          CFI (cfiCond146) CFA_Y Y+4
          CFI Block cfiCond147 Using cfiCommon0
          CFI (cfiCond147) Function ??displayWidgetBackground
          CFI (cfiCond147) Conditional ??CrossCallReturnLabel_84, ??CrossCallReturnLabel_1
          CFI (cfiCond147) R24 Frame(CFA_Y, -4)
          CFI (cfiCond147) R25 Frame(CFA_Y, -3)
          CFI (cfiCond147) R26 Frame(CFA_Y, -2)
          CFI (cfiCond147) R27 Frame(CFA_Y, -1)
          CFI (cfiCond147) CFA_SP SP+6
          CFI (cfiCond147) CFA_Y Y+4
          CFI Block cfiCond148 Using cfiCommon0
          CFI (cfiCond148) Function ??displayWidgetCounterName
          CFI (cfiCond148) Conditional ??CrossCallReturnLabel_109
          CFI (cfiCond148) R24 Frame(CFA_Y, -6)
          CFI (cfiCond148) R26 Frame(CFA_Y, -5)
          CFI (cfiCond148) R27 Frame(CFA_Y, -4)
          CFI (cfiCond148) R4 Frame(CFA_Y, -3)
          CFI (cfiCond148) R5 Frame(CFA_Y, -2)
          CFI (cfiCond148) R6 Frame(CFA_Y, -1)
          CFI (cfiCond148) CFA_SP SP+4
          CFI (cfiCond148) CFA_Y Y+6
          CFI Block cfiCond149 Using cfiCommon0
          CFI (cfiCond149) Function ??displayWidgetCounterValue
          CFI (cfiCond149) Conditional ??CrossCallReturnLabel_110
          CFI (cfiCond149) R24 Frame(CFA_Y, -16)
          CFI (cfiCond149) R25 Frame(CFA_Y, -15)
          CFI (cfiCond149) R26 Frame(CFA_Y, -14)
          CFI (cfiCond149) R27 Frame(CFA_Y, -13)
          CFI (cfiCond149) R4 Frame(CFA_Y, -12)
          CFI (cfiCond149) R5 Frame(CFA_Y, -11)
          CFI (cfiCond149) R6 Frame(CFA_Y, -10)
          CFI (cfiCond149) R7 Frame(CFA_Y, -9)
          CFI (cfiCond149) R8 Frame(CFA_Y, -8)
          CFI (cfiCond149) R9 Frame(CFA_Y, -7)
          CFI (cfiCond149) R10 Frame(CFA_Y, -6)
          CFI (cfiCond149) R11 Frame(CFA_Y, -5)
          CFI (cfiCond149) R12 Frame(CFA_Y, -4)
          CFI (cfiCond149) R13 Frame(CFA_Y, -3)
          CFI (cfiCond149) R14 Frame(CFA_Y, -2)
          CFI (cfiCond149) R15 Frame(CFA_Y, -1)
          CFI (cfiCond149) CFA_SP SP+4
          CFI (cfiCond149) CFA_Y Y+17
          CFI Block cfiCond150 Using cfiCommon0
          CFI (cfiCond150) Function ??displayWidgetCounterValue
          CFI (cfiCond150) Conditional ??CrossCallReturnLabel_111
          CFI (cfiCond150) R24 Frame(CFA_Y, -16)
          CFI (cfiCond150) R25 Frame(CFA_Y, -15)
          CFI (cfiCond150) R26 Frame(CFA_Y, -14)
          CFI (cfiCond150) R27 Frame(CFA_Y, -13)
          CFI (cfiCond150) R4 Frame(CFA_Y, -12)
          CFI (cfiCond150) R5 Frame(CFA_Y, -11)
          CFI (cfiCond150) R6 Frame(CFA_Y, -10)
          CFI (cfiCond150) R7 Frame(CFA_Y, -9)
          CFI (cfiCond150) R8 Frame(CFA_Y, -8)
          CFI (cfiCond150) R9 Frame(CFA_Y, -7)
          CFI (cfiCond150) R10 Frame(CFA_Y, -6)
          CFI (cfiCond150) R11 Frame(CFA_Y, -5)
          CFI (cfiCond150) R12 Frame(CFA_Y, -4)
          CFI (cfiCond150) R13 Frame(CFA_Y, -3)
          CFI (cfiCond150) R14 Frame(CFA_Y, -2)
          CFI (cfiCond150) R15 Frame(CFA_Y, -1)
          CFI (cfiCond150) CFA_SP SP+4
          CFI (cfiCond150) CFA_Y Y+17
          CFI Block cfiCond151 Using cfiCommon0
          CFI (cfiCond151) Function ??displayWidgetBackground
          CFI (cfiCond151) Conditional ??CrossCallReturnLabel_85, ??CrossCallReturnLabel_4
          CFI (cfiCond151) R24 Frame(CFA_Y, -4)
          CFI (cfiCond151) R25 Frame(CFA_Y, -3)
          CFI (cfiCond151) R26 Frame(CFA_Y, -2)
          CFI (cfiCond151) R27 Frame(CFA_Y, -1)
          CFI (cfiCond151) CFA_SP SP+6
          CFI (cfiCond151) CFA_Y Y+4
          CFI Block cfiCond152 Using cfiCommon0
          CFI (cfiCond152) Function ??displayWidgetBackground
          CFI (cfiCond152) Conditional ??CrossCallReturnLabel_85, ??CrossCallReturnLabel_5
          CFI (cfiCond152) R24 Frame(CFA_Y, -4)
          CFI (cfiCond152) R25 Frame(CFA_Y, -3)
          CFI (cfiCond152) R26 Frame(CFA_Y, -2)
          CFI (cfiCond152) R27 Frame(CFA_Y, -1)
          CFI (cfiCond152) CFA_SP SP+6
          CFI (cfiCond152) CFA_Y Y+4
          CFI Block cfiCond153 Using cfiCommon0
          CFI (cfiCond153) Function ??displayWidgetBackground
          CFI (cfiCond153) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond153) R24 Frame(CFA_Y, -4)
          CFI (cfiCond153) R25 Frame(CFA_Y, -3)
          CFI (cfiCond153) R26 Frame(CFA_Y, -2)
          CFI (cfiCond153) R27 Frame(CFA_Y, -1)
          CFI (cfiCond153) CFA_SP SP+4
          CFI (cfiCond153) CFA_Y Y+4
          CFI Block cfiCond154 Using cfiCommon0
          CFI (cfiCond154) Function ??functionSetupWidgets
          CFI (cfiCond154) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond154) R24 Frame(CFA_Y, -7)
          CFI (cfiCond154) R25 Frame(CFA_Y, -6)
          CFI (cfiCond154) R26 Frame(CFA_Y, -5)
          CFI (cfiCond154) R27 Frame(CFA_Y, -4)
          CFI (cfiCond154) R4 Frame(CFA_Y, -3)
          CFI (cfiCond154) R5 Frame(CFA_Y, -2)
          CFI (cfiCond154) R6 Frame(CFA_Y, -1)
          CFI (cfiCond154) CFA_SP SP+4
          CFI (cfiCond154) CFA_Y Y+7
          CFI Block cfiPicker155 Using cfiCommon2
          CFI (cfiPicker155) NoFunction
          CFI (cfiPicker155) Picker
        JMP     ??num2Buf
          CFI EndBlock cfiCond140
          CFI EndBlock cfiCond141
          CFI EndBlock cfiCond142
          CFI EndBlock cfiCond143
          CFI EndBlock cfiCond144
          CFI EndBlock cfiCond145
          CFI EndBlock cfiCond146
          CFI EndBlock cfiCond147
          CFI EndBlock cfiCond148
          CFI EndBlock cfiCond149
          CFI EndBlock cfiCond150
          CFI EndBlock cfiCond151
          CFI EndBlock cfiCond152
          CFI EndBlock cfiCond153
          CFI EndBlock cfiCond154
          CFI EndBlock cfiPicker155

        RSEG CODE:CODE:NOROOT(1)
?Subroutine30:
          CFI Block cfiCond156 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_46
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+5
          CFI Block cfiCond157 Using cfiCommon0
          CFI (cfiCond157) Function ??displayWidgetCounterValue
          CFI (cfiCond157) Conditional ??CrossCallReturnLabel_47
          CFI (cfiCond157) R24 Frame(CFA_Y, -16)
          CFI (cfiCond157) R25 Frame(CFA_Y, -15)
          CFI (cfiCond157) R26 Frame(CFA_Y, -14)
          CFI (cfiCond157) R27 Frame(CFA_Y, -13)
          CFI (cfiCond157) R4 Frame(CFA_Y, -12)
          CFI (cfiCond157) R5 Frame(CFA_Y, -11)
          CFI (cfiCond157) R6 Frame(CFA_Y, -10)
          CFI (cfiCond157) R7 Frame(CFA_Y, -9)
          CFI (cfiCond157) R8 Frame(CFA_Y, -8)
          CFI (cfiCond157) R9 Frame(CFA_Y, -7)
          CFI (cfiCond157) R10 Frame(CFA_Y, -6)
          CFI (cfiCond157) R11 Frame(CFA_Y, -5)
          CFI (cfiCond157) R12 Frame(CFA_Y, -4)
          CFI (cfiCond157) R13 Frame(CFA_Y, -3)
          CFI (cfiCond157) R14 Frame(CFA_Y, -2)
          CFI (cfiCond157) R15 Frame(CFA_Y, -1)
          CFI (cfiCond157) CFA_SP SP+4
          CFI (cfiCond157) CFA_Y Y+17
          CFI Block cfiCond158 Using cfiCommon0
          CFI (cfiCond158) Function ??displayWidgetCounterValue
          CFI (cfiCond158) Conditional ??CrossCallReturnLabel_48
          CFI (cfiCond158) R24 Frame(CFA_Y, -16)
          CFI (cfiCond158) R25 Frame(CFA_Y, -15)
          CFI (cfiCond158) R26 Frame(CFA_Y, -14)
          CFI (cfiCond158) R27 Frame(CFA_Y, -13)
          CFI (cfiCond158) R4 Frame(CFA_Y, -12)
          CFI (cfiCond158) R5 Frame(CFA_Y, -11)
          CFI (cfiCond158) R6 Frame(CFA_Y, -10)
          CFI (cfiCond158) R7 Frame(CFA_Y, -9)
          CFI (cfiCond158) R8 Frame(CFA_Y, -8)
          CFI (cfiCond158) R9 Frame(CFA_Y, -7)
          CFI (cfiCond158) R10 Frame(CFA_Y, -6)
          CFI (cfiCond158) R11 Frame(CFA_Y, -5)
          CFI (cfiCond158) R12 Frame(CFA_Y, -4)
          CFI (cfiCond158) R13 Frame(CFA_Y, -3)
          CFI (cfiCond158) R14 Frame(CFA_Y, -2)
          CFI (cfiCond158) R15 Frame(CFA_Y, -1)
          CFI (cfiCond158) CFA_SP SP+4
          CFI (cfiCond158) CFA_Y Y+17
          CFI Block cfiPicker159 Using cfiCommon2
          CFI (cfiPicker159) NoFunction
          CFI (cfiPicker159) Picker
        LDD     R20, Z+11
        LDD     R21, Z+12
        LDD     R22, Z+13
        LDD     R23, Z+14
        RET
          CFI EndBlock cfiCond156
          CFI EndBlock cfiCond157
          CFI EndBlock cfiCond158
          CFI EndBlock cfiPicker159

        RSEG CODE:CODE:NOROOT(1)
?Subroutine15:
          CFI Block cfiCond160 Using cfiCommon0
          CFI Function ??displayWidgetCounterValue
          CFI Conditional ??CrossCallReturnLabel_21
          CFI R26 Frame(CFA_Y, -14)
          CFI R27 Frame(CFA_Y, -13)
          CFI R4 Frame(CFA_Y, -12)
          CFI R5 Frame(CFA_Y, -11)
          CFI R6 Frame(CFA_Y, -10)
          CFI R7 Frame(CFA_Y, -9)
          CFI R8 Frame(CFA_Y, -8)
          CFI R9 Frame(CFA_Y, -7)
          CFI R10 Frame(CFA_Y, -6)
          CFI R11 Frame(CFA_Y, -5)
          CFI R12 Frame(CFA_Y, -4)
          CFI R13 Frame(CFA_Y, -3)
          CFI R14 Frame(CFA_Y, -2)
          CFI R15 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+14
          CFI Block cfiBlock161 Using cfiCommon0
          CFI (cfiBlock161) NoFunction
          CFI (cfiBlock161) CFA_Y Y+6
          CFI (cfiBlock161) R4 Frame(CFA_Y, -4)
          CFI (cfiBlock161) R5 Frame(CFA_Y, -3)
          CFI (cfiBlock161) R6 Frame(CFA_Y, -2)
          CFI (cfiBlock161) R7 Frame(CFA_Y, -1)
          CFI (cfiBlock161) R26 Frame(CFA_Y, -6)
          CFI (cfiBlock161) R27 Frame(CFA_Y, -5)
          CFI Block cfiPicker162 Using cfiCommon2
          CFI (cfiPicker162) NoFunction
          CFI (cfiPicker162) Picker
        RCALL   ?Subroutine51
          CFI (cfiCond160) R26 SameValue
          CFI (cfiCond160) R27 SameValue
          CFI (cfiCond160) R4 SameValue
          CFI (cfiCond160) R5 SameValue
          CFI (cfiCond160) R6 SameValue
          CFI (cfiCond160) CFA_Y Y+9
          CFI (cfiBlock161) CFA_Y Y+1
          CFI (cfiBlock161) R4 SameValue
          CFI (cfiBlock161) R5 SameValue
          CFI (cfiBlock161) R6 SameValue
          CFI (cfiBlock161) R26 SameValue
          CFI (cfiBlock161) R27 SameValue
??CrossCallReturnLabel_106:
        LD      R7, Y+
          CFI (cfiCond160) R7 SameValue
          CFI (cfiCond160) CFA_Y Y+8
          CFI (cfiBlock161) CFA_Y Y+0
          CFI (cfiBlock161) R7 SameValue
        RET
          CFI EndBlock cfiCond160
          CFI EndBlock cfiBlock161
          CFI EndBlock cfiPicker162
//  474 

        RSEG CODE:CODE:NOROOT(1)
//  475   void functionWidget()
??functionWidget:
          CFI Block cfiBlock163 Using cfiCommon0
          CFI Function ??functionWidget
//  476   {
        FUNCALL ??functionWidget, ??updateMenuStack
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionWidget, ??updateMenuStack
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionWidget, ??getNextTransitionKey
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionWidget, ??transitionUp
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionWidget, ??transitionUp
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionWidget, ??clearBuffer
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionWidget, ??displayWidgetBackground
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionWidget, ??processCounterStatistic
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionWidget, ??processCounterStatistic
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionWidget, ??updateCounter
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionWidget, ??updateCounter
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionWidget, ??displayWidgetCounterValue
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionWidget, ??displayWidgetCounterValue
        LOCFRAME CSTACK, 4, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ??Subroutine56_0
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_Y Y+4
//  477     if (UserInterfaceSetup.infoblockMain.infoblockType == UserMenuInfoblockType_None)
??CrossCallReturnLabel_116:
        LDS     R16, (??UserInterfaceSetup + 34)
        TST     R16
        BRNE    ??functionWidget_1
//  478     {
//  479       switch (menuAuthLevel)
        LDS     R16, ??menuAuthLevel
        DEC     R16
        BREQ    ??functionWidget_2
        DEC     R16
        BRNE    ??functionWidget_3
//  480       {
//  481         case MenuAuthLevel_Master:
//  482           updateMenuStack(menuStackPos, USER_MENUITEM_MAIN_MENU);
        LDI     R17, 4
        RJMP    ??functionWidget_4
//  483           break;
//  484 
//  485         case MenuAuthLevel_Reports:
//  486           updateMenuStack(menuStackPos, USER_MENUITEM_MAIN_MENU_REPORTS);
??functionWidget_2:
        LDI     R17, 29
??functionWidget_4:
        LDS     R16, ??menuStackPos
        CALL    ??updateMenuStack
//  487           break;
//  488       }
//  489 
//  490       isTransition = true;
??functionWidget_3:
        LDI     R16, 1
        STS     ??isTransition, R16
//  491       return;
        RJMP    ??functionWidget_5
//  492     }
//  493 
//  494     while (transitionKey)
//  495     {
//  496       switch (transitionKey)
//  497       {
//  498         case 1:
//  499           return;
//  500 
//  501         case 2:
//  502           switch (menuStack[menuStackPos].funcState)
??functionWidget_6:
        RCALL   ?Subroutine35
??CrossCallReturnLabel_55:
        BREQ    ??functionWidget_7
        SUBI    R16, 2
??functionWidget_8:
        BREQ    ??functionWidget_9
        RJMP    ??functionWidget_10
//  503           {
//  504             case 0:
//  505               menuStack[menuStackPos].funcState = 1;
??functionWidget_7:
        LDI     R16, 1
        STD     Z+4, R16
//  506               activeFunctionChanged = true;
??functionWidget_11:
        STS     ??activeFunctionChanged, R16
//  507               break;
//  508 
//  509             case 2:
//  510               menuStack[menuStackPos].funcState = 0;
//  511               activeFunctionChanged = true;
//  512               break;
//  513           }
//  514           break;
//  515 
//  516         case 3:
//  517           switch (menuStack[menuStackPos].funcState)
//  518           {
//  519             case 0:
//  520               menuStack[menuStackPos].funcState = 2;
//  521               activeFunctionChanged = true;
//  522               break;
//  523 
//  524             case 1:
//  525               menuStack[menuStackPos].funcState = 0;
//  526               activeFunctionChanged = true;
//  527               break;
//  528           }
//  529           break;
//  530 
//  531         case 4:
//  532           switch (menuAuthLevel)
//  533           {
//  534             case MenuAuthLevel_Master:
//  535               transitionUp(USER_MENUITEM_MAIN_MENU);
//  536               break;
//  537 
//  538             case MenuAuthLevel_Reports:
//  539               transitionUp(USER_MENUITEM_MAIN_MENU_REPORTS);
//  540               break;
//  541           }
//  542           return;
//  543       }
//  544 
//  545       getNextTransitionKey();
??functionWidget_10:
        CALL    ??getNextTransitionKey
??functionWidget_1:
        RCALL   ?Subroutine39
??CrossCallReturnLabel_63:
        TST     R16
        BREQ    ??functionWidget_12
        DEC     R16
        BRNE    $+2+2
        RJMP    ??functionWidget_5
        DEC     R16
        BREQ    ??functionWidget_6
        DEC     R16
        BREQ    ??functionWidget_13
        DEC     R16
        BREQ    ??functionWidget_14
        RJMP    ??functionWidget_10
??functionWidget_13:
        RCALL   ?Subroutine35
??CrossCallReturnLabel_56:
        BREQ    ??functionWidget_15
        DEC     R16
        RJMP    ??functionWidget_8
??functionWidget_15:
        LDI     R16, 2
??functionWidget_16:
        STD     Z+4, R16
        LDI     R16, 1
        RJMP    ??functionWidget_11
??functionWidget_9:
        LDI     R16, 0
        MOVW    R31:R30, R1:R0
        SUBI    R30, LOW((-(??menuStack) & 0xFFFF))
        SBCI    R31, (-(??menuStack) & 0xFFFF) >> 8
        RJMP    ??functionWidget_16
??functionWidget_14:
        LDS     R16, ??menuAuthLevel
        DEC     R16
        BREQ    ??functionWidget_17
        DEC     R16
        BREQ    $+2+2
        RJMP    ??functionWidget_5
        LDI     R16, 4
        RJMP    ??functionWidget_18
??functionWidget_17:
        LDI     R16, 29
??functionWidget_18:
        CALL    ??transitionUp
        RJMP    ??functionWidget_5
//  546     }
//  547 
//  548     TWidgetCounterConfig* curCounter1 = (TWidgetCounterConfig*)activeParmSpace;
//  549     TWidgetCounterConfig* curCounter2 = (TWidgetCounterConfig*)(activeParmSpace + sizeof(TWidgetCounterConfig));
//  550 
//  551     TUserMenuInfoblockSetup* curWidgetConfig;
//  552 
//  553     switch (menuStack[menuStackPos].funcState)
??functionWidget_12:
        RCALL   ?Subroutine36
??CrossCallReturnLabel_57:
        BREQ    ??functionWidget_19
        DEC     R16
        BREQ    ??functionWidget_20
        RJMP    ??functionWidget_21
//  554     {
//  555       case 1:
//  556         curWidgetConfig = &(UserInterfaceSetup.infoblockLeft);
??functionWidget_19:
        LDI     R26, LOW((??UserInterfaceSetup + 41))
        LDI     R27, HIGH((??UserInterfaceSetup + 41))
//  557         break;
        RJMP    ??functionWidget_22
//  558 
//  559       case 2:
//  560         curWidgetConfig = &(UserInterfaceSetup.infoblockRight);
??functionWidget_20:
        LDI     R26, LOW((??UserInterfaceSetup + 48))
        LDI     R27, HIGH((??UserInterfaceSetup + 48))
//  561         break;
        RJMP    ??functionWidget_22
//  562 
//  563       default:
//  564         curWidgetConfig = &(UserInterfaceSetup.infoblockMain);
??functionWidget_21:
        LDI     R26, LOW((??UserInterfaceSetup + 34))
        LDI     R27, HIGH((??UserInterfaceSetup + 34))
//  565         break;
//  566     }
//  567 
//  568     if (activeFunctionChanged)
??functionWidget_22:
        LDS     R16, ??activeFunctionChanged
        TST     R16
        BREQ    ??functionWidget_23
//  569     {
//  570       curCounter1->isEnabled = (curWidgetConfig->infoblockType != UserMenuInfoblockType_None) &&
//  571                                (curWidgetConfig->counter1.counterType != UserMenuInfoblockCounterType_None);
        LD      R16, X
        TST     R16
        BREQ    ??functionWidget_24
        RCALL   ?Subroutine10
??CrossCallReturnLabel_13:
        TST     R16
        BREQ    ??functionWidget_24
        LDI     R16, 1
        RJMP    ??functionWidget_25
??functionWidget_24:
        LDI     R16, 0
??functionWidget_25:
        STS     ??activeParmSpace, R16
//  572       curCounter1->isCalculated = false;
        LDI     R16, 0
        STS     (??activeParmSpace + 1), R16
//  573       curCounter1->isScheduled = false;
        STS     (??activeParmSpace + 2), R16
//  574 
//  575       curCounter2->isEnabled = (curWidgetConfig->infoblockType != UserMenuInfoblockType_None) &&
//  576                                (curWidgetConfig->infoblockType != UserMenuInfoblockType_DateTimeShort1Cnt) &&
//  577                                (curWidgetConfig->counter2.counterType != UserMenuInfoblockCounterType_None);
        LD      R16, X
        TST     R16
        BREQ    ??functionWidget_26
        CPI     R16, 3
        BREQ    ??functionWidget_26
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+4
        TST     R16
        BREQ    ??functionWidget_26
        LDI     R16, 1
        RJMP    ??functionWidget_27
??functionWidget_26:
        LDI     R16, 0
??functionWidget_27:
        STS     (??activeParmSpace + 15), R16
//  578       curCounter2->isCalculated = false;
        LDI     R16, 0
        STS     (??activeParmSpace + 16), R16
//  579       curCounter2->isScheduled = false;
        STS     (??activeParmSpace + 17), R16
//  580 
//  581       curStatisticRecord.status = GLOBAL::Counter::CounterStatisticProcessStatus_None;
        STS     (??curStatisticRecord + 24), R16
//  582     }
//  583 
//  584     LCDDriver::clearBuffer();
??functionWidget_23:
        CALL    ??clearBuffer
//  585 
//  586     displayWidgetBackground(curWidgetConfig->infoblockType);
        LDI     R17, 0
        LD      R16, X
        RCALL   ??displayWidgetBackground
//  587 
//  588     if (curStatisticRecord.status == GLOBAL::Counter::CounterStatisticProcessStatus_Scheduled)
        LDS     R16, (??curStatisticRecord + 24)
        LDI     R24, LOW(??activeParmSpace)
        LDI     R25, (??activeParmSpace) >> 8
        CPI     R16, 1
        BREQ    ??functionWidget_28
//  589     {
//  590       displayWidgetCounterValue(curWidgetConfig, curCounter1, curCounter2, true);
//  591       return;
//  592     }
//  593 
//  594     if (curStatisticRecord.status != GLOBAL::Counter::CounterStatisticProcessStatus_None)
        TST     R16
        BREQ    ??functionWidget_29
//  595     {
//  596       if (curCounter1->isEnabled && curCounter1->isScheduled)
        RCALL   ?Subroutine42
??CrossCallReturnLabel_72:
        TST     R16
        BREQ    ??functionWidget_30
        LDS     R16, (??activeParmSpace + 2)
        TST     R16
        BREQ    ??functionWidget_30
//  597       {
//  598         processCounterStatistic(curCounter1, &(curWidgetConfig->counter1));
        RCALL   ?Subroutine43
//  599       }
??CrossCallReturnLabel_76:
        RJMP    ??CrossCallReturnLabel_67
//  600       else
//  601       if (curCounter2->isEnabled && curCounter2->isScheduled)
??functionWidget_30:
        LDS     R16, (??activeParmSpace + 15)
        TST     R16
        BREQ    ??functionWidget_31
        LDS     R16, (??activeParmSpace + 17)
        TST     R16
        BREQ    ??functionWidget_31
//  602       {
//  603         processCounterStatistic(curCounter2, &(curWidgetConfig->counter2));
        RCALL   ?Subroutine40
//  604       }
??CrossCallReturnLabel_67:
        RCALL   ??processCounterStatistic
//  605 
//  606       curStatisticRecord.status = GLOBAL::Counter::CounterStatisticProcessStatus_None;
??functionWidget_31:
        LDI     R16, 0
        STS     (??curStatisticRecord + 24), R16
//  607     }
//  608 
//  609     if (curCounter1->isEnabled)
??functionWidget_29:
        RCALL   ?Subroutine42
??CrossCallReturnLabel_73:
        TST     R16
        BREQ    ??functionWidget_32
//  610     {
//  611       updateCounter(curCounter1, &(curWidgetConfig->counter1));
        RCALL   ?Subroutine43
??CrossCallReturnLabel_77:
        RCALL   ??updateCounter
//  612       if (!curCounter1->isCalculated)
        LDS     R16, (??activeParmSpace + 1)
        TST     R16
        BREQ    ??functionWidget_28
//  613       {
//  614         displayWidgetCounterValue(curWidgetConfig, curCounter1, curCounter2, true);
//  615         return;
//  616       }
//  617     }
//  618 
//  619     if (curCounter2->isEnabled)
??functionWidget_32:
        LDS     R16, (??activeParmSpace + 15)
        TST     R16
        BREQ    ??functionWidget_33
//  620     {
//  621       updateCounter(curCounter2, &(curWidgetConfig->counter2));
        RCALL   ?Subroutine40
??CrossCallReturnLabel_68:
        RCALL   ??updateCounter
//  622       if (!curCounter2->isCalculated)
        LDS     R16, (??activeParmSpace + 16)
        TST     R16
        BRNE    ??functionWidget_33
//  623       {
//  624         displayWidgetCounterValue(curWidgetConfig, curCounter1, curCounter2, true);
??functionWidget_28:
        LDI     R22, 1
        RJMP    ??functionWidget_34
//  625         return;
//  626       }
//  627     }
//  628 
//  629     displayWidgetCounterValue(curWidgetConfig, curCounter1, curCounter2);
??functionWidget_33:
        LDI     R22, 0
??functionWidget_34:
        LDI     R20, ((??activeParmSpace + 15) & 0xff) & 0xFF
        LDI     R21, (((??activeParmSpace + 15) >> 8) & 0xff) & 0xFF
        MOVW    R19:R18, R25:R24
        MOVW    R17:R16, R27:R26
        RCALL   ??displayWidgetCounterValue
//  630   }
??functionWidget_5:
        RJMP    ?Subroutine19
          CFI EndBlock cfiBlock163

        RSEG CODE:CODE:NOROOT(1)
?Subroutine43:
          CFI Block cfiCond164 Using cfiCommon0
          CFI Function ??functionWidget
          CFI Conditional ??CrossCallReturnLabel_76
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond165 Using cfiCommon0
          CFI (cfiCond165) Function ??functionWidget
          CFI (cfiCond165) Conditional ??CrossCallReturnLabel_77
          CFI (cfiCond165) R24 Frame(CFA_Y, -4)
          CFI (cfiCond165) R25 Frame(CFA_Y, -3)
          CFI (cfiCond165) R26 Frame(CFA_Y, -2)
          CFI (cfiCond165) R27 Frame(CFA_Y, -1)
          CFI (cfiCond165) CFA_SP SP+4
          CFI (cfiCond165) CFA_Y Y+4
          CFI Block cfiPicker166 Using cfiCommon2
          CFI (cfiPicker166) NoFunction
          CFI (cfiPicker166) Picker
        MOVW    R19:R18, R27:R26
        SUBI    R18, 255
        SBCI    R19, 255
        MOVW    R17:R16, R25:R24
        RET
          CFI EndBlock cfiCond164
          CFI EndBlock cfiCond165
          CFI EndBlock cfiPicker166

        RSEG CODE:CODE:NOROOT(1)
?Subroutine40:
          CFI Block cfiCond167 Using cfiCommon0
          CFI Function ??functionWidget
          CFI Conditional ??CrossCallReturnLabel_67
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond168 Using cfiCommon0
          CFI (cfiCond168) Function ??functionWidget
          CFI (cfiCond168) Conditional ??CrossCallReturnLabel_68
          CFI (cfiCond168) R24 Frame(CFA_Y, -4)
          CFI (cfiCond168) R25 Frame(CFA_Y, -3)
          CFI (cfiCond168) R26 Frame(CFA_Y, -2)
          CFI (cfiCond168) R27 Frame(CFA_Y, -1)
          CFI (cfiCond168) CFA_SP SP+4
          CFI (cfiCond168) CFA_Y Y+4
          CFI Block cfiPicker169 Using cfiCommon2
          CFI (cfiPicker169) NoFunction
          CFI (cfiPicker169) Picker
        MOVW    R19:R18, R27:R26
        SUBI    R18, 252
        SBCI    R19, 255
        LDI     R16, ((??activeParmSpace + 15) & 0xff) & 0xFF
        LDI     R17, (((??activeParmSpace + 15) >> 8) & 0xff) & 0xFF
        RET
          CFI EndBlock cfiCond167
          CFI EndBlock cfiCond168
          CFI EndBlock cfiPicker169

        RSEG CODE:CODE:NOROOT(1)
?Subroutine35:
          CFI Block cfiCond170 Using cfiCommon0
          CFI Function ??functionWidget
          CFI Conditional ??CrossCallReturnLabel_55
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond171 Using cfiCommon0
          CFI (cfiCond171) Function ??functionWidget
          CFI (cfiCond171) Conditional ??CrossCallReturnLabel_56
          CFI (cfiCond171) R24 Frame(CFA_Y, -4)
          CFI (cfiCond171) R25 Frame(CFA_Y, -3)
          CFI (cfiCond171) R26 Frame(CFA_Y, -2)
          CFI (cfiCond171) R27 Frame(CFA_Y, -1)
          CFI (cfiCond171) CFA_SP SP+4
          CFI (cfiCond171) CFA_Y Y+4
          CFI Block cfiPicker172 Using cfiCommon2
          CFI (cfiPicker172) NoFunction
          CFI (cfiPicker172) Picker
        RCALL   ?Subroutine52
??CrossCallReturnLabel_107:
        LDI     R30, LOW(??menuStack)
        LDI     R31, (??menuStack) >> 8
        RCALL   ?Subroutine50
??CrossCallReturnLabel_105:
        LDD     R16, Z+4
        TST     R16
        RET
          CFI EndBlock cfiCond170
          CFI EndBlock cfiCond171
          CFI EndBlock cfiPicker172

        RSEG CODE:CODE:NOROOT(1)
?Subroutine19:
          CFI Block cfiCond173 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_136
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+5
          CFI Block cfiBlock174 Using cfiCommon0
          CFI (cfiBlock174) NoFunction
          CFI (cfiBlock174) CFA_Y Y+4
          CFI (cfiBlock174) R24 Frame(CFA_Y, -4)
          CFI (cfiBlock174) R25 Frame(CFA_Y, -3)
          CFI (cfiBlock174) R26 Frame(CFA_Y, -2)
          CFI (cfiBlock174) R27 Frame(CFA_Y, -1)
          CFI Block cfiPicker175 Using cfiCommon2
          CFI (cfiPicker175) NoFunction
          CFI (cfiPicker175) Picker
        LD      R24, Y+
          CFI (cfiCond173) R24 SameValue
          CFI (cfiCond173) CFA_Y Y+4
          CFI (cfiBlock174) CFA_Y Y+3
          CFI (cfiBlock174) R24 SameValue
        LD      R25, Y+
          CFI EndBlock cfiCond173
          CFI EndBlock cfiBlock174
          CFI EndBlock cfiPicker175
        REQUIRE ??Subroutine60_0
        ;               // Fall through to label ??Subroutine60_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine60_0:
          CFI Block cfiCond176 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_136
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+3
          CFI Block cfiBlock177 Using cfiCommon0
          CFI (cfiBlock177) NoFunction
          CFI (cfiBlock177) CFA_Y Y+2
          CFI (cfiBlock177) R26 Frame(CFA_Y, -2)
          CFI (cfiBlock177) R27 Frame(CFA_Y, -1)
          CFI Block cfiPicker178 Using cfiCommon2
          CFI (cfiPicker178) NoFunction
          CFI (cfiPicker178) Picker
        LD      R26, Y+
          CFI (cfiCond176) R26 SameValue
          CFI (cfiCond176) CFA_Y Y+2
          CFI (cfiBlock177) CFA_Y Y+1
          CFI (cfiBlock177) R26 SameValue
        LD      R27, Y+
          CFI (cfiCond176) R27 SameValue
          CFI (cfiCond176) CFA_Y Y+1
          CFI (cfiBlock177) CFA_Y Y+0
          CFI (cfiBlock177) R27 SameValue
        RET
          CFI EndBlock cfiCond176
          CFI EndBlock cfiBlock177
          CFI EndBlock cfiPicker178

        RSEG CODE:CODE:NOROOT(1)
?Subroutine10:
          CFI Block cfiCond179 Using cfiCommon0
          CFI Function ??updateCounter
          CFI Conditional ??CrossCallReturnLabel_12
          CFI R24 Frame(CFA_Y, -5)
          CFI R25 Frame(CFA_Y, -4)
          CFI R26 Frame(CFA_Y, -3)
          CFI R27 Frame(CFA_Y, -2)
          CFI R4 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+9
          CFI Block cfiCond180 Using cfiCommon0
          CFI (cfiCond180) Function ??functionWidget
          CFI (cfiCond180) Conditional ??CrossCallReturnLabel_13
          CFI (cfiCond180) R24 Frame(CFA_Y, -4)
          CFI (cfiCond180) R25 Frame(CFA_Y, -3)
          CFI (cfiCond180) R26 Frame(CFA_Y, -2)
          CFI (cfiCond180) R27 Frame(CFA_Y, -1)
          CFI (cfiCond180) CFA_SP SP+4
          CFI (cfiCond180) CFA_Y Y+4
          CFI Block cfiCond181 Using cfiCommon0
          CFI (cfiCond181) Function ??functionSetupWidgets
          CFI (cfiCond181) Conditional ??CrossCallReturnLabel_14
          CFI (cfiCond181) R24 Frame(CFA_Y, -7)
          CFI (cfiCond181) R25 Frame(CFA_Y, -6)
          CFI (cfiCond181) R26 Frame(CFA_Y, -5)
          CFI (cfiCond181) R27 Frame(CFA_Y, -4)
          CFI (cfiCond181) R4 Frame(CFA_Y, -3)
          CFI (cfiCond181) R5 Frame(CFA_Y, -2)
          CFI (cfiCond181) R6 Frame(CFA_Y, -1)
          CFI (cfiCond181) CFA_SP SP+4
          CFI (cfiCond181) CFA_Y Y+7
          CFI Block cfiCond182 Using cfiCommon0
          CFI (cfiCond182) Function ??functionSetupWidgets
          CFI (cfiCond182) Conditional ??CrossCallReturnLabel_15
          CFI (cfiCond182) R24 Frame(CFA_Y, -7)
          CFI (cfiCond182) R25 Frame(CFA_Y, -6)
          CFI (cfiCond182) R26 Frame(CFA_Y, -5)
          CFI (cfiCond182) R27 Frame(CFA_Y, -4)
          CFI (cfiCond182) R4 Frame(CFA_Y, -3)
          CFI (cfiCond182) R5 Frame(CFA_Y, -2)
          CFI (cfiCond182) R6 Frame(CFA_Y, -1)
          CFI (cfiCond182) CFA_SP SP+4
          CFI (cfiCond182) CFA_Y Y+7
          CFI Block cfiPicker183 Using cfiCommon2
          CFI (cfiPicker183) NoFunction
          CFI (cfiPicker183) Picker
        MOVW    R31:R30, R27:R26
        LDD     R16, Z+1
        RET
          CFI EndBlock cfiCond179
          CFI EndBlock cfiCond180
          CFI EndBlock cfiCond181
          CFI EndBlock cfiCond182
          CFI EndBlock cfiPicker183
//  631 

        RSEG CODE:CODE:NOROOT(1)
//  632   void functionSetupWidgets()
??functionSetupWidgets:
          CFI Block cfiBlock184 Using cfiCommon0
          CFI Function ??functionSetupWidgets
//  633   {
        FUNCALL ??functionSetupWidgets, ??getNextTransitionKey
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWidgets, ??saveUserInterfaceSetup
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWidgets, ??processMenuOptionChanged
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWidgets, ??clearBuffer
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWidgets, ??displayWidgetBackground
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWidgets, ??num2Buf
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWidgets, ??getString
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWidgets, ??str2Buf
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWidgets, ??getString
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWidgets, ??str2Buf
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWidgets, ??getString
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWidgets, ??str2Buf
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??functionSetupWidgets, ??refreshDisplay
        LOCFRAME CSTACK, 8, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine0
          CFI R24 Frame(CFA_Y, -7)
          CFI R25 Frame(CFA_Y, -6)
          CFI R26 Frame(CFA_Y, -5)
          CFI R27 Frame(CFA_Y, -4)
          CFI R4 Frame(CFA_Y, -3)
          CFI R5 Frame(CFA_Y, -2)
          CFI R6 Frame(CFA_Y, -1)
          CFI CFA_Y Y+7
??CrossCallReturnLabel_119:
        REQUIRE ?Register_R4_is_cg_reg
        REQUIRE ?Register_R5_is_cg_reg
        REQUIRE ?Register_R6_is_cg_reg
//  634     TUserMenuInfoblockSetup* curWidgetSetup = (TUserMenuInfoblockSetup*)activeParmSpace;
//  635     unsigned char* curWidgetSetupStatus = (unsigned char*)(activeParmSpace + sizeof(TUserMenuInfoblockSetup));
//  636 
//  637     TUserMenuInfoblockSetup* curUserInterfaceSetupWidget;
//  638     TUserMenuInfoblockCounterSetup* curCounterSetup;
//  639 
//  640     switch (menuStack[menuStackPos].funcState)
        RCALL   ?Subroutine36
??CrossCallReturnLabel_58:
        BREQ    ??functionSetupWidgets_1
        DEC     R16
        BREQ    ??functionSetupWidgets_2
        RJMP    ??functionSetupWidgets_3
//  641     {
//  642       case 1:
//  643         curUserInterfaceSetupWidget = &(UserInterfaceSetup.infoblockLeft);
??functionSetupWidgets_1:
        LDI     R16, LOW((??UserInterfaceSetup + 41))
        MOV     R4, R16
        LDI     R16, HIGH((??UserInterfaceSetup + 41))
        RJMP    ??functionSetupWidgets_4
//  644         break;
//  645 
//  646       case 2:
//  647         curUserInterfaceSetupWidget = &(UserInterfaceSetup.infoblockRight);
??functionSetupWidgets_2:
        LDI     R16, LOW((??UserInterfaceSetup + 48))
        MOV     R4, R16
        LDI     R16, HIGH((??UserInterfaceSetup + 48))
        RJMP    ??functionSetupWidgets_4
//  648         break;
//  649 
//  650       default:
//  651         curUserInterfaceSetupWidget = &(UserInterfaceSetup.infoblockMain);
??functionSetupWidgets_3:
        LDI     R16, LOW((??UserInterfaceSetup + 34))
        MOV     R4, R16
        LDI     R16, HIGH((??UserInterfaceSetup + 34))
??functionSetupWidgets_4:
        MOV     R5, R16
//  652         break;
//  653     }
//  654 
//  655     if (activeFunctionChanged)
        LDI     R24, LOW(??activeParmSpace)
        LDI     R25, (??activeParmSpace) >> 8
        LDS     R16, ??activeFunctionChanged
        TST     R16
        BREQ    ??functionSetupWidgets_5
//  656     {
//  657       *curWidgetSetup = *curUserInterfaceSetupWidget;
        MOVW    R17:R16, R25:R24
        MOVW    R31:R30, R5:R4
        RCALL   ?Subroutine17
//  658       (*curWidgetSetupStatus) = 0;
??CrossCallReturnLabel_22:
        STS     (??activeParmSpace + 7), R20
//  659     }
//  660 
//  661     switch (*curWidgetSetupStatus)
//  662     {
//  663       case 5:
//  664       case 6:
//  665       case 7:
//  666       case 8:
//  667         curCounterSetup = &(curWidgetSetup->counter2);
//  668         break;
//  669 
//  670       default:
//  671         curCounterSetup = &(curWidgetSetup->counter1);
??functionSetupWidgets_6:
        MOVW    R27:R26, R25:R24
        ADIW    R27:R26, 1
//  672         break;
        RJMP    ??functionSetupWidgets_7
??functionSetupWidgets_5:
        RCALL   ?Subroutine44
??CrossCallReturnLabel_78:
        BRCC    ??functionSetupWidgets_6
        MOVW    R27:R26, R25:R24
        ADIW    R27:R26, 4
        RJMP    ??functionSetupWidgets_7
//  673     }
//  674 
//  675     while (transitionKey)
//  676     {
//  677       unsigned char setupMaxStep = 0;
//  678       unsigned char difValue;
//  679 
//  680       switch (transitionKey)
//  681       {
//  682         case 1:
//  683           switch (*curWidgetSetupStatus)
//  684           {
//  685             case 0:
//  686               return;
//  687 
//  688             case 5:
//  689               (*curWidgetSetupStatus) = 1;
??functionSetupWidgets_8:
        LDI     R16, 1
        STS     (??activeParmSpace + 7), R16
//  690                break;
//  691 
//  692             case 4:
//  693             case 8:
//  694               switch (curCounterSetup->counterType)
//  695               {
//  696                 case UserMenuInfoblockCounterType_NoSensorHour:
//  697                 case UserMenuInfoblockCounterType_NoSensorDay:
//  698                   (*curWidgetSetupStatus) -= 2;
//  699                   break;
//  700 
//  701                 default:
//  702                   (*curWidgetSetupStatus)--;
//  703                   break;
//  704               }
//  705               break;
//  706 
//  707             default:
//  708               (*curWidgetSetupStatus)--;
//  709               break;
//  710           }
//  711           break;
//  712 
//  713         case 2:
//  714         case 3:
//  715           switch (*curWidgetSetupStatus)
//  716           {
//  717             case 0:
//  718               difValue = (transitionKey == 2) ? UserMenuInfoblockType_Counter2 : 1;
//  719               curWidgetSetup->infoblockType = (TUserMenuInfoblockType)((curWidgetSetup->infoblockType + difValue) % (UserMenuInfoblockType_Counter2 + 1));
//  720               break;
//  721 
//  722             case 2:
//  723             case 6:
//  724               difValue = (transitionKey == 2) ? UserMenuInfoblockCounterType_NoSensorDay : 1;
//  725               curCounterSetup->counterType = (TUserMenuInfoblockCounterType)((curCounterSetup->counterType + difValue) % (UserMenuInfoblockCounterType_NoSensorDay + 1));
//  726               break;
//  727 
//  728             case 3:
//  729             case 7:
//  730               difValue = (transitionKey == 2) ? UserMenuInfoblockCounterDirType_Min : 1;
//  731               curCounterSetup->counterDir = (TUserMenuInfoblockCounterDirType)((curCounterSetup->counterDir + difValue) % (UserMenuInfoblockCounterDirType_Min + 1));
//  732               break;
//  733 
//  734             case 4:
//  735             case 8:
//  736               difValue = (transitionKey == 2) ? 255 : 1;
//  737               curCounterSetup->counterShift = curCounterSetup->counterShift + difValue;
//  738               break;
//  739           }
//  740           break;
//  741 
//  742         case 4:
//  743           switch (curWidgetSetup->infoblockType)
//  744           {
//  745             case UserMenuInfoblockType_None:
//  746               setupMaxStep = 0;
//  747               break;
//  748 
//  749             case UserMenuInfoblockType_DateTimeShort1Cnt:
//  750               setupMaxStep = 4;
//  751               break;
//  752 
//  753             default:
//  754               setupMaxStep = 8;
//  755               break;
//  756           }
//  757 
//  758           switch (*curWidgetSetupStatus)
//  759           {
//  760             case 2:
//  761             case 6:
//  762               switch (curCounterSetup->counterType)
//  763               {
//  764                 case UserMenuInfoblockCounterType_None:
//  765                   (*curWidgetSetupStatus) += 3;
//  766                   break;
//  767 
//  768                 case UserMenuInfoblockCounterType_NoSensorHour:
//  769                 case UserMenuInfoblockCounterType_NoSensorDay:
//  770                   (*curWidgetSetupStatus) += 2;
//  771                   break;
//  772 
//  773                 default:
//  774                   (*curWidgetSetupStatus)++;
//  775                   break;
//  776               }
//  777               break;
//  778 
//  779             case 3:
//  780             case 7:
//  781               if (curCounterSetup->counterType == UserMenuInfoblockCounterType_VisitorsTotal)
//  782               {
//  783                 (*curWidgetSetupStatus) += 2;
//  784               }
//  785               else
//  786               {
//  787                 (*curWidgetSetupStatus)++;
//  788               }
//  789               break;
//  790 
//  791             default:
//  792               (*curWidgetSetupStatus)++;
//  793               break;
//  794           }
//  795 
//  796           if ((*curWidgetSetupStatus) > setupMaxStep)
//  797           {
//  798             *curUserInterfaceSetupWidget = *curWidgetSetup;
//  799             DeviceManager::saveUserInterfaceSetup();
//  800             processMenuOptionChanged();
//  801             return;
//  802           }
//  803           return;
//  804       }
//  805 
//  806       switch (*curWidgetSetupStatus)
//  807       {
//  808         case 5:
//  809         case 6:
//  810         case 7:
//  811         case 8:
//  812           curCounterSetup = &(curWidgetSetup->counter2);
//  813           break;
//  814 
//  815         default:
//  816           curCounterSetup = &(curWidgetSetup->counter1);
??functionSetupWidgets_9:
        MOVW    R27:R26, R25:R24
        ADIW    R27:R26, 1
//  817           break;
//  818       }
//  819 
//  820       getNextTransitionKey();
??functionSetupWidgets_10:
        CALL    ??getNextTransitionKey
??functionSetupWidgets_7:
        RCALL   ?Subroutine39
??CrossCallReturnLabel_64:
        TST     R16
        BRNE    $+2+2
        RJMP    ??functionSetupWidgets_11
        LDI     R16, 0
        LDS     R17, ??transitionKey
        DEC     R17
        BREQ    ??functionSetupWidgets_12
        DEC     R17
        BREQ    ??functionSetupWidgets_13
        DEC     R17
        BREQ    ??functionSetupWidgets_13
        DEC     R17
        BRNE    $+2+2
        RJMP    ??functionSetupWidgets_14
        RJMP    ??functionSetupWidgets_15
??functionSetupWidgets_12:
        RCALL   ?Subroutine41
??CrossCallReturnLabel_69:
        BRNE    $+2+2
        RJMP    ??CrossCallReturnLabel_38
        SUBI    R16, 4
        BREQ    ??functionSetupWidgets_16
        DEC     R16
        BREQ    ??functionSetupWidgets_8
        SUBI    R16, 3
        BRNE    ??functionSetupWidgets_17
??functionSetupWidgets_16:
        LD      R16, X
        SUBI    R16, 6
        BREQ    ??functionSetupWidgets_18
        DEC     R16
        BRNE    ??functionSetupWidgets_17
??functionSetupWidgets_18:
        MOVW    R31:R30, R25:R24
        LDD     R16, Z+7
        SUBI    R16, 2
??functionSetupWidgets_19:
        STD     Z+7, R16
??functionSetupWidgets_15:
        RCALL   ?Subroutine44
??CrossCallReturnLabel_79:
        BRCC    ??functionSetupWidgets_9
        MOVW    R27:R26, R25:R24
        ADIW    R27:R26, 4
        RJMP    ??functionSetupWidgets_10
??functionSetupWidgets_17:
        MOVW    R31:R30, R25:R24
        LDD     R16, Z+7
        DEC     R16
        RJMP    ??functionSetupWidgets_19
??functionSetupWidgets_13:
        RCALL   ?Subroutine41
??CrossCallReturnLabel_70:
        BREQ    ??functionSetupWidgets_20
        SUBI    R16, 2
        BREQ    ??functionSetupWidgets_21
        DEC     R16
        BREQ    ??functionSetupWidgets_22
        DEC     R16
        BREQ    ??functionSetupWidgets_23
        SUBI    R16, 2
        BREQ    ??functionSetupWidgets_21
        DEC     R16
        BREQ    ??functionSetupWidgets_22
        DEC     R16
        BREQ    ??functionSetupWidgets_23
        RJMP    ??functionSetupWidgets_15
??functionSetupWidgets_20:
        RCALL   ?Subroutine38
??CrossCallReturnLabel_61:
        RCALL   ?Subroutine42
??CrossCallReturnLabel_74:
        RCALL   ?Subroutine14
??CrossCallReturnLabel_138:
        STS     ??activeParmSpace, R20
        RJMP    ??functionSetupWidgets_15
??functionSetupWidgets_21:
        RCALL   ?Subroutine39
??CrossCallReturnLabel_65:
        CPI     R16, 2
        BRNE    ??functionSetupWidgets_24
        LDI     R18, 7
        RJMP    ??functionSetupWidgets_25
??functionSetupWidgets_24:
        LDI     R18, 1
??functionSetupWidgets_25:
        LD      R16, X
        LDI     R17, 0
        ADD     R16, R18
        ADC     R17, R17
        LDI     R20, 8
        RCALL   ??Subroutine61_0
??CrossCallReturnLabel_137:
        ST      X, R20
        RJMP    ??functionSetupWidgets_15
??functionSetupWidgets_22:
        RCALL   ?Subroutine38
??CrossCallReturnLabel_62:
        RCALL   ?Subroutine10
??CrossCallReturnLabel_14:
        RCALL   ?Subroutine14
??CrossCallReturnLabel_139:
        MOVW    R31:R30, R27:R26
        STD     Z+1, R20
        RJMP    ??functionSetupWidgets_15
??functionSetupWidgets_23:
        RCALL   ?Subroutine39
??CrossCallReturnLabel_66:
        CPI     R16, 2
        BRNE    ??functionSetupWidgets_26
        LDI     R16, 255
        RJMP    ??functionSetupWidgets_27
??functionSetupWidgets_26:
        LDI     R16, 1
??functionSetupWidgets_27:
        MOVW    R31:R30, R27:R26
        LDD     R17, Z+2
        ADD     R17, R16
        STD     Z+2, R17
        RJMP    ??functionSetupWidgets_15
??functionSetupWidgets_14:
        LDS     R17, ??activeParmSpace
        TST     R17
        BREQ    ??functionSetupWidgets_28
        SUBI    R17, 3
        BRNE    ??functionSetupWidgets_29
        LDI     R16, 4
        RJMP    ??functionSetupWidgets_28
??functionSetupWidgets_29:
        LDI     R16, 8
??functionSetupWidgets_28:
        LDS     R17, (??activeParmSpace + 7)
        SUBI    R17, 2
        BREQ    ??functionSetupWidgets_30
        DEC     R17
        BREQ    ??functionSetupWidgets_31
        SUBI    R17, 3
        BREQ    ??functionSetupWidgets_30
        DEC     R17
        BREQ    ??functionSetupWidgets_31
        RJMP    ??functionSetupWidgets_32
??functionSetupWidgets_30:
        LD      R17, X
        TST     R17
        BREQ    ??functionSetupWidgets_33
        SUBI    R17, 6
        BREQ    ??functionSetupWidgets_34
        DEC     R17
        BREQ    ??functionSetupWidgets_34
        RJMP    ??functionSetupWidgets_32
??functionSetupWidgets_33:
        MOVW    R31:R30, R25:R24
        LDD     R17, Z+7
        SUBI    R17, 253
        RJMP    ??functionSetupWidgets_35
??functionSetupWidgets_31:
        LD      R17, X
        CPI     R17, 5
        BRNE    ??functionSetupWidgets_32
??functionSetupWidgets_34:
        MOVW    R31:R30, R25:R24
        LDD     R17, Z+7
        SUBI    R17, 254
        RJMP    ??functionSetupWidgets_35
??functionSetupWidgets_32:
        MOVW    R31:R30, R25:R24
        LDD     R17, Z+7
        INC     R17
??functionSetupWidgets_35:
        STD     Z+7, R17
        LDD     R17, Z+7
        CP      R16, R17
        BRCS    $+2+2
        RJMP    ??CrossCallReturnLabel_38
        MOVW    R17:R16, R5:R4
        RCALL   ?Subroutine17
??CrossCallReturnLabel_23:
        CALL    ??saveUserInterfaceSetup
        CALL    ??processMenuOptionChanged
        RJMP    ??CrossCallReturnLabel_38
//  821     }
//  822 
//  823     LCDDriver::clearBuffer();
??functionSetupWidgets_11:
        CALL    ??clearBuffer
//  824 
//  825     unsigned short curTextConstL1 = 0;
        LDI     R24, 0
//  826     unsigned short curTextConstL2 = 0;
        CLR     R4
//  827     unsigned short curShiftSymbolL2 = 0;
        CLR     R6
//  828 
//  829     switch (*curWidgetSetupStatus)
        RCALL   ?Subroutine41
??CrossCallReturnLabel_71:
        BREQ    ??functionSetupWidgets_36
        DEC     R16
        BREQ    ??functionSetupWidgets_37
        DEC     R16
        BREQ    ??functionSetupWidgets_38
        DEC     R16
        BREQ    ??functionSetupWidgets_39
        DEC     R16
        BRNE    $+2+2
        RJMP    ??functionSetupWidgets_40
        DEC     R16
        BREQ    ??functionSetupWidgets_41
        DEC     R16
        BREQ    ??functionSetupWidgets_38
        DEC     R16
        BREQ    ??functionSetupWidgets_39
        DEC     R16
        BRNE    $+2+2
        RJMP    ??functionSetupWidgets_40
        RJMP    ??functionSetupWidgets_42
//  830     {
//  831       case 0:
//  832         displayWidgetBackground(curWidgetSetup->infoblockType, true);
??functionSetupWidgets_36:
        LDI     R17, 1
        RCALL   ?Subroutine42
??CrossCallReturnLabel_75:
        RCALL   ??displayWidgetBackground
//  833         break;
        RJMP    ??CrossCallReturnLabel_7
//  834 
//  835       case 1:
//  836         curTextConstL1 = USER_TEXT_CONST_TEXT_WIDGET_COUNTER1_LONG;
??functionSetupWidgets_37:
        LDI     R24, 129
//  837         break;
        RJMP    ??functionSetupWidgets_43
//  838 
//  839       case 5:
//  840         curTextConstL1 = USER_TEXT_CONST_TEXT_WIDGET_COUNTER2_LONG;
??functionSetupWidgets_41:
        LDI     R24, 130
//  841         break;
        RJMP    ??functionSetupWidgets_43
//  842 
//  843       case 2:
//  844       case 6:
//  845         switch (curCounterSetup->counterType)
??functionSetupWidgets_38:
        LD      R16, X
        TST     R16
        BREQ    ??functionSetupWidgets_44
        DEC     R16
        BREQ    ??functionSetupWidgets_45
        DEC     R16
        BREQ    ??functionSetupWidgets_46
        DEC     R16
        BREQ    ??functionSetupWidgets_47
        DEC     R16
        BREQ    ??functionSetupWidgets_48
        DEC     R16
        BREQ    ??functionSetupWidgets_49
        DEC     R16
        BREQ    ??functionSetupWidgets_50
        DEC     R16
        BREQ    ??functionSetupWidgets_51
        RJMP    ??functionSetupWidgets_42
//  846         {
//  847           case UserMenuInfoblockCounterType_None:
//  848             curTextConstL1 = USER_TEXT_CONST_TEXT_WIDGET_SWITCHED_OFF;
??functionSetupWidgets_44:
        LDI     R24, 126
//  849             break;
        RJMP    ??functionSetupWidgets_43
//  850 
//  851           case UserMenuInfoblockCounterType_VisitorsHour:
//  852             curTextConstL1 = USER_TEXT_CONST_REPORTS_VISITORS;
??functionSetupWidgets_45:
        LDI     R24, 67
//  853             curTextConstL2 = USER_TEXT_CONST_REPORTS_HOUR;
        RJMP    ??functionSetupWidgets_52
//  854             break;
//  855 
//  856           case UserMenuInfoblockCounterType_VisitorsDay:
//  857             curTextConstL1 = USER_TEXT_CONST_REPORTS_VISITORS;
??functionSetupWidgets_46:
        LDI     R24, 67
//  858             curTextConstL2 = USER_TEXT_CONST_REPORTS_DAY;
        RJMP    ??functionSetupWidgets_53
//  859             break;
//  860 
//  861           case UserMenuInfoblockCounterType_VisitorsWeek:
//  862             curTextConstL1 = USER_TEXT_CONST_REPORTS_VISITORS;
??functionSetupWidgets_47:
        LDI     R24, 67
//  863             curTextConstL2 = USER_TEXT_CONST_REPORTS_WEEK;
        LDI     R16, 71
        RJMP    ??functionSetupWidgets_54
//  864             break;
//  865 
//  866           case UserMenuInfoblockCounterType_VisitorsMonth:
//  867             curTextConstL1 = USER_TEXT_CONST_REPORTS_VISITORS;
??functionSetupWidgets_48:
        LDI     R24, 67
//  868             curTextConstL2 = USER_TEXT_CONST_REPORTS_MONTH;
        LDI     R16, 72
        RJMP    ??functionSetupWidgets_54
//  869             break;
//  870 
//  871           case UserMenuInfoblockCounterType_VisitorsTotal:
//  872             curTextConstL1 = USER_TEXT_CONST_REPORTS_VISITORS;
??functionSetupWidgets_49:
        LDI     R24, 67
//  873             curTextConstL2 = USER_TEXT_CONST_REPORTS_TOTAL;
        LDI     R16, 68
        RJMP    ??functionSetupWidgets_54
//  874             break;
//  875 
//  876           case UserMenuInfoblockCounterType_NoSensorHour:
//  877             curTextConstL1 = USER_TEXT_CONST_REPORTS_NOSENSOR;
??functionSetupWidgets_50:
        LDI     R24, 73
//  878             curTextConstL2 = USER_TEXT_CONST_REPORTS_HOUR;
??functionSetupWidgets_52:
        LDI     R16, 69
        RJMP    ??functionSetupWidgets_54
//  879             break;
//  880 
//  881           case UserMenuInfoblockCounterType_NoSensorDay:
//  882             curTextConstL1 = USER_TEXT_CONST_REPORTS_NOSENSOR;
??functionSetupWidgets_51:
        LDI     R24, 73
//  883             curTextConstL2 = USER_TEXT_CONST_REPORTS_DAY;
??functionSetupWidgets_53:
        LDI     R16, 70
        RJMP    ??functionSetupWidgets_54
//  884             break;
//  885         }
//  886         break;
//  887 
//  888       case 3:
//  889       case 7:
//  890         curTextConstL1 = USER_TEXT_CONST_TEXT_WIDGET_COUNTER_AGGREGATION_MODE;
??functionSetupWidgets_39:
        LDI     R24, 131
//  891         switch (curCounterSetup->counterDir)
        RCALL   ?Subroutine10
??CrossCallReturnLabel_15:
        TST     R16
        BREQ    ??functionSetupWidgets_55
        DEC     R16
        BREQ    ??functionSetupWidgets_56
        DEC     R16
        BREQ    ??functionSetupWidgets_57
        DEC     R16
        BREQ    ??functionSetupWidgets_58
        DEC     R16
        BREQ    ??functionSetupWidgets_59
        RJMP    ??functionSetupWidgets_42
//  892         {
//  893           case UserMenuInfoblockCounterDirType_In:
//  894             curTextConstL2 = USER_TEXT_CONST_TEXT_WIDGET_COUNTER_AGGREGATION_IN;
??functionSetupWidgets_55:
        LDI     R16, 132
        RJMP    ??functionSetupWidgets_54
//  895             break;
//  896 
//  897           case UserMenuInfoblockCounterDirType_Out:
//  898             curTextConstL2 = USER_TEXT_CONST_TEXT_WIDGET_COUNTER_AGGREGATION_OUT;
??functionSetupWidgets_56:
        LDI     R16, 133
        RJMP    ??functionSetupWidgets_54
//  899             break;
//  900 
//  901           case UserMenuInfoblockCounterDirType_Avg:
//  902             curTextConstL2 = USER_TEXT_CONST_TEXT_WIDGET_COUNTER_AGGREGATION_AVG;
??functionSetupWidgets_57:
        LDI     R16, 134
        RJMP    ??functionSetupWidgets_54
//  903             break;
//  904 
//  905           case UserMenuInfoblockCounterDirType_Max:
//  906             curTextConstL2 = USER_TEXT_CONST_TEXT_WIDGET_COUNTER_AGGREGATION_MAX;
??functionSetupWidgets_58:
        LDI     R16, 135
        RJMP    ??functionSetupWidgets_54
//  907             break;
//  908 
//  909           case UserMenuInfoblockCounterDirType_Min:
//  910             curTextConstL2 = USER_TEXT_CONST_TEXT_WIDGET_COUNTER_AGGREGATION_MIN;
??functionSetupWidgets_59:
        LDI     R16, 136
??functionSetupWidgets_54:
        MOV     R4, R16
//  911             break;
        RJMP    ??functionSetupWidgets_43
//  912         }
//  913         break;
//  914 
//  915       case 4:
//  916       case 8:
//  917         curTextConstL2 = USER_TEXT_CONST_TEXT_WIDGET_COUNTER_SHIFT;
??functionSetupWidgets_40:
        LDI     R16, 137
        MOV     R4, R16
//  918         LCDDriver::num2Buf(1, 13, curCounterSetup->counterShift, 3, LCD_DISPLAY_SYMBOL_SPACE);
        LDI     R19, 32
        LDI     R18, 3
        MOVW    R31:R30, R27:R26
        LDD     R20, Z+2
        RCALL   ??Subroutine58_0
??CrossCallReturnLabel_133:
        LDI     R17, 13
        RCALL   ?Subroutine46
//  919 
//  920         switch (curCounterSetup->counterType)
??CrossCallReturnLabel_86:
        LD      R16, X
        DEC     R16
        BREQ    ??functionSetupWidgets_60
        DEC     R16
        BREQ    ??functionSetupWidgets_61
        DEC     R16
        BREQ    ??functionSetupWidgets_62
        DEC     R16
        BREQ    ??functionSetupWidgets_63
        SUBI    R16, 2
        BREQ    ??functionSetupWidgets_60
        DEC     R16
        BREQ    ??functionSetupWidgets_61
        RJMP    ??functionSetupWidgets_42
//  921         {
//  922           case UserMenuInfoblockCounterType_VisitorsHour:
//  923           case UserMenuInfoblockCounterType_NoSensorHour:
//  924             curShiftSymbolL2 = USER_TEXT_CONST_TEXT_WIDGET_HOUR_SHORT;
??functionSetupWidgets_60:
        LDI     R16, 104
        RJMP    ??functionSetupWidgets_64
//  925             break;
//  926 
//  927           case UserMenuInfoblockCounterType_VisitorsDay:
//  928           case UserMenuInfoblockCounterType_NoSensorDay:
//  929             curShiftSymbolL2 = USER_TEXT_CONST_TEXT_WIDGET_DAY_SHORT;
??functionSetupWidgets_61:
        LDI     R16, 105
        RJMP    ??functionSetupWidgets_64
//  930             break;
//  931 
//  932           case UserMenuInfoblockCounterType_VisitorsWeek:
//  933             curShiftSymbolL2 = USER_TEXT_CONST_TEXT_WIDGET_WEEK_SHORT;
??functionSetupWidgets_62:
        LDI     R16, 106
        RJMP    ??functionSetupWidgets_64
//  934             break;
//  935 
//  936           case UserMenuInfoblockCounterType_VisitorsMonth:
//  937             curShiftSymbolL2 = USER_TEXT_CONST_TEXT_WIDGET_MONTH_SHORT;
??functionSetupWidgets_63:
        LDI     R16, 107
??functionSetupWidgets_64:
        MOV     R6, R16
//  938             break;
        RJMP    ??functionSetupWidgets_65
//  939         }
//  940         break;
//  941     }
//  942 
//  943     if (curTextConstL1)
??functionSetupWidgets_42:
        TST     R24
        BREQ    ??CrossCallReturnLabel_89
//  944     {
//  945       LCDDriver::str2Buf(0, getString(curTextConstL1), LCDDriver::LCDTextIdentation_Center);
??functionSetupWidgets_43:
        MOV     R16, R24
        RCALL   ?Subroutine23
//  946     }
??CrossCallReturnLabel_33:
        RCALL   ?Subroutine9
//  947 
//  948     if (curTextConstL2)
??CrossCallReturnLabel_89:
        TST     R4
        BREQ    ??CrossCallReturnLabel_7
//  949     {
//  950       LCDDriver::str2Buf(1, getString(curTextConstL2), LCDDriver::LCDTextIdentation_Center);
??functionSetupWidgets_65:
        MOV     R16, R4
        RCALL   ?Subroutine23
//  951     }
??CrossCallReturnLabel_34:
        RCALL   ?Subroutine5
//  952 
//  953     if (curShiftSymbolL2)
??CrossCallReturnLabel_6:
        MOV     R16, R6
        TST     R6
        BREQ    ??CrossCallReturnLabel_7
//  954     {
//  955       LCDDriver::str2Buf(1, getString(curShiftSymbolL2), LCDDriver::LCDTextIdentation_Left, 15);
        RCALL   ?Subroutine49
//  956     }
??CrossCallReturnLabel_97:
        LDI     R18, 15
        LDI     R17, 1
        RCALL   ?Subroutine5
//  957 
//  958     LCDDriver::refreshDisplay(LCDDriver::LCDDisplayMode_NoCursor);
??CrossCallReturnLabel_7:
        LDI     R21, 0
        LDI     R20, 0
        RCALL   ?Subroutine25
//  959   }
??CrossCallReturnLabel_38:
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+6
        LD      R25, Y+
          CFI R25 SameValue
          CFI CFA_Y Y+5
        RJMP    ?Subroutine51
          CFI EndBlock cfiBlock184

        RSEG CODE:CODE:NOROOT(1)
?Subroutine44:
          CFI Block cfiCond185 Using cfiCommon0
          CFI Function ??functionSetupWidgets
          CFI Conditional ??CrossCallReturnLabel_78
          CFI R24 Frame(CFA_Y, -7)
          CFI R25 Frame(CFA_Y, -6)
          CFI R26 Frame(CFA_Y, -5)
          CFI R27 Frame(CFA_Y, -4)
          CFI R4 Frame(CFA_Y, -3)
          CFI R5 Frame(CFA_Y, -2)
          CFI R6 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+7
          CFI Block cfiCond186 Using cfiCommon0
          CFI (cfiCond186) Function ??functionSetupWidgets
          CFI (cfiCond186) Conditional ??CrossCallReturnLabel_79
          CFI (cfiCond186) R24 Frame(CFA_Y, -7)
          CFI (cfiCond186) R25 Frame(CFA_Y, -6)
          CFI (cfiCond186) R26 Frame(CFA_Y, -5)
          CFI (cfiCond186) R27 Frame(CFA_Y, -4)
          CFI (cfiCond186) R4 Frame(CFA_Y, -3)
          CFI (cfiCond186) R5 Frame(CFA_Y, -2)
          CFI (cfiCond186) R6 Frame(CFA_Y, -1)
          CFI (cfiCond186) CFA_SP SP+4
          CFI (cfiCond186) CFA_Y Y+7
          CFI Block cfiPicker187 Using cfiCommon2
          CFI (cfiPicker187) NoFunction
          CFI (cfiPicker187) Picker
        LDS     R16, (??activeParmSpace + 7)
        SUBI    R16, 5
        SUBI    R16, 4
        RET
          CFI EndBlock cfiCond185
          CFI EndBlock cfiCond186
          CFI EndBlock cfiPicker187

        RSEG CODE:CODE:NOROOT(1)
?Subroutine42:
          CFI Block cfiCond188 Using cfiCommon0
          CFI Function ??functionWidget
          CFI Conditional ??CrossCallReturnLabel_72
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond189 Using cfiCommon0
          CFI (cfiCond189) Function ??functionWidget
          CFI (cfiCond189) Conditional ??CrossCallReturnLabel_73
          CFI (cfiCond189) R24 Frame(CFA_Y, -4)
          CFI (cfiCond189) R25 Frame(CFA_Y, -3)
          CFI (cfiCond189) R26 Frame(CFA_Y, -2)
          CFI (cfiCond189) R27 Frame(CFA_Y, -1)
          CFI (cfiCond189) CFA_SP SP+4
          CFI (cfiCond189) CFA_Y Y+4
          CFI Block cfiCond190 Using cfiCommon0
          CFI (cfiCond190) Function ??functionSetupWidgets
          CFI (cfiCond190) Conditional ??CrossCallReturnLabel_74
          CFI (cfiCond190) R24 Frame(CFA_Y, -7)
          CFI (cfiCond190) R25 Frame(CFA_Y, -6)
          CFI (cfiCond190) R26 Frame(CFA_Y, -5)
          CFI (cfiCond190) R27 Frame(CFA_Y, -4)
          CFI (cfiCond190) R4 Frame(CFA_Y, -3)
          CFI (cfiCond190) R5 Frame(CFA_Y, -2)
          CFI (cfiCond190) R6 Frame(CFA_Y, -1)
          CFI (cfiCond190) CFA_SP SP+4
          CFI (cfiCond190) CFA_Y Y+7
          CFI Block cfiCond191 Using cfiCommon0
          CFI (cfiCond191) Function ??functionSetupWidgets
          CFI (cfiCond191) Conditional ??CrossCallReturnLabel_75
          CFI (cfiCond191) R24 Frame(CFA_Y, -7)
          CFI (cfiCond191) R25 Frame(CFA_Y, -6)
          CFI (cfiCond191) R26 Frame(CFA_Y, -5)
          CFI (cfiCond191) R27 Frame(CFA_Y, -4)
          CFI (cfiCond191) R4 Frame(CFA_Y, -3)
          CFI (cfiCond191) R5 Frame(CFA_Y, -2)
          CFI (cfiCond191) R6 Frame(CFA_Y, -1)
          CFI (cfiCond191) CFA_SP SP+4
          CFI (cfiCond191) CFA_Y Y+7
          CFI Block cfiPicker192 Using cfiCommon2
          CFI (cfiPicker192) NoFunction
          CFI (cfiPicker192) Picker
        LDS     R16, ??activeParmSpace
        RET
          CFI EndBlock cfiCond188
          CFI EndBlock cfiCond189
          CFI EndBlock cfiCond190
          CFI EndBlock cfiCond191
          CFI EndBlock cfiPicker192

        RSEG CODE:CODE:NOROOT(1)
?Subroutine41:
          CFI Block cfiCond193 Using cfiCommon0
          CFI Function ??functionSetupWidgets
          CFI Conditional ??CrossCallReturnLabel_69
          CFI R24 Frame(CFA_Y, -7)
          CFI R25 Frame(CFA_Y, -6)
          CFI R26 Frame(CFA_Y, -5)
          CFI R27 Frame(CFA_Y, -4)
          CFI R4 Frame(CFA_Y, -3)
          CFI R5 Frame(CFA_Y, -2)
          CFI R6 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+7
          CFI Block cfiCond194 Using cfiCommon0
          CFI (cfiCond194) Function ??functionSetupWidgets
          CFI (cfiCond194) Conditional ??CrossCallReturnLabel_70
          CFI (cfiCond194) R24 Frame(CFA_Y, -7)
          CFI (cfiCond194) R25 Frame(CFA_Y, -6)
          CFI (cfiCond194) R26 Frame(CFA_Y, -5)
          CFI (cfiCond194) R27 Frame(CFA_Y, -4)
          CFI (cfiCond194) R4 Frame(CFA_Y, -3)
          CFI (cfiCond194) R5 Frame(CFA_Y, -2)
          CFI (cfiCond194) R6 Frame(CFA_Y, -1)
          CFI (cfiCond194) CFA_SP SP+4
          CFI (cfiCond194) CFA_Y Y+7
          CFI Block cfiCond195 Using cfiCommon0
          CFI (cfiCond195) Function ??functionSetupWidgets
          CFI (cfiCond195) Conditional ??CrossCallReturnLabel_71
          CFI (cfiCond195) R24 Frame(CFA_Y, -7)
          CFI (cfiCond195) R25 Frame(CFA_Y, -6)
          CFI (cfiCond195) R26 Frame(CFA_Y, -5)
          CFI (cfiCond195) R27 Frame(CFA_Y, -4)
          CFI (cfiCond195) R4 Frame(CFA_Y, -3)
          CFI (cfiCond195) R5 Frame(CFA_Y, -2)
          CFI (cfiCond195) R6 Frame(CFA_Y, -1)
          CFI (cfiCond195) CFA_SP SP+4
          CFI (cfiCond195) CFA_Y Y+7
          CFI Block cfiPicker196 Using cfiCommon2
          CFI (cfiPicker196) NoFunction
          CFI (cfiPicker196) Picker
        LDS     R16, (??activeParmSpace + 7)
        TST     R16
        RET
          CFI EndBlock cfiCond193
          CFI EndBlock cfiCond194
          CFI EndBlock cfiCond195
          CFI EndBlock cfiPicker196

        RSEG CODE:CODE:NOROOT(1)
?Subroutine39:
          CFI Block cfiCond197 Using cfiCommon0
          CFI Function ??functionWidget
          CFI Conditional ??CrossCallReturnLabel_63
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond198 Using cfiCommon0
          CFI (cfiCond198) Function ??functionSetupWidgets
          CFI (cfiCond198) Conditional ??CrossCallReturnLabel_64
          CFI (cfiCond198) R24 Frame(CFA_Y, -7)
          CFI (cfiCond198) R25 Frame(CFA_Y, -6)
          CFI (cfiCond198) R26 Frame(CFA_Y, -5)
          CFI (cfiCond198) R27 Frame(CFA_Y, -4)
          CFI (cfiCond198) R4 Frame(CFA_Y, -3)
          CFI (cfiCond198) R5 Frame(CFA_Y, -2)
          CFI (cfiCond198) R6 Frame(CFA_Y, -1)
          CFI (cfiCond198) CFA_SP SP+4
          CFI (cfiCond198) CFA_Y Y+7
          CFI Block cfiCond199 Using cfiCommon0
          CFI (cfiCond199) Function ??functionSetupWidgets
          CFI (cfiCond199) Conditional ??CrossCallReturnLabel_65
          CFI (cfiCond199) R24 Frame(CFA_Y, -7)
          CFI (cfiCond199) R25 Frame(CFA_Y, -6)
          CFI (cfiCond199) R26 Frame(CFA_Y, -5)
          CFI (cfiCond199) R27 Frame(CFA_Y, -4)
          CFI (cfiCond199) R4 Frame(CFA_Y, -3)
          CFI (cfiCond199) R5 Frame(CFA_Y, -2)
          CFI (cfiCond199) R6 Frame(CFA_Y, -1)
          CFI (cfiCond199) CFA_SP SP+4
          CFI (cfiCond199) CFA_Y Y+7
          CFI Block cfiCond200 Using cfiCommon0
          CFI (cfiCond200) Function ??functionSetupWidgets
          CFI (cfiCond200) Conditional ??CrossCallReturnLabel_66
          CFI (cfiCond200) R24 Frame(CFA_Y, -7)
          CFI (cfiCond200) R25 Frame(CFA_Y, -6)
          CFI (cfiCond200) R26 Frame(CFA_Y, -5)
          CFI (cfiCond200) R27 Frame(CFA_Y, -4)
          CFI (cfiCond200) R4 Frame(CFA_Y, -3)
          CFI (cfiCond200) R5 Frame(CFA_Y, -2)
          CFI (cfiCond200) R6 Frame(CFA_Y, -1)
          CFI (cfiCond200) CFA_SP SP+4
          CFI (cfiCond200) CFA_Y Y+7
          CFI Block cfiPicker201 Using cfiCommon2
          CFI (cfiPicker201) NoFunction
          CFI (cfiPicker201) Picker
        LDS     R16, ??transitionKey
        RET
          CFI EndBlock cfiCond197
          CFI EndBlock cfiCond198
          CFI EndBlock cfiCond199
          CFI EndBlock cfiCond200
          CFI EndBlock cfiPicker201

        RSEG CODE:CODE:NOROOT(1)
?Subroutine38:
          CFI Block cfiCond202 Using cfiCommon0
          CFI Function ??functionSetupWidgets
          CFI Conditional ??CrossCallReturnLabel_61
          CFI R24 Frame(CFA_Y, -7)
          CFI R25 Frame(CFA_Y, -6)
          CFI R26 Frame(CFA_Y, -5)
          CFI R27 Frame(CFA_Y, -4)
          CFI R4 Frame(CFA_Y, -3)
          CFI R5 Frame(CFA_Y, -2)
          CFI R6 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+7
          CFI Block cfiCond203 Using cfiCommon0
          CFI (cfiCond203) Function ??functionSetupWidgets
          CFI (cfiCond203) Conditional ??CrossCallReturnLabel_62
          CFI (cfiCond203) R24 Frame(CFA_Y, -7)
          CFI (cfiCond203) R25 Frame(CFA_Y, -6)
          CFI (cfiCond203) R26 Frame(CFA_Y, -5)
          CFI (cfiCond203) R27 Frame(CFA_Y, -4)
          CFI (cfiCond203) R4 Frame(CFA_Y, -3)
          CFI (cfiCond203) R5 Frame(CFA_Y, -2)
          CFI (cfiCond203) R6 Frame(CFA_Y, -1)
          CFI (cfiCond203) CFA_SP SP+4
          CFI (cfiCond203) CFA_Y Y+7
          CFI Block cfiPicker204 Using cfiCommon2
          CFI (cfiPicker204) NoFunction
          CFI (cfiPicker204) Picker
        LDS     R16, ??transitionKey
        CPI     R16, 2
        BRNE    ??Subroutine38_0
        LDI     R18, 4
        RET
??Subroutine38_0:
        LDI     R18, 1
        RET
          CFI EndBlock cfiCond202
          CFI EndBlock cfiCond203
          CFI EndBlock cfiPicker204

        RSEG CODE:CODE:NOROOT(1)
?Subroutine36:
          CFI Block cfiCond205 Using cfiCommon0
          CFI Function ??functionWidget
          CFI Conditional ??CrossCallReturnLabel_57
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond206 Using cfiCommon0
          CFI (cfiCond206) Function ??functionSetupWidgets
          CFI (cfiCond206) Conditional ??CrossCallReturnLabel_58
          CFI (cfiCond206) R24 Frame(CFA_Y, -7)
          CFI (cfiCond206) R25 Frame(CFA_Y, -6)
          CFI (cfiCond206) R26 Frame(CFA_Y, -5)
          CFI (cfiCond206) R27 Frame(CFA_Y, -4)
          CFI (cfiCond206) R4 Frame(CFA_Y, -3)
          CFI (cfiCond206) R5 Frame(CFA_Y, -2)
          CFI (cfiCond206) R6 Frame(CFA_Y, -1)
          CFI (cfiCond206) CFA_SP SP+4
          CFI (cfiCond206) CFA_Y Y+7
          CFI Block cfiPicker207 Using cfiCommon2
          CFI (cfiPicker207) NoFunction
          CFI (cfiPicker207) Picker
        RCALL   ?Subroutine52
??CrossCallReturnLabel_108:
        MOVW    R31:R30, R1:R0
        SUBI    R30, LOW((-(??menuStack) & 0xFFFF))
        SBCI    R31, (-(??menuStack) & 0xFFFF) >> 8
        LDD     R16, Z+4
        DEC     R16
        RET
          CFI EndBlock cfiCond205
          CFI EndBlock cfiCond206
          CFI EndBlock cfiPicker207

        RSEG CODE:CODE:NOROOT(1)
?Subroutine52:
          CFI Block cfiCond208 Using cfiCommon0
          CFI Function ??functionWidget
          CFI Conditional ??CrossCallReturnLabel_107, ??CrossCallReturnLabel_55
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+6
          CFI CFA_Y Y+4
          CFI Block cfiCond209 Using cfiCommon0
          CFI (cfiCond209) Function ??functionWidget
          CFI (cfiCond209) Conditional ??CrossCallReturnLabel_107, ??CrossCallReturnLabel_56
          CFI (cfiCond209) R24 Frame(CFA_Y, -4)
          CFI (cfiCond209) R25 Frame(CFA_Y, -3)
          CFI (cfiCond209) R26 Frame(CFA_Y, -2)
          CFI (cfiCond209) R27 Frame(CFA_Y, -1)
          CFI (cfiCond209) CFA_SP SP+6
          CFI (cfiCond209) CFA_Y Y+4
          CFI Block cfiCond210 Using cfiCommon0
          CFI (cfiCond210) Function ??functionWidget
          CFI (cfiCond210) Conditional ??CrossCallReturnLabel_108, ??CrossCallReturnLabel_57
          CFI (cfiCond210) R24 Frame(CFA_Y, -4)
          CFI (cfiCond210) R25 Frame(CFA_Y, -3)
          CFI (cfiCond210) R26 Frame(CFA_Y, -2)
          CFI (cfiCond210) R27 Frame(CFA_Y, -1)
          CFI (cfiCond210) CFA_SP SP+6
          CFI (cfiCond210) CFA_Y Y+4
          CFI Block cfiCond211 Using cfiCommon0
          CFI (cfiCond211) Function ??functionSetupWidgets
          CFI (cfiCond211) Conditional ??CrossCallReturnLabel_108, ??CrossCallReturnLabel_58
          CFI (cfiCond211) R24 Frame(CFA_Y, -7)
          CFI (cfiCond211) R25 Frame(CFA_Y, -6)
          CFI (cfiCond211) R26 Frame(CFA_Y, -5)
          CFI (cfiCond211) R27 Frame(CFA_Y, -4)
          CFI (cfiCond211) R4 Frame(CFA_Y, -3)
          CFI (cfiCond211) R5 Frame(CFA_Y, -2)
          CFI (cfiCond211) R6 Frame(CFA_Y, -1)
          CFI (cfiCond211) CFA_SP SP+6
          CFI (cfiCond211) CFA_Y Y+7
          CFI Block cfiPicker212 Using cfiCommon2
          CFI (cfiPicker212) NoFunction
          CFI (cfiPicker212) Picker
        LDS     R17, ??menuStackPos
        LDI     R16, 5
        MUL     R17, R16
        RET
          CFI EndBlock cfiCond208
          CFI EndBlock cfiCond209
          CFI EndBlock cfiCond210
          CFI EndBlock cfiCond211
          CFI EndBlock cfiPicker212

        RSEG CODE:CODE:NOROOT(1)
?Subroutine29:
          CFI Block cfiCond213 Using cfiCommon0
          CFI Function ??displayWidgetCounterName
          CFI Conditional ??CrossCallReturnLabel_100
          CFI R24 Frame(CFA_Y, -6)
          CFI R26 Frame(CFA_Y, -5)
          CFI R27 Frame(CFA_Y, -4)
          CFI R4 Frame(CFA_Y, -3)
          CFI R5 Frame(CFA_Y, -2)
          CFI R6 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+6
          CFI Block cfiCond214 Using cfiCommon0
          CFI (cfiCond214) Function ??displayWidgetCounterName
          CFI (cfiCond214) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond214) R24 Frame(CFA_Y, -6)
          CFI (cfiCond214) R26 Frame(CFA_Y, -5)
          CFI (cfiCond214) R27 Frame(CFA_Y, -4)
          CFI (cfiCond214) R4 Frame(CFA_Y, -3)
          CFI (cfiCond214) R5 Frame(CFA_Y, -2)
          CFI (cfiCond214) R6 Frame(CFA_Y, -1)
          CFI (cfiCond214) CFA_SP SP+4
          CFI (cfiCond214) CFA_Y Y+6
          CFI Block cfiPicker215 Using cfiCommon2
          CFI (cfiPicker215) NoFunction
          CFI (cfiPicker215) Picker
        MOV     R16, R24
          CFI EndBlock cfiCond213
          CFI EndBlock cfiCond214
          CFI EndBlock cfiPicker215
        REQUIRE ?Subroutine49
        ;               // Fall through to label ?Subroutine49

        RSEG CODE:CODE:NOROOT(1)
?Subroutine49:
          CFI Block cfiCond216 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_96, ??CrossCallReturnLabel_35
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+6
          CFI CFA_Y Y+4
          CFI Block cfiCond217 Using cfiCommon0
          CFI (cfiCond217) Function ??displayWidgetBackground
          CFI (cfiCond217) Conditional ??CrossCallReturnLabel_96, ??CrossCallReturnLabel_36
          CFI (cfiCond217) R24 Frame(CFA_Y, -4)
          CFI (cfiCond217) R25 Frame(CFA_Y, -3)
          CFI (cfiCond217) R26 Frame(CFA_Y, -2)
          CFI (cfiCond217) R27 Frame(CFA_Y, -1)
          CFI (cfiCond217) CFA_SP SP+6
          CFI (cfiCond217) CFA_Y Y+4
          CFI Block cfiCond218 Using cfiCommon0
          CFI (cfiCond218) Function ??displayWidgetBackground
          CFI (cfiCond218) Conditional ??CrossCallReturnLabel_96, ??CrossCallReturnLabel_37
          CFI (cfiCond218) R24 Frame(CFA_Y, -4)
          CFI (cfiCond218) R25 Frame(CFA_Y, -3)
          CFI (cfiCond218) R26 Frame(CFA_Y, -2)
          CFI (cfiCond218) R27 Frame(CFA_Y, -1)
          CFI (cfiCond218) CFA_SP SP+6
          CFI (cfiCond218) CFA_Y Y+4
          CFI Block cfiCond219 Using cfiCommon0
          CFI (cfiCond219) Function ??displayWidgetCounterName
          CFI (cfiCond219) Conditional ??CrossCallReturnLabel_100
          CFI (cfiCond219) R24 Frame(CFA_Y, -6)
          CFI (cfiCond219) R26 Frame(CFA_Y, -5)
          CFI (cfiCond219) R27 Frame(CFA_Y, -4)
          CFI (cfiCond219) R4 Frame(CFA_Y, -3)
          CFI (cfiCond219) R5 Frame(CFA_Y, -2)
          CFI (cfiCond219) R6 Frame(CFA_Y, -1)
          CFI (cfiCond219) CFA_SP SP+4
          CFI (cfiCond219) CFA_Y Y+6
          CFI Block cfiCond220 Using cfiCommon0
          CFI (cfiCond220) Function ??displayWidgetCounterName
          CFI (cfiCond220) Conditional ??CrossCallReturnLabel_99
          CFI (cfiCond220) R24 Frame(CFA_Y, -6)
          CFI (cfiCond220) R26 Frame(CFA_Y, -5)
          CFI (cfiCond220) R27 Frame(CFA_Y, -4)
          CFI (cfiCond220) R4 Frame(CFA_Y, -3)
          CFI (cfiCond220) R5 Frame(CFA_Y, -2)
          CFI (cfiCond220) R6 Frame(CFA_Y, -1)
          CFI (cfiCond220) CFA_SP SP+4
          CFI (cfiCond220) CFA_Y Y+6
          CFI Block cfiCond221 Using cfiCommon0
          CFI (cfiCond221) Function ??displayWidgetBackground
          CFI (cfiCond221) Conditional ??CrossCallReturnLabel_98
          CFI (cfiCond221) R24 Frame(CFA_Y, -4)
          CFI (cfiCond221) R25 Frame(CFA_Y, -3)
          CFI (cfiCond221) R26 Frame(CFA_Y, -2)
          CFI (cfiCond221) R27 Frame(CFA_Y, -1)
          CFI (cfiCond221) CFA_SP SP+4
          CFI (cfiCond221) CFA_Y Y+4
          CFI Block cfiCond222 Using cfiCommon0
          CFI (cfiCond222) Function ??functionSetupWidgets
          CFI (cfiCond222) Conditional ??CrossCallReturnLabel_97
          CFI (cfiCond222) R24 Frame(CFA_Y, -7)
          CFI (cfiCond222) R25 Frame(CFA_Y, -6)
          CFI (cfiCond222) R26 Frame(CFA_Y, -5)
          CFI (cfiCond222) R27 Frame(CFA_Y, -4)
          CFI (cfiCond222) R4 Frame(CFA_Y, -3)
          CFI (cfiCond222) R5 Frame(CFA_Y, -2)
          CFI (cfiCond222) R6 Frame(CFA_Y, -1)
          CFI (cfiCond222) CFA_SP SP+4
          CFI (cfiCond222) CFA_Y Y+7
          CFI Block cfiCond223 Using cfiCommon0
          CFI (cfiCond223) Function ??displayWidgetBackground
          CFI (cfiCond223) Conditional ??CrossCallReturnLabel_101, ??CrossCallReturnLabel_32
          CFI (cfiCond223) R24 Frame(CFA_Y, -4)
          CFI (cfiCond223) R25 Frame(CFA_Y, -3)
          CFI (cfiCond223) R26 Frame(CFA_Y, -2)
          CFI (cfiCond223) R27 Frame(CFA_Y, -1)
          CFI (cfiCond223) CFA_SP SP+6
          CFI (cfiCond223) CFA_Y Y+4
          CFI Block cfiCond224 Using cfiCommon0
          CFI (cfiCond224) Function ??functionSetupWidgets
          CFI (cfiCond224) Conditional ??CrossCallReturnLabel_101, ??CrossCallReturnLabel_33
          CFI (cfiCond224) R24 Frame(CFA_Y, -7)
          CFI (cfiCond224) R25 Frame(CFA_Y, -6)
          CFI (cfiCond224) R26 Frame(CFA_Y, -5)
          CFI (cfiCond224) R27 Frame(CFA_Y, -4)
          CFI (cfiCond224) R4 Frame(CFA_Y, -3)
          CFI (cfiCond224) R5 Frame(CFA_Y, -2)
          CFI (cfiCond224) R6 Frame(CFA_Y, -1)
          CFI (cfiCond224) CFA_SP SP+6
          CFI (cfiCond224) CFA_Y Y+7
          CFI Block cfiCond225 Using cfiCommon0
          CFI (cfiCond225) Function ??functionSetupWidgets
          CFI (cfiCond225) Conditional ??CrossCallReturnLabel_101, ??CrossCallReturnLabel_34
          CFI (cfiCond225) R24 Frame(CFA_Y, -7)
          CFI (cfiCond225) R25 Frame(CFA_Y, -6)
          CFI (cfiCond225) R26 Frame(CFA_Y, -5)
          CFI (cfiCond225) R27 Frame(CFA_Y, -4)
          CFI (cfiCond225) R4 Frame(CFA_Y, -3)
          CFI (cfiCond225) R5 Frame(CFA_Y, -2)
          CFI (cfiCond225) R6 Frame(CFA_Y, -1)
          CFI (cfiCond225) CFA_SP SP+6
          CFI (cfiCond225) CFA_Y Y+7
          CFI Block cfiPicker226 Using cfiCommon2
          CFI (cfiPicker226) NoFunction
          CFI (cfiPicker226) Picker
        LDI     R17, 0
        CALL    ??getString
        MOVW    R21:R20, R17:R16
        MOV     R22, R18
        RET
          CFI EndBlock cfiCond216
          CFI EndBlock cfiCond217
          CFI EndBlock cfiCond218
          CFI EndBlock cfiCond219
          CFI EndBlock cfiCond220
          CFI EndBlock cfiCond221
          CFI EndBlock cfiCond222
          CFI EndBlock cfiCond223
          CFI EndBlock cfiCond224
          CFI EndBlock cfiCond225
          CFI EndBlock cfiPicker226

        RSEG CODE:CODE:NOROOT(1)
?Subroutine25:
          CFI Block cfiCond227 Using cfiCommon0
          CFI Function ??displayWidgetCounterValue
          CFI Conditional ??CrossCallReturnLabel_39
          CFI R24 Frame(CFA_Y, -16)
          CFI R25 Frame(CFA_Y, -15)
          CFI R26 Frame(CFA_Y, -14)
          CFI R27 Frame(CFA_Y, -13)
          CFI R4 Frame(CFA_Y, -12)
          CFI R5 Frame(CFA_Y, -11)
          CFI R6 Frame(CFA_Y, -10)
          CFI R7 Frame(CFA_Y, -9)
          CFI R8 Frame(CFA_Y, -8)
          CFI R9 Frame(CFA_Y, -7)
          CFI R10 Frame(CFA_Y, -6)
          CFI R11 Frame(CFA_Y, -5)
          CFI R12 Frame(CFA_Y, -4)
          CFI R13 Frame(CFA_Y, -3)
          CFI R14 Frame(CFA_Y, -2)
          CFI R15 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+17
          CFI Block cfiCond228 Using cfiCommon0
          CFI (cfiCond228) Function ??functionSetupWidgets
          CFI (cfiCond228) Conditional ??CrossCallReturnLabel_38
          CFI (cfiCond228) R24 Frame(CFA_Y, -7)
          CFI (cfiCond228) R25 Frame(CFA_Y, -6)
          CFI (cfiCond228) R26 Frame(CFA_Y, -5)
          CFI (cfiCond228) R27 Frame(CFA_Y, -4)
          CFI (cfiCond228) R4 Frame(CFA_Y, -3)
          CFI (cfiCond228) R5 Frame(CFA_Y, -2)
          CFI (cfiCond228) R6 Frame(CFA_Y, -1)
          CFI (cfiCond228) CFA_SP SP+4
          CFI (cfiCond228) CFA_Y Y+7
          CFI Block cfiPicker229 Using cfiCommon2
          CFI (cfiPicker229) NoFunction
          CFI (cfiPicker229) Picker
        LDI     R19, 1
        LDI     R18, 0
        LDI     R17, 0
        LDI     R16, 12
        JMP     ??refreshDisplay
          CFI EndBlock cfiCond227
          CFI EndBlock cfiCond228
          CFI EndBlock cfiPicker229

        RSEG CODE:CODE:NOROOT(1)
?Subroutine23:
          CFI Block cfiCond230 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_32
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond231 Using cfiCommon0
          CFI (cfiCond231) Function ??functionSetupWidgets
          CFI (cfiCond231) Conditional ??CrossCallReturnLabel_33
          CFI (cfiCond231) R24 Frame(CFA_Y, -7)
          CFI (cfiCond231) R25 Frame(CFA_Y, -6)
          CFI (cfiCond231) R26 Frame(CFA_Y, -5)
          CFI (cfiCond231) R27 Frame(CFA_Y, -4)
          CFI (cfiCond231) R4 Frame(CFA_Y, -3)
          CFI (cfiCond231) R5 Frame(CFA_Y, -2)
          CFI (cfiCond231) R6 Frame(CFA_Y, -1)
          CFI (cfiCond231) CFA_SP SP+4
          CFI (cfiCond231) CFA_Y Y+7
          CFI Block cfiCond232 Using cfiCommon0
          CFI (cfiCond232) Function ??functionSetupWidgets
          CFI (cfiCond232) Conditional ??CrossCallReturnLabel_34
          CFI (cfiCond232) R24 Frame(CFA_Y, -7)
          CFI (cfiCond232) R25 Frame(CFA_Y, -6)
          CFI (cfiCond232) R26 Frame(CFA_Y, -5)
          CFI (cfiCond232) R27 Frame(CFA_Y, -4)
          CFI (cfiCond232) R4 Frame(CFA_Y, -3)
          CFI (cfiCond232) R5 Frame(CFA_Y, -2)
          CFI (cfiCond232) R6 Frame(CFA_Y, -1)
          CFI (cfiCond232) CFA_SP SP+4
          CFI (cfiCond232) CFA_Y Y+7
          CFI Block cfiPicker233 Using cfiCommon2
          CFI (cfiPicker233) NoFunction
          CFI (cfiPicker233) Picker
        RCALL   ?Subroutine49
??CrossCallReturnLabel_101:
        LDI     R18, 0
        LDI     R17, 0
        RET
          CFI EndBlock cfiCond230
          CFI EndBlock cfiCond231
          CFI EndBlock cfiCond232
          CFI EndBlock cfiPicker233

        RSEG CODE:CODE:NOROOT(1)
?Subroutine17:
          CFI Block cfiCond234 Using cfiCommon0
          CFI Function ??functionSetupWidgets
          CFI Conditional ??CrossCallReturnLabel_22
          CFI R24 Frame(CFA_Y, -7)
          CFI R25 Frame(CFA_Y, -6)
          CFI R26 Frame(CFA_Y, -5)
          CFI R27 Frame(CFA_Y, -4)
          CFI R4 Frame(CFA_Y, -3)
          CFI R5 Frame(CFA_Y, -2)
          CFI R6 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+7
          CFI Block cfiCond235 Using cfiCommon0
          CFI (cfiCond235) Function ??functionSetupWidgets
          CFI (cfiCond235) Conditional ??CrossCallReturnLabel_23
          CFI (cfiCond235) R24 Frame(CFA_Y, -7)
          CFI (cfiCond235) R25 Frame(CFA_Y, -6)
          CFI (cfiCond235) R26 Frame(CFA_Y, -5)
          CFI (cfiCond235) R27 Frame(CFA_Y, -4)
          CFI (cfiCond235) R4 Frame(CFA_Y, -3)
          CFI (cfiCond235) R5 Frame(CFA_Y, -2)
          CFI (cfiCond235) R6 Frame(CFA_Y, -1)
          CFI (cfiCond235) CFA_SP SP+4
          CFI (cfiCond235) CFA_Y Y+7
          CFI Block cfiPicker236 Using cfiCommon2
          CFI (cfiPicker236) NoFunction
          CFI (cfiPicker236) Picker
        LDI     R20, 7
        LDI     R21, 0
        JMP     ?ML_SRAM_SRAM_16_L07
          CFI EndBlock cfiCond234
          CFI EndBlock cfiCond235
          CFI EndBlock cfiPicker236

        RSEG CODE:CODE:NOROOT(1)
?Subroutine51:
          CFI Block cfiCond237 Using cfiCommon0
          CFI Function ??scheduleWidgetStatisticOperation
          CFI Conditional ??CrossCallReturnLabel_106
          CFI R26 Frame(CFA_Y, -6)
          CFI R27 Frame(CFA_Y, -5)
          CFI R4 Frame(CFA_Y, -4)
          CFI R5 Frame(CFA_Y, -3)
          CFI R6 Frame(CFA_Y, -2)
          CFI R7 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+6
          CFI Block cfiCond238 Using cfiCommon0
          CFI (cfiCond238) Function ??displayWidgetCounterValue
          CFI (cfiCond238) Conditional ??CrossCallReturnLabel_106, ??CrossCallReturnLabel_21
          CFI (cfiCond238) R26 Frame(CFA_Y, -14)
          CFI (cfiCond238) R27 Frame(CFA_Y, -13)
          CFI (cfiCond238) R4 Frame(CFA_Y, -12)
          CFI (cfiCond238) R5 Frame(CFA_Y, -11)
          CFI (cfiCond238) R6 Frame(CFA_Y, -10)
          CFI (cfiCond238) R7 Frame(CFA_Y, -9)
          CFI (cfiCond238) R8 Frame(CFA_Y, -8)
          CFI (cfiCond238) R9 Frame(CFA_Y, -7)
          CFI (cfiCond238) R10 Frame(CFA_Y, -6)
          CFI (cfiCond238) R11 Frame(CFA_Y, -5)
          CFI (cfiCond238) R12 Frame(CFA_Y, -4)
          CFI (cfiCond238) R13 Frame(CFA_Y, -3)
          CFI (cfiCond238) R14 Frame(CFA_Y, -2)
          CFI (cfiCond238) R15 Frame(CFA_Y, -1)
          CFI (cfiCond238) CFA_SP SP+6
          CFI (cfiCond238) CFA_Y Y+14
          CFI Block cfiBlock239 Using cfiCommon0
          CFI (cfiBlock239) NoFunction
          CFI (cfiBlock239) CFA_Y Y+5
          CFI (cfiBlock239) R4 Frame(CFA_Y, -3)
          CFI (cfiBlock239) R5 Frame(CFA_Y, -2)
          CFI (cfiBlock239) R6 Frame(CFA_Y, -1)
          CFI (cfiBlock239) R26 Frame(CFA_Y, -5)
          CFI (cfiBlock239) R27 Frame(CFA_Y, -4)
          CFI Block cfiPicker240 Using cfiCommon2
          CFI (cfiPicker240) NoFunction
          CFI (cfiPicker240) Picker
        LD      R26, Y+
          CFI (cfiCond237) R26 SameValue
          CFI (cfiCond237) CFA_Y Y+5
          CFI (cfiCond238) R26 SameValue
          CFI (cfiCond238) CFA_Y Y+13
          CFI (cfiBlock239) CFA_Y Y+4
          CFI (cfiBlock239) R26 SameValue
        LD      R27, Y+
          CFI (cfiCond237) R27 SameValue
          CFI (cfiCond237) CFA_Y Y+4
          CFI (cfiCond238) R27 SameValue
          CFI (cfiCond238) CFA_Y Y+12
          CFI (cfiBlock239) CFA_Y Y+3
          CFI (cfiBlock239) R27 SameValue
        LD      R4, Y+
          CFI (cfiCond237) R4 SameValue
          CFI (cfiCond237) CFA_Y Y+3
          CFI (cfiCond238) R4 SameValue
          CFI (cfiCond238) CFA_Y Y+11
          CFI (cfiBlock239) CFA_Y Y+2
          CFI (cfiBlock239) R4 SameValue
        LD      R5, Y+
          CFI (cfiCond237) R5 SameValue
          CFI (cfiCond237) CFA_Y Y+2
          CFI (cfiCond238) R5 SameValue
          CFI (cfiCond238) CFA_Y Y+10
          CFI (cfiBlock239) CFA_Y Y+1
          CFI (cfiBlock239) R5 SameValue
        LD      R6, Y+
          CFI (cfiCond237) R6 SameValue
          CFI (cfiCond237) CFA_Y Y+1
          CFI (cfiCond238) R6 SameValue
          CFI (cfiCond238) CFA_Y Y+9
          CFI (cfiBlock239) CFA_Y Y+0
          CFI (cfiBlock239) R6 SameValue
        RET
          CFI EndBlock cfiCond237
          CFI EndBlock cfiCond238
          CFI EndBlock cfiBlock239
          CFI EndBlock cfiPicker240

        RSEG CODE:CODE:NOROOT(1)
?Subroutine14:
          CFI Block cfiCond241 Using cfiCommon0
          CFI Function ??functionSetupWidgets
          CFI Conditional ??CrossCallReturnLabel_138
          CFI R24 Frame(CFA_Y, -7)
          CFI R25 Frame(CFA_Y, -6)
          CFI R26 Frame(CFA_Y, -5)
          CFI R27 Frame(CFA_Y, -4)
          CFI R4 Frame(CFA_Y, -3)
          CFI R5 Frame(CFA_Y, -2)
          CFI R6 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+7
          CFI Block cfiCond242 Using cfiCommon0
          CFI (cfiCond242) Function ??functionSetupWidgets
          CFI (cfiCond242) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond242) R24 Frame(CFA_Y, -7)
          CFI (cfiCond242) R25 Frame(CFA_Y, -6)
          CFI (cfiCond242) R26 Frame(CFA_Y, -5)
          CFI (cfiCond242) R27 Frame(CFA_Y, -4)
          CFI (cfiCond242) R4 Frame(CFA_Y, -3)
          CFI (cfiCond242) R5 Frame(CFA_Y, -2)
          CFI (cfiCond242) R6 Frame(CFA_Y, -1)
          CFI (cfiCond242) CFA_SP SP+4
          CFI (cfiCond242) CFA_Y Y+7
          CFI Block cfiPicker243 Using cfiCommon2
          CFI (cfiPicker243) NoFunction
          CFI (cfiPicker243) Picker
        LDI     R17, 0
        ADD     R16, R18
        ADC     R17, R17
        LDI     R20, 5
          CFI EndBlock cfiCond241
          CFI EndBlock cfiCond242
          CFI EndBlock cfiPicker243
        REQUIRE ??Subroutine61_0
        ;               // Fall through to label ??Subroutine61_0

        RSEG CODE:CODE:NOROOT(1)
??Subroutine61_0:
          CFI Block cfiCond244 Using cfiCommon0
          CFI Function ??functionSetupWidgets
          CFI Conditional ??CrossCallReturnLabel_137
          CFI R24 Frame(CFA_Y, -7)
          CFI R25 Frame(CFA_Y, -6)
          CFI R26 Frame(CFA_Y, -5)
          CFI R27 Frame(CFA_Y, -4)
          CFI R4 Frame(CFA_Y, -3)
          CFI R5 Frame(CFA_Y, -2)
          CFI R6 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+7
          CFI Block cfiCond245 Using cfiCommon0
          CFI (cfiCond245) Function ??functionSetupWidgets
          CFI (cfiCond245) Conditional ??CrossCallReturnLabel_138
          CFI (cfiCond245) R24 Frame(CFA_Y, -7)
          CFI (cfiCond245) R25 Frame(CFA_Y, -6)
          CFI (cfiCond245) R26 Frame(CFA_Y, -5)
          CFI (cfiCond245) R27 Frame(CFA_Y, -4)
          CFI (cfiCond245) R4 Frame(CFA_Y, -3)
          CFI (cfiCond245) R5 Frame(CFA_Y, -2)
          CFI (cfiCond245) R6 Frame(CFA_Y, -1)
          CFI (cfiCond245) CFA_SP SP+4
          CFI (cfiCond245) CFA_Y Y+7
          CFI Block cfiCond246 Using cfiCommon0
          CFI (cfiCond246) Function ??functionSetupWidgets
          CFI (cfiCond246) Conditional ??CrossCallReturnLabel_139
          CFI (cfiCond246) R24 Frame(CFA_Y, -7)
          CFI (cfiCond246) R25 Frame(CFA_Y, -6)
          CFI (cfiCond246) R26 Frame(CFA_Y, -5)
          CFI (cfiCond246) R27 Frame(CFA_Y, -4)
          CFI (cfiCond246) R4 Frame(CFA_Y, -3)
          CFI (cfiCond246) R5 Frame(CFA_Y, -2)
          CFI (cfiCond246) R6 Frame(CFA_Y, -1)
          CFI (cfiCond246) CFA_SP SP+4
          CFI (cfiCond246) CFA_Y Y+7
          CFI Block cfiPicker247 Using cfiCommon2
          CFI (cfiPicker247) NoFunction
          CFI (cfiPicker247) Picker
        LDI     R21, 0
        JMP     ?SS_DIVMOD_L02
          CFI EndBlock cfiCond244
          CFI EndBlock cfiCond245
          CFI EndBlock cfiCond246
          CFI EndBlock cfiPicker247

        RSEG CODE:CODE:NOROOT(1)
?Subroutine9:
          CFI Block cfiCond248 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_88
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond249 Using cfiCommon0
          CFI (cfiCond249) Function ??functionSetupWidgets
          CFI (cfiCond249) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond249) R24 Frame(CFA_Y, -7)
          CFI (cfiCond249) R25 Frame(CFA_Y, -6)
          CFI (cfiCond249) R26 Frame(CFA_Y, -5)
          CFI (cfiCond249) R27 Frame(CFA_Y, -4)
          CFI (cfiCond249) R4 Frame(CFA_Y, -3)
          CFI (cfiCond249) R5 Frame(CFA_Y, -2)
          CFI (cfiCond249) R6 Frame(CFA_Y, -1)
          CFI (cfiCond249) CFA_SP SP+4
          CFI (cfiCond249) CFA_Y Y+7
          CFI Block cfiPicker250 Using cfiCommon2
          CFI (cfiPicker250) NoFunction
          CFI (cfiPicker250) Picker
        LDI     R16, 0
          CFI EndBlock cfiCond248
          CFI EndBlock cfiCond249
          CFI EndBlock cfiPicker250
        REQUIRE ?Subroutine47
        ;               // Fall through to label ?Subroutine47

        RSEG CODE:CODE:NOROOT(1)
?Subroutine47:
          CFI Block cfiCond251 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_91
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+4
          CFI Block cfiCond252 Using cfiCommon0
          CFI (cfiCond252) Function ??displayWidgetBackground
          CFI (cfiCond252) Conditional ??CrossCallReturnLabel_90
          CFI (cfiCond252) R24 Frame(CFA_Y, -4)
          CFI (cfiCond252) R25 Frame(CFA_Y, -3)
          CFI (cfiCond252) R26 Frame(CFA_Y, -2)
          CFI (cfiCond252) R27 Frame(CFA_Y, -1)
          CFI (cfiCond252) CFA_SP SP+4
          CFI (cfiCond252) CFA_Y Y+4
          CFI Block cfiCond253 Using cfiCommon0
          CFI (cfiCond253) Function ??displayWidgetCounterName
          CFI (cfiCond253) Conditional ??CrossCallReturnLabel_51
          CFI (cfiCond253) R24 Frame(CFA_Y, -6)
          CFI (cfiCond253) R26 Frame(CFA_Y, -5)
          CFI (cfiCond253) R27 Frame(CFA_Y, -4)
          CFI (cfiCond253) R4 Frame(CFA_Y, -3)
          CFI (cfiCond253) R5 Frame(CFA_Y, -2)
          CFI (cfiCond253) R6 Frame(CFA_Y, -1)
          CFI (cfiCond253) CFA_SP SP+4
          CFI (cfiCond253) CFA_Y Y+6
          CFI Block cfiCond254 Using cfiCommon0
          CFI (cfiCond254) Function ??displayWidgetCounterName
          CFI (cfiCond254) Conditional ??CrossCallReturnLabel_52
          CFI (cfiCond254) R24 Frame(CFA_Y, -6)
          CFI (cfiCond254) R26 Frame(CFA_Y, -5)
          CFI (cfiCond254) R27 Frame(CFA_Y, -4)
          CFI (cfiCond254) R4 Frame(CFA_Y, -3)
          CFI (cfiCond254) R5 Frame(CFA_Y, -2)
          CFI (cfiCond254) R6 Frame(CFA_Y, -1)
          CFI (cfiCond254) CFA_SP SP+4
          CFI (cfiCond254) CFA_Y Y+6
          CFI Block cfiCond255 Using cfiCommon0
          CFI (cfiCond255) Function ??displayWidgetBackground
          CFI (cfiCond255) Conditional ??CrossCallReturnLabel_88
          CFI (cfiCond255) R24 Frame(CFA_Y, -4)
          CFI (cfiCond255) R25 Frame(CFA_Y, -3)
          CFI (cfiCond255) R26 Frame(CFA_Y, -2)
          CFI (cfiCond255) R27 Frame(CFA_Y, -1)
          CFI (cfiCond255) CFA_SP SP+4
          CFI (cfiCond255) CFA_Y Y+4
          CFI Block cfiCond256 Using cfiCommon0
          CFI (cfiCond256) Function ??functionSetupWidgets
          CFI (cfiCond256) Conditional ??CrossCallReturnLabel_89
          CFI (cfiCond256) R24 Frame(CFA_Y, -7)
          CFI (cfiCond256) R25 Frame(CFA_Y, -6)
          CFI (cfiCond256) R26 Frame(CFA_Y, -5)
          CFI (cfiCond256) R27 Frame(CFA_Y, -4)
          CFI (cfiCond256) R4 Frame(CFA_Y, -3)
          CFI (cfiCond256) R5 Frame(CFA_Y, -2)
          CFI (cfiCond256) R6 Frame(CFA_Y, -1)
          CFI (cfiCond256) CFA_SP SP+4
          CFI (cfiCond256) CFA_Y Y+7
          CFI Block cfiCond257 Using cfiCommon0
          CFI (cfiCond257) Function ??functionSetupWidgets
          CFI (cfiCond257) Conditional ??CrossCallReturnLabel_6
          CFI (cfiCond257) R24 Frame(CFA_Y, -7)
          CFI (cfiCond257) R25 Frame(CFA_Y, -6)
          CFI (cfiCond257) R26 Frame(CFA_Y, -5)
          CFI (cfiCond257) R27 Frame(CFA_Y, -4)
          CFI (cfiCond257) R4 Frame(CFA_Y, -3)
          CFI (cfiCond257) R5 Frame(CFA_Y, -2)
          CFI (cfiCond257) R6 Frame(CFA_Y, -1)
          CFI (cfiCond257) CFA_SP SP+4
          CFI (cfiCond257) CFA_Y Y+7
          CFI Block cfiCond258 Using cfiCommon0
          CFI (cfiCond258) Function ??functionSetupWidgets
          CFI (cfiCond258) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond258) R24 Frame(CFA_Y, -7)
          CFI (cfiCond258) R25 Frame(CFA_Y, -6)
          CFI (cfiCond258) R26 Frame(CFA_Y, -5)
          CFI (cfiCond258) R27 Frame(CFA_Y, -4)
          CFI (cfiCond258) R4 Frame(CFA_Y, -3)
          CFI (cfiCond258) R5 Frame(CFA_Y, -2)
          CFI (cfiCond258) R6 Frame(CFA_Y, -1)
          CFI (cfiCond258) CFA_SP SP+4
          CFI (cfiCond258) CFA_Y Y+7
          CFI Block cfiPicker259 Using cfiCommon2
          CFI (cfiPicker259) NoFunction
          CFI (cfiPicker259) Picker
        JMP     ??str2Buf
          CFI EndBlock cfiCond251
          CFI EndBlock cfiCond252
          CFI EndBlock cfiCond253
          CFI EndBlock cfiCond254
          CFI EndBlock cfiCond255
          CFI EndBlock cfiCond256
          CFI EndBlock cfiCond257
          CFI EndBlock cfiCond258
          CFI EndBlock cfiPicker259

        RSEG CODE:CODE:NOROOT(1)
?Subroutine5:
          CFI Block cfiCond260 Using cfiCommon0
          CFI Function ??functionSetupWidgets
          CFI Conditional ??CrossCallReturnLabel_6
          CFI R24 Frame(CFA_Y, -7)
          CFI R25 Frame(CFA_Y, -6)
          CFI R26 Frame(CFA_Y, -5)
          CFI R27 Frame(CFA_Y, -4)
          CFI R4 Frame(CFA_Y, -3)
          CFI R5 Frame(CFA_Y, -2)
          CFI R6 Frame(CFA_Y, -1)
          CFI CFA_SP SP+4
          CFI CFA_Y Y+7
          CFI Block cfiCond261 Using cfiCommon0
          CFI (cfiCond261) Function ??functionSetupWidgets
          CFI (cfiCond261) Conditional ??CrossCallReturnLabel_7
          CFI (cfiCond261) R24 Frame(CFA_Y, -7)
          CFI (cfiCond261) R25 Frame(CFA_Y, -6)
          CFI (cfiCond261) R26 Frame(CFA_Y, -5)
          CFI (cfiCond261) R27 Frame(CFA_Y, -4)
          CFI (cfiCond261) R4 Frame(CFA_Y, -3)
          CFI (cfiCond261) R5 Frame(CFA_Y, -2)
          CFI (cfiCond261) R6 Frame(CFA_Y, -1)
          CFI (cfiCond261) CFA_SP SP+4
          CFI (cfiCond261) CFA_Y Y+7
          CFI Block cfiPicker262 Using cfiCommon2
          CFI (cfiPicker262) NoFunction
          CFI (cfiPicker262) Picker
        LDI     R16, 1
        RJMP    ?Subroutine47
          CFI EndBlock cfiCond260
          CFI EndBlock cfiCond261
          CFI EndBlock cfiPicker262

        RSEG CODE:CODE:NOROOT(1)
?Subroutine46:
          CFI Block cfiCond263 Using cfiCommon0
          CFI Function ??displayWidgetBackground
          CFI Conditional ??CrossCallReturnLabel_85, ??CrossCallReturnLabel_4
          CFI R24 Frame(CFA_Y, -4)
          CFI R25 Frame(CFA_Y, -3)
          CFI R26 Frame(CFA_Y, -2)
          CFI R27 Frame(CFA_Y, -1)
          CFI CFA_SP SP+6
          CFI CFA_Y Y+4
          CFI Block cfiCond264 Using cfiCommon0
          CFI (cfiCond264) Function ??displayWidgetBackground
          CFI (cfiCond264) Conditional ??CrossCallReturnLabel_85, ??CrossCallReturnLabel_5
          CFI (cfiCond264) R24 Frame(CFA_Y, -4)
          CFI (cfiCond264) R25 Frame(CFA_Y, -3)
          CFI (cfiCond264) R26 Frame(CFA_Y, -2)
          CFI (cfiCond264) R27 Frame(CFA_Y, -1)
          CFI (cfiCond264) CFA_SP SP+6
          CFI (cfiCond264) CFA_Y Y+4
          CFI Block cfiCond265 Using cfiCommon0
          CFI (cfiCond265) Function ??displayWidgetBackground
          CFI (cfiCond265) Conditional ??CrossCallReturnLabel_87
          CFI (cfiCond265) R24 Frame(CFA_Y, -4)
          CFI (cfiCond265) R25 Frame(CFA_Y, -3)
          CFI (cfiCond265) R26 Frame(CFA_Y, -2)
          CFI (cfiCond265) R27 Frame(CFA_Y, -1)
          CFI (cfiCond265) CFA_SP SP+4
          CFI (cfiCond265) CFA_Y Y+4
          CFI Block cfiCond266 Using cfiCommon0
          CFI (cfiCond266) Function ??functionSetupWidgets
          CFI (cfiCond266) Conditional ??CrossCallReturnLabel_86
          CFI (cfiCond266) R24 Frame(CFA_Y, -7)
          CFI (cfiCond266) R25 Frame(CFA_Y, -6)
          CFI (cfiCond266) R26 Frame(CFA_Y, -5)
          CFI (cfiCond266) R27 Frame(CFA_Y, -4)
          CFI (cfiCond266) R4 Frame(CFA_Y, -3)
          CFI (cfiCond266) R5 Frame(CFA_Y, -2)
          CFI (cfiCond266) R6 Frame(CFA_Y, -1)
          CFI (cfiCond266) CFA_SP SP+4
          CFI (cfiCond266) CFA_Y Y+7
          CFI Block cfiPicker267 Using cfiCommon2
          CFI (cfiPicker267) NoFunction
          CFI (cfiPicker267) Picker
        LDI     R16, 1
        RJMP    ?Subroutine53
          CFI EndBlock cfiCond263
          CFI EndBlock cfiCond264
          CFI EndBlock cfiCond265
          CFI EndBlock cfiCond266
          CFI EndBlock cfiPicker267

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,020H
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,021H
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,022H
__?EEARH:

        END
//  960 }
//  961 
//  962 #endif
// 
// 3 104 bytes in segment CODE
// 
// 3 052 bytes of CODE memory (+ 52 bytes shared)
//
//Errors: none
//Warnings: none
