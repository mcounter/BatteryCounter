///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V6.12.1.50500 for Atmel AVR       02/Aug/2014  01:50:55 /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    Source file  =  D:\Projects\BatteryCounter\_micro\BattRX\Timer0Handler. /
//                    cpp                                                     /
//    Command line =  D:\Projects\BatteryCounter\_micro\BattRX\Timer0Handler. /
//                    cpp --cpu=m328p -ms -o "D:\Projects\BatteryCounter\_mic /
//                    ro\BattRX\Release - Atmega328P\Obj\" -D NDEBUG -lA      /
//                    "D:\Projects\BatteryCounter\_micro\BattRX\Release -     /
//                    Atmega328P\List\" --initializers_in_flash               /
//                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e             /
//                    --eeprom_size 1024 --dlib --dlib_config "C:\Program     /
//                    Files (x86)\IAR Systems\Embedded Workbench              /
//                    6.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-sf-n.h" --eec++ -Ohs   /
//    List file    =  D:\Projects\BatteryCounter\_micro\BattRX\Release -      /
//                    Atmega328P\List\Timer0Handler.s90                       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME Timer0Handler

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__cpu", "3"
        RTMODEL "__cpu_name", "ATmega328P"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ?need_segment_init

        PUBWEAK `?<Segment init: NEAR_Z>`
        PUBLIC ??disable
        FUNCTION ??disable,0203H
        ARGFRAME RSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??enable
        FUNCTION ??enable,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??enabled
        FUNCTION ??enabled,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??init
        FUNCTION ??init,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 1, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??irqTimer0
        FUNCTION ??irqTimer0,021233H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 15, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBWEAK `??irqTimer0??INTVEC 56`
        PUBLIC ??isEnabled
        PUBWEAK _A_OCR0A
        PUBWEAK _A_OCR0B
        PUBWEAK _A_TCCR0A
        PUBWEAK _A_TCCR0B
        PUBWEAK _A_TCNT0
        PUBWEAK _A_TIMSK0
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 SameValue
          CFI R17 SameValue
          CFI R18 SameValue
          CFI R19 SameValue
          CFI R20 SameValue
          CFI R21 SameValue
          CFI R22 SameValue
          CFI R23 SameValue
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 SameValue
          CFI R31 SameValue
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon1
        
`?<Name Timer0Handler 7>` SYMBOL "Timer0Handler"

`??irqTimer0??INTVEC 56` SYMBOL "??INTVEC 56", ??irqTimer0
??isEnabled         SYMBOL "isEnabled", `?<Name Timer0Handler 7>`

        EXTERN ??processIdleTime
        FUNCTION ??processIdleTime,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??tick
        FUNCTION ??tick,0202H
        ARGFRAME RSTACK, 0, STACK

// D:\Projects\BatteryCounter\_micro\BattRX\Timer0Handler.cpp
//    1 #ifndef __TIMER0HANDLER_CPP_
//    2 #define __TIMER0HANDLER_CPP_
//    3 
//    4 #include "Timer0Handler.h"

        ASEGN ABSOLUTE:DATA:NOROOT,06eH
// union <unnamed> volatile __io _A_TIMSK0
_A_TIMSK0:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,048H
// union <unnamed> volatile __io _A_OCR0B
_A_OCR0B:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,047H
// union <unnamed> volatile __io _A_OCR0A
_A_OCR0A:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,046H
// union <unnamed> volatile __io _A_TCNT0
_A_TCNT0:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,045H
// union <unnamed> volatile __io _A_TCCR0B
_A_TCCR0B:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,044H
// union <unnamed> volatile __io _A_TCCR0A
_A_TCCR0A:
        DS8 1
//    5 #include "MultyThreading.h"
//    6 #include "PhotoSensor.h"
//    7 
//    8 namespace Timer0Handler
//    9 {

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   10   bool isEnabled = false;
??isEnabled:
        DS8 1
//   11 
//   12   #pragma vector=TIMER0_COMPA_vect

        RSEG CODE:CODE:NOROOT(1)
//   13   __interrupt void irqTimer0()
??irqTimer0:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ??irqTimer0
//   14   {
        FUNCALL ??irqTimer0, ??tick
        LOCFRAME CSTACK, 15, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??irqTimer0, ??processIdleTime
        LOCFRAME CSTACK, 15, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        ST      -Y, R24
          CFI R24 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R31
          CFI R31 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
        ST      -Y, R30
          CFI R30 Frame(CFA_Y, -3)
          CFI CFA_Y Y+3
        ST      -Y, R3
          CFI R3 Frame(CFA_Y, -4)
          CFI CFA_Y Y+4
        ST      -Y, R2
          CFI R2 Frame(CFA_Y, -5)
          CFI CFA_Y Y+5
        ST      -Y, R1
          CFI R1 Frame(CFA_Y, -6)
          CFI CFA_Y Y+6
        ST      -Y, R0
          CFI R0 Frame(CFA_Y, -7)
          CFI CFA_Y Y+7
        ST      -Y, R23
          CFI R23 Frame(CFA_Y, -8)
          CFI CFA_Y Y+8
        ST      -Y, R22
          CFI R22 Frame(CFA_Y, -9)
          CFI CFA_Y Y+9
        ST      -Y, R21
          CFI R21 Frame(CFA_Y, -10)
          CFI CFA_Y Y+10
        ST      -Y, R20
          CFI R20 Frame(CFA_Y, -11)
          CFI CFA_Y Y+11
        ST      -Y, R19
          CFI R19 Frame(CFA_Y, -12)
          CFI CFA_Y Y+12
        ST      -Y, R18
          CFI R18 Frame(CFA_Y, -13)
          CFI CFA_Y Y+13
        ST      -Y, R17
          CFI R17 Frame(CFA_Y, -14)
          CFI CFA_Y Y+14
        ST      -Y, R16
          CFI R16 Frame(CFA_Y, -15)
          CFI CFA_Y Y+15
        IN      R24, 0x3F
//   15     GLOBAL::MultyThreading::tick();
        CALL    ??tick
//   16     PhotoSensor::processIdleTime();
        CALL    ??processIdleTime
//   17   }
        OUT     0x3F, R24
        LD      R16, Y+
          CFI R16 SameValue
          CFI CFA_Y Y+14
        LD      R17, Y+
          CFI R17 SameValue
          CFI CFA_Y Y+13
        LD      R18, Y+
          CFI R18 SameValue
          CFI CFA_Y Y+12
        LD      R19, Y+
          CFI R19 SameValue
          CFI CFA_Y Y+11
        LD      R20, Y+
          CFI R20 SameValue
          CFI CFA_Y Y+10
        LD      R21, Y+
          CFI R21 SameValue
          CFI CFA_Y Y+9
        LD      R22, Y+
          CFI R22 SameValue
          CFI CFA_Y Y+8
        LD      R23, Y+
          CFI R23 SameValue
          CFI CFA_Y Y+7
        LD      R0, Y+
          CFI R0 SameValue
          CFI CFA_Y Y+6
        LD      R1, Y+
          CFI R1 SameValue
          CFI CFA_Y Y+5
        LD      R2, Y+
          CFI R2 SameValue
          CFI CFA_Y Y+4
        LD      R3, Y+
          CFI R3 SameValue
          CFI CFA_Y Y+3
        LD      R30, Y+
          CFI R30 SameValue
          CFI CFA_Y Y+2
        LD      R31, Y+
          CFI R31 SameValue
          CFI CFA_Y Y+1
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+0
        RETI
          CFI EndBlock cfiBlock0
//   18 

        RSEG CODE:CODE:NOROOT(1)
//   19   __monitor void disable()
??disable:
          CFI Block cfiBlock1 Using cfiCommon1
          CFI Function ??disable
//   20   {
        IN      R17, 0x3F
        CLI
//   21     isEnabled = false;
        LDI     R16, 0
        STS     ??isEnabled, R16
//   22     TIMSK0 = 0x00;
        STS     _A_TIMSK0, R16
//   23   }
        OUT     0x3F, R17
        RET
          CFI EndBlock cfiBlock1
        REQUIRE _A_TIMSK0
//   24 

        RSEG CODE:CODE:NOROOT(1)
//   25   __monitor void enable()
??enable:
          CFI Block cfiBlock2 Using cfiCommon1
          CFI Function ??enable
//   26   {
        IN      R17, 0x3F
        CLI
//   27     if (isEnabled)
        LDS     R16, ??isEnabled
        TST     R16
        BRNE    ??enable_1
//   28     {
//   29       return;
//   30     }
//   31 
//   32     TCNT0 = 0x00;
        LDI     R16, 0
        OUT     0x26, R16
//   33     TIMSK0 = (1<<OCIE0A);
        LDI     R16, 2
        STS     _A_TIMSK0, R16
//   34 
//   35     isEnabled = true;
        LDI     R16, 1
        STS     ??isEnabled, R16
//   36   }
??enable_1:
        OUT     0x3F, R17
        RET
          CFI EndBlock cfiBlock2
        REQUIRE _A_TCNT0
        REQUIRE _A_TIMSK0
//   37 

        RSEG CODE:CODE:NOROOT(1)
//   38   bool enabled()
??enabled:
          CFI Block cfiBlock3 Using cfiCommon1
          CFI Function ??enabled
//   39   {
//   40     return isEnabled;
        LDS     R16, ??isEnabled
        RET
          CFI EndBlock cfiBlock3
//   41   }
//   42 

        RSEG CODE:CODE:NOROOT(1)
//   43   __monitor void init()
??init:
          CFI Block cfiBlock4 Using cfiCommon1
          CFI Function ??init
//   44   {
        FUNCALL ??init, ??disable
        LOCFRAME CSTACK, 1, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        ST      -Y, R24
          CFI R24 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        IN      R24, 0x3F
        CLI
//   45     disable();
        RCALL   ??disable
//   46 
//   47     TCCR0A = (1<<WGM01);  // CTC mode
        LDI     R16, 2
        OUT     0x24, R16
//   48     TCCR0B = (1<<CS01);   // div 8
        OUT     0x25, R16
//   49     OCR0A = (((clockFrequency/8) * timerDiscreteness)/1000) - 1;
        LDI     R16, 79
        OUT     0x27, R16
//   50     OCR0B = 0x00;
        LDI     R16, 0
        OUT     0x28, R16
//   51     TCNT0 = 0x00;
        OUT     0x26, R16
//   52   }
        OUT     0x3F, R24
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock4
        REQUIRE _A_TCCR0A
        REQUIRE _A_TCCR0B
        REQUIRE _A_OCR0A
        REQUIRE _A_OCR0B
        REQUIRE _A_TCNT0

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,020H
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,021H
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,022H
__?EEARH:

        COMMON INTVEC:CODE:ROOT(1)
        ORG 56
`??irqTimer0??INTVEC 56`:
        JMP     ??irqTimer0

        RSEG INITTAB:CODE:NOROOT(0)
`?<Segment init: NEAR_Z>`:
        DC16    SFE(NEAR_Z) - SFB(NEAR_Z)
        DC16    SFB(NEAR_Z)
        DC16    0
        REQUIRE ?need_segment_init

        END
//   53 }
//   54 
//   55 #endif
//   56 
// 
//   6 bytes in segment ABSOLUTE
// 160 bytes in segment CODE
//   6 bytes in segment INITTAB
//   4 bytes in segment INTVEC
//   1 byte  in segment NEAR_Z
// 
// 160 bytes of CODE memory (+ 10 bytes shared)
//   1 byte  of DATA memory (+  6 bytes shared)
//
//Errors: none
//Warnings: none
