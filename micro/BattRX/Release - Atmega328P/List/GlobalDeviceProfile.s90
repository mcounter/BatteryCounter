///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V6.12.1.50500 for Atmel AVR       02/Aug/2014  01:50:51 /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    Source file  =  D:\Projects\BatteryCounter\_micro\BattRX\GlobalDevicePr /
//                    ofile.cpp                                               /
//    Command line =  D:\Projects\BatteryCounter\_micro\BattRX\GlobalDevicePr /
//                    ofile.cpp --cpu=m328p -ms -o                            /
//                    "D:\Projects\BatteryCounter\_micro\BattRX\Release -     /
//                    Atmega328P\Obj\" -D NDEBUG -lA                          /
//                    "D:\Projects\BatteryCounter\_micro\BattRX\Release -     /
//                    Atmega328P\List\" --initializers_in_flash               /
//                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e             /
//                    --eeprom_size 1024 --dlib --dlib_config "C:\Program     /
//                    Files (x86)\IAR Systems\Embedded Workbench              /
//                    6.0\avr\LIB\DLIB\dlAVR-3s-ec_mul-sf-n.h" --eec++ -Ohs   /
//    List file    =  D:\Projects\BatteryCounter\_micro\BattRX\Release -      /
//                    Atmega328P\List\GlobalDeviceProfile.s90                 /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME GlobalDeviceProfile

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__cpu", "3"
        RTMODEL "__cpu_name", "ATmega328P"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        EXTERN ?need_segment_init

        PUBWEAK `?<Segment init: NEAR_Z>`
        PUBLIC ??ApplicationVersion
        PUBLIC ??DeviceAdvancedSetup
        PUBLIC ??DeviceCounterConfig
        PUBLIC ??DeviceSerialNumber
        PUBLIC ??DeviceStatusCode
        PUBLIC ??MemorySecureTemplate
        PUBLIC ??UserInterfaceSetup
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
`?<Name GLOBAL 0>`  SYMBOL "GLOBAL"
`?<Name DeviceProfile 1>` SYMBOL "DeviceProfile", `?<Name GLOBAL 0>`
??ApplicationVersion SYMBOL "ApplicationVersion", `?<Name DeviceProfile 1>`
??DeviceAdvancedSetup SYMBOL "DeviceAdvancedSetup", `?<Name DeviceProfile 1>`
??DeviceCounterConfig SYMBOL "DeviceCounterConfig", `?<Name DeviceProfile 1>`
??DeviceSerialNumber SYMBOL "DeviceSerialNumber", `?<Name DeviceProfile 1>`
??DeviceStatusCode  SYMBOL "DeviceStatusCode", `?<Name DeviceProfile 1>`
??MemorySecureTemplate SYMBOL "MemorySecureTemplate", `?<Name DeviceProfile 1>`
??UserInterfaceSetup SYMBOL "UserInterfaceSetup", `?<Name DeviceProfile 1>`

// D:\Projects\BatteryCounter\_micro\BattRX\GlobalDeviceProfile.cpp
//    1 #ifndef __GLOBALDEVICEPROFILE_CPP_
//    2 #define __GLOBALDEVICEPROFILE_CPP_
//    3 
//    4 #include "GlobalDeviceProfile.h"
//    5 
//    6 namespace GLOBAL
//    7 {
//    8   namespace DeviceProfile
//    9   {

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   10     TApplicationVersion ApplicationVersion;
??ApplicationVersion:
        DS8 5

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   11     TDeviceSerialNumber DeviceSerialNumber;
??DeviceSerialNumber:
        DS8 24

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   12     TDeviceCounterConfig DeviceCounterConfig;
??DeviceCounterConfig:
        DS8 3

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   13     TDeviceAdvancedSetup DeviceAdvancedSetup;
??DeviceAdvancedSetup:
        DS8 15

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   14     TUserInterfaceSetup UserInterfaceSetup;
??UserInterfaceSetup:
        DS8 55
//   15 

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   16     TDeviceStatusCode DeviceStatusCode;
??DeviceStatusCode:
        DS8 1
//   17 

        RSEG NEAR_Z:DATA:NOROOT(0)
        REQUIRE `?<Segment init: NEAR_Z>`
//   18     unsigned char MemorySecureTemplate[EXT_MEMORY_SEGMENTSIZE];
??MemorySecureTemplate:
        DS8 16

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,020H
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,021H
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,022H
__?EEARH:

        RSEG INITTAB:CODE:NOROOT(0)
`?<Segment init: NEAR_Z>`:
        DC16    SFE(NEAR_Z) - SFB(NEAR_Z)
        DC16    SFB(NEAR_Z)
        DC16    0
        REQUIRE ?need_segment_init

        END
//   19   }
//   20 }
//   21 
//   22 #endif
//   23 
// 
//   6 bytes in segment INITTAB
// 119 bytes in segment NEAR_Z
// 
//   0 bytes of CODE memory (+ 6 bytes shared)
// 119 bytes of DATA memory
//
//Errors: none
//Warnings: none
