///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V6.12.1.50500 for Atmel AVR       27/Jul/2014  17:04:03 /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    Source file  =  D:\Projects\BatteryCounter\_micro\BattTX\UserInterfaceL /
//                    ang.cpp                                                 /
//    Command line =  D:\Projects\BatteryCounter\_micro\BattTX\UserInterfaceL /
//                    ang.cpp --cpu=m48pa -ms -o                              /
//                    "D:\Projects\BatteryCounter\_micro\BattTX\Release -     /
//                    Atmega48PA\Obj\" -D NDEBUG -lA                          /
//                    "D:\Projects\BatteryCounter\_micro\BattTX\Release -     /
//                    Atmega48PA\List\" --initializers_in_flash               /
//                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e             /
//                    --eeprom_size 256 --dlib --dlib_config "C:\Program      /
//                    Files (x86)\IAR Systems\Embedded Workbench              /
//                    6.0\avr\LIB\DLIB\dlAVR-1s-ec_mul-n.h" --eec++ -Ohs      /
//    List file    =  D:\Projects\BatteryCounter\_micro\BattTX\Release -      /
//                    Atmega48PA\List\UserInterfaceLang.s90                   /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME UserInterfaceLang

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__cpu", "1"
        RTMODEL "__cpu_name", "ATmega48PA"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        PUBLIC ??getString
        FUNCTION ??getString,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
`?<Name GLOBAL 0>`  SYMBOL "GLOBAL"
`?<Name DeviceProfile 1>` SYMBOL "DeviceProfile", `?<Name GLOBAL 0>`
??UserInterfaceSetup SYMBOL "UserInterfaceSetup", `?<Name DeviceProfile 1>`

        EXTERN ??UserInterfaceSetup

// D:\Projects\BatteryCounter\_micro\BattTX\UserInterfaceLang.cpp
//    1 #ifndef __USERINTERFACELANG_CPP_
//    2 #define __USERINTERFACELANG_CPP_
//    3 
//    4 #include "UserInterfaceLang.h"
//    5 #include "UserInterfaceLang_RUS.h"

        RSEG NEAR_F:CODE:NOROOT(0)
// static unsigned short const __flash UserInterface::textReference_RUS[119]
??textReference_RUS:
        DC16 0, 1, 11, 18, 29, 39, 48, 52, 55, 62, 72, 85, 96, 109, 116, 122
        DC16 136, 144, 152, 164, 173, 185, 198, 210, 219, 235, 251, 265, 270
        DC16 285, 294, 302, 308, 317, 325, 336, 343, 353, 359, 368, 375, 387
        DC16 395, 402, 416, 425, 433, 441, 446, 454, 462, 470, 482, 489, 504
        DC16 514, 529, 542, 552, 562, 567, 575, 583, 594, 600, 610, 620, 630
        DC16 645, 658, 669, 677, 688, 697, 704, 712, 722, 731, 742, 749, 756
        DC16 763, 766, 770, 777, 785, 790, 797, 801, 806, 811, 818, 827, 835
        DC16 842, 850, 853, 857, 865, 873, 881, 886, 901, 904, 908, 912, 914
        DC16 916, 918, 920, 922, 933, 941, 954, 967, 982, 990, 1003, 1018
        DC8 0, 9, 66, 174, 168, 79, 167, 72, 69, 72, 79, 6, 79, 172, 165, 160
        DC8 75, 65, 10, 67, 79, 88, 80, 65, 72, 69, 72, 165, 69, 9, 66, 195
        DC8 186, 187, 198, 192, 101, 189, 111, 8, 66, 186, 187, 198, 192, 101
        DC8 189, 111, 3, 72, 69, 84, 2, 224, 65, 6, 79, 191, 192, 101, 191, 195
        DC8 9, 72, 97, 99, 191, 112, 111, 185, 186, 184, 12, 79, 178, 99, 187
        DC8 121, 182, 184, 179, 97, 189, 184, 101, 10, 165, 189, 228, 111, 112
        DC8 188, 97, 229, 184, 199, 12, 224, 97, 191, 97, 32, 184, 32, 179, 112
        DC8 101, 188, 199, 6, 167, 101, 191, 189, 101, 101, 5, 179, 112, 101
        DC8 188, 199, 13, 65, 179, 191, 111, 188, 97, 191, 184, 192, 101, 99
        DC8 186, 184, 7, 169, 186, 112, 97, 184, 189, 97, 7, 168, 111, 227, 99
        DC8 192, 101, 191, 11, 190, 111, 99, 101, 191, 184, 191, 101, 187, 101
        DC8 185, 8, 224, 101, 191, 101, 186, 229, 184, 199, 11, 189, 97, 190
        DC8 112, 97, 179, 187, 101, 189, 184, 199, 12, 160, 101, 183, 32, 227
        DC8 101, 191, 101, 186, 229, 184, 184, 11, 224, 101, 187, 184, 191, 196
        DC8 32, 189, 97, 32, 50, 8, 165, 188, 184, 191, 97, 229, 184, 199, 15
        DC8 168, 111, 187, 189, 97, 199, 32, 227, 101, 191, 101, 186, 229, 184
        DC8 199, 15, 67, 188, 101, 193, 97, 189, 189, 195, 185, 32, 112, 101
        DC8 182, 184, 188, 13, 165, 189, 179, 101, 112, 191, 184, 112, 111, 179
        DC8 97, 191, 196, 4, 99, 192, 101, 191, 14, 66, 112, 101, 188, 199, 32
        DC8 227, 101, 191, 101, 186, 229, 184, 184, 8, 175, 186, 111, 189, 111
        DC8 188, 184, 199, 7, 197, 189, 101, 112, 180, 184, 184, 5, 80, 101
        DC8 182, 184, 188, 8, 197, 186, 111, 189, 111, 188, 184, 184, 7, 77
        DC8 184, 189, 184, 188, 121, 188, 10, 72, 101, 32, 99, 192, 184, 191
        DC8 97, 191, 196, 6, 179, 32, 188, 101, 189, 198, 9, 79, 191, 186, 187
        DC8 198, 192, 97, 191, 196, 5, 197, 186, 112, 97, 189, 8, 77, 97, 186
        DC8 99, 184, 188, 121, 188, 6, 168, 101, 112, 184, 111, 227, 11, 178
        DC8 101, 183, 227, 101, 185, 99, 191, 179, 184, 199, 7, 80, 97, 178
        DC8 111, 192, 97, 199, 6, 189, 101, 227, 101, 187, 199, 13, 168, 32, 66
        DC8 32, 67, 32, 171, 32, 168, 32, 67, 32, 66, 8, 80, 97, 178, 111, 191
        DC8 97, 101, 188, 7, 99, 101, 180, 111, 227, 189, 199, 7, 80, 97, 178
        DC8 111, 192, 184, 185, 4, 227, 101, 189, 196, 7, 50, 52, 32, 192, 97
        DC8 99, 97, 7, 49, 32, 99, 188, 101, 189, 97, 7, 50, 32, 99, 188, 101
        DC8 189, 195, 11, 99, 32, 190, 101, 112, 101, 112, 195, 179, 111, 188
        DC8 6, 168, 97, 112, 111, 187, 196, 14, 97, 227, 188, 184, 189, 184, 99
        DC8 191, 112, 97, 191, 111, 112, 97, 9, 188, 101, 189, 101, 227, 182
        DC8 101, 112, 97, 14, 84, 101, 186, 121, 230, 184, 185, 32, 190, 97
        DC8 112, 111, 187, 196, 12, 72, 111, 179, 195, 185, 32, 190, 97, 112
        DC8 111, 187, 196, 9, 168, 111, 179, 191, 111, 112, 184, 191, 101, 9
        DC8 165, 189, 191, 101, 112, 228, 101, 185, 99, 4, 177, 183, 195, 186
        DC8 7, 80, 121, 99, 99, 186, 184, 185, 7, 69, 110, 103, 108, 105, 115
        DC8 104, 10, 169, 186, 112, 97, 3, 189, 99, 196, 186, 97, 5, 67, 178
        DC8 112, 111, 99, 9, 99, 192, 101, 191, 192, 184, 186, 111, 179, 9, 164
        DC8 97, 179, 111, 227, 99, 186, 184, 101, 9, 189, 97, 99, 191, 112, 111
        DC8 185, 186, 184, 14, 79, 192, 184, 99, 191, 186, 97, 32, 227, 97, 189
        DC8 189, 195, 120, 12, 168, 111, 187, 189, 195, 185, 32, 99, 178, 112
        DC8 111, 99, 10, 165, 183, 179, 187, 101, 192, 101, 189, 184, 101, 7
        DC8 178, 97, 191, 97, 112, 101, 184, 10, 168, 111, 99, 101, 191, 184
        DC8 191, 101, 187, 184, 8, 99, 121, 188, 188, 97, 112, 189, 111, 6, 183
        DC8 97, 32, 192, 97, 99, 7, 183, 97, 32, 227, 101, 189, 196, 9, 183, 97
        DC8 32, 189, 101, 227, 101, 187, 198, 8, 183, 97, 32, 188, 101, 99, 199
        DC8 229, 10, 168, 101, 112, 101, 186, 112, 195, 191, 184, 199, 6, 66
        DC8 111, 193, 187, 111, 58, 6, 66, 195, 193, 187, 111, 58, 6, 66, 99
        DC8 101, 180, 111, 58, 2, 66, 120, 3, 66, 195, 120, 6, 177, 189, 179
        DC8 97, 112, 196, 7, 170, 101, 179, 112, 97, 187, 196, 4, 77, 97, 112
        DC8 191, 6, 65, 190, 112, 101, 187, 196, 3, 77, 97, 185, 4, 165, 198
        DC8 189, 196, 4, 165, 198, 187, 196, 6, 65, 179, 180, 121, 99, 191, 8
        DC8 67, 101, 189, 191, 199, 178, 112, 196, 7, 79, 186, 191, 199, 178
        DC8 112, 196, 6, 72, 111, 199, 178, 112, 196, 7, 224, 101, 186, 97, 178
        DC8 112, 196, 2, 188, 99, 3, 99, 101, 186, 7, 84, 97, 185, 188, 97, 121
        DC8 191, 7, 67, 188, 101, 189, 97, 32, 49, 7, 67, 188, 101, 189, 97, 32
        DC8 50, 4, 79, 178, 101, 227, 14, 66, 179, 101, 227, 184, 191, 101, 32
        DC8 190, 97, 112, 111, 187, 196, 2, 66, 120, 3, 66, 195, 120, 3, 168
        DC8 101, 112, 1, 171, 1, 224, 1, 72, 1, 77, 1, 67, 10, 75, 111, 187
        DC8 184, 192, 101, 99, 191, 179, 111, 7, 99, 178, 112, 111, 99, 111
        DC8 179, 12, 168, 101, 112, 101, 183, 97, 180, 112, 121, 183, 186, 184
        DC8 12, 67, 178, 112, 111, 99, 32, 227, 97, 189, 189, 195, 120, 14, 67
        DC8 178, 112, 111, 99, 32, 189, 97, 99, 191, 112, 111, 101, 186, 7, 168
        DC8 111, 190, 195, 191, 111, 186, 12, 179, 179, 111, 227, 97, 32, 190
        DC8 97, 112, 111, 187, 199, 14, 67, 101, 112, 184, 185, 189, 195, 185
        DC8 32, 189, 111, 188, 101, 112, 13, 164, 97, 112, 199, 227, 32, 178
        DC8 97, 191, 97, 112, 101, 184
//    6 
//    7 #include "GlobalSpace.h"
//    8 
//    9 namespace UserInterface
//   10 {

        RSEG CODE:CODE:NOROOT(1)
//   11   unsigned char __generic* getString(unsigned short _strId)
??getString:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ??getString
//   12   {
//   13     switch (GLOBAL::DeviceProfile::UserInterfaceSetup.language)
        LDS     R18, ??UserInterfaceSetup
        TST     R18
        BRNE    ??getString_1
//   14     {
//   15       case GLOBAL::DeviceProfile::UserInterfaceLanguage_RUS:
//   16         return (unsigned char __generic*)(textStrings_RUS + textReference_RUS[_strId]);
        LDI     R18, LOW((??textReference_RUS + 238))
        LDI     R19, HIGH((??textReference_RUS + 238))
        LSL     R16
        ROL     R17
        MOVW    R31:R30, R17:R16
        SUBI    R30, LOW((-(??textReference_RUS) & 0xFFFF))
        SBCI    R31, (-(??textReference_RUS) & 0xFFFF) >> 8
        LPM     R16, Z+
        LPM     R17, Z
        ADD     R16, R18
        ADC     R19, R17
        ORI     R19, 0x80
        MOV     R17, R19
        RET
//   17 
//   18     }
//   19 
//   20     return 0;
??getString_1:
        LDI     R16, 0
        LDI     R17, 0
        RET
          CFI EndBlock cfiBlock0
//   21   }

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,020H
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,021H
__?EEARL:

        END
//   22 }
//   23 
//   24 #endif
// 
//    42 bytes in segment CODE
// 1 270 bytes in segment NEAR_F
// 
// 1 312 bytes of CODE memory
//
//Errors: none
//Warnings: none
