///////////////////////////////////////////////////////////////////////////////
//                                                                            /
// IAR C/C++ Compiler V6.12.1.50500 for Atmel AVR       27/Jul/2014  21:57:07 /
// Copyright 1996-2012 IAR Systems AB.                                        /
//                                                                            /
//    Source file  =  D:\Projects\BatteryCounter\_micro\BattTX\DeviceManager. /
//                    cpp                                                     /
//    Command line =  D:\Projects\BatteryCounter\_micro\BattTX\DeviceManager. /
//                    cpp --cpu=m48pa -ms -o "D:\Projects\BatteryCounter\_mic /
//                    ro\BattTX\Release - Atmega48PA\Obj\" -D NDEBUG -lA      /
//                    "D:\Projects\BatteryCounter\_micro\BattTX\Release -     /
//                    Atmega48PA\List\" --initializers_in_flash               /
//                    -DENABLE_BIT_DEFINITIONS --do_cross_call -e             /
//                    --eeprom_size 256 --dlib --dlib_config "C:\Program      /
//                    Files (x86)\IAR Systems\Embedded Workbench              /
//                    6.0\avr\LIB\DLIB\dlAVR-1s-ec_mul-n.h" --eec++ -Ohs      /
//    List file    =  D:\Projects\BatteryCounter\_micro\BattTX\Release -      /
//                    Atmega48PA\List\DeviceManager.s90                       /
//                                                                            /
//                                                                            /
///////////////////////////////////////////////////////////////////////////////

        NAME DeviceManager

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "DLib"
        RTMODEL "__cpu", "1"
        RTMODEL "__cpu_name", "ATmega48PA"
        RTMODEL "__dlib_file_descriptor", "0"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        ERROR
//NOTE: This module defines or uses C++ features that are not
//      accessible from assembler code. Assembling this file will
//      not produce an equivalent object file to the one produced
//      by the C++ compiler.

        EXTERN ?ML_FLASH_GENERIC16_L07
        EXTERN ?SS_DIVMOD_L02
        EXTERN __eeget24_8
        EXTERN __eeget8_8
        EXTERN __eeput24_8
        EXTERN __eeput8_8

        PUBLIC ??EEDefaultDeviceTransmitterConfig
        PUBLIC ??EEDeviceStartAction
        PUBLIC ??EEDeviceTransmitterConfig
        PUBLIC ??init
        FUNCTION ??init,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??initModules
        FUNCTION ??initModules,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        PUBLIC ??loadDeviceConfiguration
        FUNCTION ??loadDeviceConfiguration,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??loadFactoryDefaults
        FUNCTION ??loadFactoryDefaults,0203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??moduleRunTable
        PUBLIC ??run_3
        FUNCTION ??run_3,061203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBLIC ??switchTransmitterMode
        FUNCTION ??switchTransmitterMode,021203H
        ARGFRAME CSTACK, 0, STACK
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 4, STACK
        PUBWEAK _A_DDRC
        PUBWEAK _A_DDRD
        PUBWEAK _A_MCUCR
        PUBWEAK _A_PIND
        PUBWEAK _A_PORTC
        PUBWEAK _A_PORTD
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
        
          CFI Common cfiCommon1 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Notused
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 SameValue
          CFI R1 SameValue
          CFI R2 SameValue
          CFI R3 SameValue
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 SameValue
          CFI R17 SameValue
          CFI R18 SameValue
          CFI R19 SameValue
          CFI R20 SameValue
          CFI R21 SameValue
          CFI R22 SameValue
          CFI R23 SameValue
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 SameValue
          CFI R31 SameValue
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI Y SameValue
          CFI EndCommon cfiCommon1
        
`?<Name GLOBAL 0>`  SYMBOL "GLOBAL"
`?<Name DeviceProfile 1>` SYMBOL "DeviceProfile", `?<Name GLOBAL 0>`
??ApplicationVersion SYMBOL "ApplicationVersion", `?<Name DeviceProfile 1>`
??DeviceTransmitterConfig SYMBOL "DeviceTransmitterConfig", `?<Name DeviceProfile 1>`
`?<Name DeviceManager 33>` SYMBOL "DeviceManager"
??EEDefaultDeviceTransmitterConfig SYMBOL "EEDefaultDeviceTransmitterConfig", `?<Name DeviceManager 33>`
??EEDeviceStartAction SYMBOL "EEDeviceStartAction", `?<Name DeviceManager 33>`
??EEDeviceTransmitterConfig SYMBOL "EEDeviceTransmitterConfig", `?<Name DeviceManager 33>`
??moduleRunTable    SYMBOL "moduleRunTable", `?<Name DeviceManager 33>`

        EXTERN ??ApplicationVersion
        EXTERN ??DeviceTransmitterConfig
        EXTERN ??disable
        FUNCTION ??disable,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??enable
        FUNCTION ??enable,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??init_1
        FUNCTION ??init_1,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??init_2
        FUNCTION ??init_2,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??init_3
        FUNCTION ??init_3,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??init_4
        FUNCTION ??init_4,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??init_5
        FUNCTION ??init_5,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??processIdleTime
        FUNCTION ??processIdleTime,0202H
        ARGFRAME RSTACK, 0, STACK
        EXTERN ??run
        FUNCTION ??run,0602H
        EXTERN ??run_1
        FUNCTION ??run_1,0602H
        EXTERN ??run_2
        FUNCTION ??run_2,0602H
        EXTERN ??schedule
        FUNCTION ??schedule,0202H
        ARGFRAME RSTACK, 0, STACK

// D:\Projects\BatteryCounter\_micro\BattTX\DeviceManager.cpp
//    1 #ifndef __DEVICEMANAGER_CPP_
//    2 #define __DEVICEMANAGER_CPP_
//    3 
//    4 #include "DeviceManager.h"

        ASEGN ABSOLUTE:DATA:NOROOT,055H
// union <unnamed> volatile __io _A_MCUCR
_A_MCUCR:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,02bH
// union <unnamed> volatile __io _A_PORTD
_A_PORTD:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,02aH
// union <unnamed> volatile __io _A_DDRD
_A_DDRD:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,029H
// union <unnamed> volatile __io _A_PIND
_A_PIND:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,028H
// union <unnamed> volatile __io _A_PORTC
_A_PORTC:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,027H
// union <unnamed> volatile __io _A_DDRC
_A_DDRC:
        DS8 1
//    5 #include "GlobalDeviceProfile.h"
//    6 
//    7 #include "GlobalADC.h"
//    8 #include "MultyThreading.h"
//    9 #include "Timer0Handler.h"
//   10 #include "KeyBoardDriver.h"
//   11 #include "IndicatorDriver.h"
//   12 
//   13 #define DEVICE_APPLICATION_VERSION  {0x01, 0x02, 0x01, 0x0001}
//   14 
//   15 using namespace GLOBAL::DeviceProfile;
//   16 
//   17 namespace DeviceManager
//   18 {

        RSEG NEAR_F:CODE:NOROOT(0)
//   19   __flash const TApplicationVersion FFApplicationVersion = DEVICE_APPLICATION_VERSION;
??FFApplicationVersion:
        DC8 1, 2, 1
        DC16 1
//   20 

        RSEG EEPROM_I:XDATA:NOROOT(0)
//   21   __eeprom TDeviceTransmitterConfig EEDefaultDeviceTransmitterConfig =
//   22     {
//   23       .transmitterMode = DeviceTransmitterMode_NoDetetion,
//   24 
//   25 #if (BATTERY_CONFIGURATION_SELECTED == BATTERY_CONFIGURATION_LI)
//   26     .batteryCutOff = 300,                                           //3.00 V
//   27 #else
//   28     .batteryCutOff = 200,                                           //2.00 V
//   29 #endif
//   30   };
//   31 
//   32   __eeprom TDeviceStartAction EEDeviceStartAction = DeviceStartAction_FirstStart;
??EEDeviceStartAction:
        DC8 1
??EEDefaultDeviceTransmitterConfig:
        DC8 0
        DC16 300
//   33 

        RSEG EEPROM_N:XDATA:NOROOT(0)
//   34   __eeprom __no_init TDeviceTransmitterConfig EEDeviceTransmitterConfig;
??EEDeviceTransmitterConfig:
        DS8 3
//   35 
//   36   void loadFactoryDefaults();
//   37   void loadDeviceConfiguration();
//   38   void initModules();
//   39 

        RSEG CODE:CODE:NOROOT(1)
//   40   void init()
??init:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ??init
//   41   {
//   42     bool isLoadFactoryDefaults = (EEDeviceStartAction == DeviceStartAction_FirstStart);
        FUNCALL ??init, ??init_1
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??init, ??init_2
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??init, ??init_3
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??init, ??init_4
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??init, ??init_5
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        LDI     R20, ??EEDeviceStartAction
        RCALL   __eeget8_8
        CPI     R16, 1
        BREQ    ??init_6
//   43 
//   44     if (!isLoadFactoryDefaults)
//   45     {
//   46       CONFIG_KEY_DIR = 0;
        CBI     0x0A, 0x05
//   47       CONFIG_KEY_PORT = 1;
        SBI     0x0B, 0x05
//   48 
//   49       isLoadFactoryDefaults = true;
//   50 
//   51       for (unsigned char i = 0; i < 100; i++)
        LDI     R16, 100
//   52       {
//   53         if (CONFIG_KEY_PIN)
??init_7:
        SBIC    0x09, 0x05
        RJMP    ??init_8
//   54         {
//   55           isLoadFactoryDefaults = false;
//   56           break;
//   57         }
//   58       }
        DEC     R16
        BRNE    ??init_7
//   59     }
//   60 
//   61     if (isLoadFactoryDefaults)
//   62     {
//   63       loadFactoryDefaults();
??init_6:
        RCALL   ?Subroutine2
??CrossCallReturnLabel_4:
        RCALL   __eeput8_8
//   64 
//   65       INDICATOR_LED_DIR = 1;
        SBI     0x07, 0x02
//   66       INDICATOR_LED_PORT = 1;
        SBI     0x08, 0x02
//   67       __delay_cycles(clockFrequency);
        LDI     R16, 255
        LDI     R17, 124
        SUBI    R16, 1
        SBCI    R17, 0
        BRNE    $-4
        RJMP    $+2
        NOP
//   68       INDICATOR_LED_PORT = 0;
        CBI     0x08, 0x02
//   69       __delay_cycles(clockFrequency / 2);
        LDI     R16, 127
        LDI     R17, 62
        SUBI    R16, 1
        SBCI    R17, 0
        BRNE    $-4
        RJMP    $+2
        NOP
//   70     }
//   71 
//   72     loadDeviceConfiguration();
??init_8:
        RCALL   ?Subroutine0
??CrossCallReturnLabel_0:
        SBRC    R31, 7
        RJMP    ??init_9
        ST      Z, R16
        STD     Z+1, R17
        STD     Z+2, R18
//   73 
//   74     initModules();
??init_9:
        RCALL   ?Subroutine1
??CrossCallReturnLabel_3:
        RJMP    ??init_5
          CFI EndBlock cfiBlock0
        REQUIRE _A_DDRD
        REQUIRE _A_PORTD
        REQUIRE _A_PIND
        REQUIRE _A_DDRC
        REQUIRE _A_PORTC
//   75   }
//   76 

        RSEG CODE:CODE:NOROOT(1)
//   77   void loadFactoryDefaults()
??loadFactoryDefaults:
          CFI Block cfiBlock1 Using cfiCommon0
          CFI Function ??loadFactoryDefaults
//   78   {
//   79     EEDeviceTransmitterConfig = EEDefaultDeviceTransmitterConfig;
        RCALL   ?Subroutine2
//   80 
//   81     EEDeviceStartAction = DeviceStartAction_Standard;
??CrossCallReturnLabel_5:
        RJMP    __eeput8_8
          CFI EndBlock cfiBlock1
//   82   }

        RSEG CODE:CODE:NOROOT(1)
?Subroutine2:
          CFI Block cfiCond2 Using cfiCommon0
          CFI Function ??init
          CFI Conditional ??CrossCallReturnLabel_4
          CFI CFA_SP SP+4
          CFI Block cfiCond3 Using cfiCommon0
          CFI (cfiCond3) Function ??loadFactoryDefaults
          CFI (cfiCond3) Conditional ??CrossCallReturnLabel_5
          CFI (cfiCond3) CFA_SP SP+4
          CFI Block cfiPicker4 Using cfiCommon1
          CFI (cfiPicker4) NoFunction
          CFI (cfiPicker4) Picker
        LDI     R20, LOW((??EEDeviceStartAction + 1))
        RCALL   __eeget24_8
        LDI     R20, ??EEDeviceTransmitterConfig
        RCALL   __eeput24_8
        LDI     R16, 0
        LDI     R20, ??EEDeviceStartAction
        RET
          CFI EndBlock cfiCond2
          CFI EndBlock cfiCond3
          CFI EndBlock cfiPicker4
//   83 

        RSEG CODE:CODE:NOROOT(1)
//   84   void loadDeviceConfiguration()
??loadDeviceConfiguration:
          CFI Block cfiBlock5 Using cfiCommon0
          CFI Function ??loadDeviceConfiguration
//   85   {
//   86     ApplicationVersion = FFApplicationVersion;
        RCALL   ?Subroutine0
//   87     DeviceTransmitterConfig = EEDeviceTransmitterConfig;
??CrossCallReturnLabel_1:
        SBRC    R31, 7
        RJMP    ??loadDeviceConfiguration_1
        ST      Z, R16
        STD     Z+1, R17
        STD     Z+2, R18
//   88   }
??loadDeviceConfiguration_1:
        RET
          CFI EndBlock cfiBlock5

        RSEG CODE:CODE:NOROOT(1)
?Subroutine0:
          CFI Block cfiCond6 Using cfiCommon0
          CFI Function ??init
          CFI Conditional ??CrossCallReturnLabel_0
          CFI CFA_SP SP+4
          CFI Block cfiCond7 Using cfiCommon0
          CFI (cfiCond7) Function ??loadDeviceConfiguration
          CFI (cfiCond7) Conditional ??CrossCallReturnLabel_1
          CFI (cfiCond7) CFA_SP SP+4
          CFI Block cfiPicker8 Using cfiCommon1
          CFI (cfiPicker8) NoFunction
          CFI (cfiPicker8) Picker
        LDI     R16, LOW(??ApplicationVersion)
        LDI     R17, (??ApplicationVersion) >> 8
        LDI     R30, LOW(??FFApplicationVersion)
        LDI     R31, (??FFApplicationVersion) >> 8
        LDI     R20, 5
        LDI     R21, 0
        RCALL   ?ML_FLASH_GENERIC16_L07
        LDI     R20, ??EEDeviceTransmitterConfig
        RCALL   __eeget24_8
        LDI     R30, LOW(??DeviceTransmitterConfig)
        LDI     R31, (??DeviceTransmitterConfig) >> 8
        RET
          CFI EndBlock cfiCond6
          CFI EndBlock cfiCond7
          CFI EndBlock cfiPicker8
//   89 

        RSEG CODE:CODE:NOROOT(1)
//   90   void initModules()
??initModules:
          CFI Block cfiBlock9 Using cfiCommon0
          CFI Function ??initModules
//   91   {
//   92     Timer0Handler::init();
        FUNCALL ??initModules, ??init_1
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??initModules, ??init_2
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??initModules, ??init_3
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??initModules, ??init_4
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??initModules, ??init_5
        LOCFRAME CSTACK, 0, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        RCALL   ?Subroutine1
//   93 
//   94     GLOBAL::ADC::init(DeviceTransmitterConfig.batteryCutOff);
//   95     GLOBAL::MultyThreading::init();
//   96 
//   97     KeyBoardDriver::init();
//   98     IndicatorDriver::init();
??CrossCallReturnLabel_2:
        RJMP    ??init_5
          CFI EndBlock cfiBlock9
//   99   }

        RSEG CODE:CODE:NOROOT(1)
?Subroutine1:
          CFI Block cfiCond10 Using cfiCommon0
          CFI Function ??init
          CFI Conditional ??CrossCallReturnLabel_3
          CFI CFA_SP SP+4
          CFI Block cfiCond11 Using cfiCommon0
          CFI (cfiCond11) Function ??initModules
          CFI (cfiCond11) Conditional ??CrossCallReturnLabel_2
          CFI (cfiCond11) CFA_SP SP+4
          CFI Block cfiPicker12 Using cfiCommon1
          CFI (cfiPicker12) NoFunction
          CFI (cfiPicker12) Picker
        RCALL   ??init_1
        LDI     R30, LOW(??DeviceTransmitterConfig)
        LDI     R31, (??DeviceTransmitterConfig) >> 8
        LDD     R16, Z+1
        LDD     R17, Z+2
        RCALL   ??init_2
        RCALL   ??init_3
        RJMP    ??init_4
          CFI EndBlock cfiCond10
          CFI EndBlock cfiCond11
          CFI EndBlock cfiPicker12
//  100 
//  101 #define MODULE_RUN_TABLE_SIZE         (3)

        RSEG NEAR_F:CODE:NOROOT(0)
//  102 __flash const void* moduleRunTable[MODULE_RUN_TABLE_SIZE] =
??moduleRunTable:
        DC16 ??run/2, ??run_1/2, ??run_2/2
//  103 {
//  104   (void*)(&(GLOBAL::ADC::run)),
//  105   (void*)(&(IndicatorDriver::run)),
//  106   (void*)(&(KeyBoardDriver::run)),
//  107 };
//  108 

        RSEG CODE:CODE:NOROOT(1)
//  109   void run()
??run_3:
          CFI Block cfiBlock13 Using cfiCommon0
          CFI Function ??run_3
//  110   {
        FUNCALL ??run_3, ??schedule
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run_3
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??run_3, ??processIdleTime
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        ST      -Y, R25
          CFI R25 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R24
          CFI R24 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
//  111     IndicatorDriver::schedule(2, 250, 500);
        LDI     R20, 244
        LDI     R21, 1
        LDI     R18, 250
        LDI     R19, 0
        LDI     R16, 2
        RCALL   ??schedule
//  112 
//  113     unsigned char curProcess = 0;
        LDI     R24, 0
//  114 
//  115     while (true)
//  116     {
//  117       if (moduleRunTable[curProcess])
??run_4:
        LDI     R25, 0
        MOVW    R17:R16, R25:R24
        LSL     R16
        ROL     R17
        MOVW    R31:R30, R17:R16
        SUBI    R30, LOW((-(??moduleRunTable) & 0xFFFF))
        SBCI    R31, (-(??moduleRunTable) & 0xFFFF) >> 8
        LPM     R16, Z+
        LPM     R17, Z
        MOV     R18, R16
        OR      R18, R17
        BREQ    ??run_5
//  118       {
//  119         (*(void(*)(void))(moduleRunTable[curProcess]))();
        MOVW    R31:R30, R17:R16
        ICALL
//  120       }
//  121 
//  122       __watchdog_reset();
??run_5:
        WDR
//  123 
//  124       curProcess = (curProcess + 1) % MODULE_RUN_TABLE_SIZE;
        ADIW    R25:R24, 1
        MOVW    R17:R16, R25:R24
        LDI     R20, 3
        LDI     R21, 0
        RCALL   ?SS_DIVMOD_L02
        MOV     R24, R20
//  125 
//  126       if (curProcess == 0)
        TST     R20
        BRNE    ??run_4
//  127       {
//  128         MCUCR |= (1<<SE); //Enable go to sleep mode
        IN      R16, 0x35
        ORI     R16, 0x01
        OUT     0x35, R16
//  129         __sleep();        //Go to sleep mode
        SLEEP
//  130 
//  131         __no_operation();
        NOP
//  132         __no_operation();
        NOP
//  133         __no_operation();
        NOP
//  134         __no_operation();
        NOP
//  135         __no_operation();
        NOP
//  136 
//  137         GLOBAL::MultyThreading::processIdleTime();
        RCALL   ??processIdleTime
        RJMP    ??run_4
          CFI EndBlock cfiBlock13
        REQUIRE _A_MCUCR
//  138       }
//  139     }
//  140   }
//  141 

        RSEG CODE:CODE:NOROOT(1)
//  142   void switchTransmitterMode()
??switchTransmitterMode:
          CFI Block cfiBlock14 Using cfiCommon0
          CFI Function ??switchTransmitterMode
//  143   {
        FUNCALL ??switchTransmitterMode, ??disable
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??switchTransmitterMode, ??enable
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??switchTransmitterMode, ??schedule
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        FUNCALL ??switchTransmitterMode, ??schedule
        LOCFRAME CSTACK, 2, STACK
        LOCFRAME RSTACK, 2, STACK
        ARGFRAME RSTACK, 0, STACK
        ST      -Y, R25
          CFI R25 Frame(CFA_Y, -1)
          CFI CFA_Y Y+1
        ST      -Y, R24
          CFI R24 Frame(CFA_Y, -2)
          CFI CFA_Y Y+2
//  144     DeviceTransmitterConfig.transmitterMode = (TDeviceTransmitterMode)((DeviceTransmitterConfig.transmitterMode + 1) % (DeviceTransmitterMode_WithDetection + 1));
        LDS     R24, ??DeviceTransmitterConfig
        LDI     R25, 0
        ADIW    R25:R24, 1
        MOVW    R17:R16, R25:R24
        LDI     R20, 2
        LDI     R21, 0
        RCALL   ?SS_DIVMOD_L02
        STS     ??DeviceTransmitterConfig, R20
//  145     EEDeviceTransmitterConfig.transmitterMode = DeviceTransmitterConfig.transmitterMode;
        LDS     R16, ??DeviceTransmitterConfig
        LDI     R20, ??EEDeviceTransmitterConfig
        RCALL   __eeput8_8
//  146 
//  147     Timer0Handler::disable();
        RCALL   ??disable
//  148     Timer0Handler::enable();
        RCALL   ??enable
//  149 
//  150     switch (DeviceTransmitterConfig.transmitterMode)
        LDS     R16, ??DeviceTransmitterConfig
        TST     R16
        BREQ    ??switchTransmitterMode_1
        DEC     R16
        BREQ    ??switchTransmitterMode_2
        RJMP    ??switchTransmitterMode_3
//  151     {
//  152       case DeviceTransmitterMode_NoDetetion:
//  153         IndicatorDriver::schedule(2, 250, 250);
??switchTransmitterMode_1:
        LDI     R20, 250
        LDI     R21, 0
        MOVW    R19:R18, R21:R20
        LDI     R16, 2
        RJMP    ??switchTransmitterMode_4
//  154         break;
//  155 
//  156       case DeviceTransmitterMode_WithDetection:
//  157         IndicatorDriver::schedule(4, 250, 250);
??switchTransmitterMode_2:
        LDI     R20, 250
        LDI     R21, 0
        MOVW    R19:R18, R21:R20
        LDI     R16, 4
??switchTransmitterMode_4:
        RCALL   ??schedule
//  158         break;
//  159     }
//  160   }
??switchTransmitterMode_3:
        LD      R24, Y+
          CFI R24 SameValue
          CFI CFA_Y Y+1
        LD      R25, Y+
          CFI R25 SameValue
          CFI CFA_Y Y+0
        RET
          CFI EndBlock cfiBlock14

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,020H
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,021H
__?EEARL:

        END
//  161 }
//  162 
//  163 #endif
//  164 
// 
//   6 bytes in segment ABSOLUTE
// 314 bytes in segment CODE
//   4 bytes in segment EEPROM_I
//   3 bytes in segment EEPROM_N
//  11 bytes in segment NEAR_F
// 
// 325 bytes of CODE  memory
//   0 bytes of DATA  memory (+ 6 bytes shared)
//   7 bytes of XDATA memory
//
//Errors: none
//Warnings: none
